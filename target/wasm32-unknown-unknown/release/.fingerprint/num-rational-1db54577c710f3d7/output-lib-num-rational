{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":36671,"byte_end":36760,"line_start":1229,"line_end":1231,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    fn from_i128(n: i128) -> Option<Self> {","highlight_start":5,"highlight_end":44},{"text":"        Some(Ratio::from_integer(n.into()))","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":36674,"byte_end":36683,"line_start":1229,"line_end":1229,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    fn from_i128(n: i128) -> Option<Self> {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1229:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1229\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m    fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Some(Ratio::from_integer(n.into()))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":36880,"byte_end":36969,"line_start":1238,"line_end":1240,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    fn from_u128(n: u128) -> Option<Self> {","highlight_start":5,"highlight_end":44},{"text":"        Some(Ratio::from_integer(n.into()))","highlight_start":1,"highlight_end":44},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":36883,"byte_end":36892,"line_start":1238,"line_end":1238,"column_start":8,"column_end":17,"is_primary":true,"text":[{"text":"    fn from_u128(n: u128) -> Option<Self> {","highlight_start":8,"highlight_end":17}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1238:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1238\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m    fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Some(Ratio::from_integer(n.into()))\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38109,"byte_end":38155,"line_start":1283,"line_end":1283,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"from_primitive_integer!(i8, approximate_float);","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38109,"byte_end":38155,"line_start":1283,"line_end":1283,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"from_primitive_integer!(i8, approximate_float);","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(i8, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38109,"byte_end":38155,"line_start":1283,"line_end":1283,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"from_primitive_integer!(i8, approximate_float);","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38109,"byte_end":38155,"line_start":1283,"line_end":1283,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"from_primitive_integer!(i8, approximate_float);","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(i8, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38157,"byte_end":38204,"line_start":1284,"line_end":1284,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i16, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38157,"byte_end":38204,"line_start":1284,"line_end":1284,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i16, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(i16, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38157,"byte_end":38204,"line_start":1284,"line_end":1284,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i16, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38157,"byte_end":38204,"line_start":1284,"line_end":1284,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i16, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(i16, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38206,"byte_end":38253,"line_start":1285,"line_end":1285,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i32, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38206,"byte_end":38253,"line_start":1285,"line_end":1285,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i32, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(i32, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38206,"byte_end":38253,"line_start":1285,"line_end":1285,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i32, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38206,"byte_end":38253,"line_start":1285,"line_end":1285,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i32, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(i32, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38255,"byte_end":38302,"line_start":1286,"line_end":1286,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i64, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38255,"byte_end":38302,"line_start":1286,"line_end":1286,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i64, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(i64, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38255,"byte_end":38302,"line_start":1286,"line_end":1286,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i64, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38255,"byte_end":38302,"line_start":1286,"line_end":1286,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i64, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(i64, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38371,"byte_end":38420,"line_start":1289,"line_end":1289,"column_start":1,"column_end":50,"is_primary":false,"text":[{"text":"from_primitive_integer!(isize, approximate_float);","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38371,"byte_end":38420,"line_start":1289,"line_end":1289,"column_start":1,"column_end":50,"is_primary":false,"text":[{"text":"from_primitive_integer!(isize, approximate_float);","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(isize, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38371,"byte_end":38420,"line_start":1289,"line_end":1289,"column_start":1,"column_end":50,"is_primary":false,"text":[{"text":"from_primitive_integer!(isize, approximate_float);","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38371,"byte_end":38420,"line_start":1289,"line_end":1289,"column_start":1,"column_end":50,"is_primary":false,"text":[{"text":"from_primitive_integer!(isize, approximate_float);","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(isize, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38423,"byte_end":38478,"line_start":1291,"line_end":1291,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"from_primitive_integer!(u8, approximate_float_unsigned);","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38423,"byte_end":38478,"line_start":1291,"line_end":1291,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"from_primitive_integer!(u8, approximate_float_unsigned);","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(u8, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38423,"byte_end":38478,"line_start":1291,"line_end":1291,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"from_primitive_integer!(u8, approximate_float_unsigned);","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38423,"byte_end":38478,"line_start":1291,"line_end":1291,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"from_primitive_integer!(u8, approximate_float_unsigned);","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(u8, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38480,"byte_end":38536,"line_start":1292,"line_end":1292,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u16, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38480,"byte_end":38536,"line_start":1292,"line_end":1292,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u16, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(u16, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38480,"byte_end":38536,"line_start":1292,"line_end":1292,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u16, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38480,"byte_end":38536,"line_start":1292,"line_end":1292,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u16, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(u16, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38538,"byte_end":38594,"line_start":1293,"line_end":1293,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u32, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38538,"byte_end":38594,"line_start":1293,"line_end":1293,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u32, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(u32, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38538,"byte_end":38594,"line_start":1293,"line_end":1293,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u32, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38538,"byte_end":38594,"line_start":1293,"line_end":1293,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u32, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(u32, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38596,"byte_end":38652,"line_start":1294,"line_end":1294,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u64, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38596,"byte_end":38652,"line_start":1294,"line_end":1294,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u64, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(u64, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38596,"byte_end":38652,"line_start":1294,"line_end":1294,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u64, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38596,"byte_end":38652,"line_start":1294,"line_end":1294,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u64, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(u64, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_i128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37430,"byte_end":37562,"line_start":1259,"line_end":1261,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38730,"byte_end":38788,"line_start":1297,"line_end":1297,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"from_primitive_integer!(usize, approximate_float_unsigned);","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37433,"byte_end":37442,"line_start":1259,"line_end":1259,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_i8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38730,"byte_end":38788,"line_start":1297,"line_end":1297,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"from_primitive_integer!(usize, approximate_float_unsigned);","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_i128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1259:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1259\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_i128(n: i128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_i8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(usize, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"method `from_u128` is not a member of trait `FromPrimitive`","code":{"code":"E0407","explanation":"A definition of a method not in the implemented trait was given in a trait\nimplementation.\n\nErroneous code example:\n\n```compile_fail,E0407\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // error: method `b` is not a member of trait `Foo`\n}\n```\n\nPlease verify you didn't misspell the method name and you used the correct\ntrait. First example:\n\n```\ntrait Foo {\n    fn a();\n    fn b();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n    fn b() {} // ok!\n}\n```\n\nSecond example:\n\n```\ntrait Foo {\n    fn a();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn a() {}\n}\n\nimpl Bar {\n    fn b() {}\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37748,"byte_end":37880,"line_start":1268,"line_end":1270,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":13,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":"not a member of trait `FromPrimitive`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38730,"byte_end":38788,"line_start":1297,"line_end":1297,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"from_primitive_integer!(usize, approximate_float_unsigned);","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"there is an associated function with a similar name","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37751,"byte_end":37760,"line_start":1268,"line_end":1268,"column_start":16,"column_end":25,"is_primary":true,"text":[{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":16,"highlight_end":25}],"label":null,"suggested_replacement":"from_u8","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38730,"byte_end":38788,"line_start":1297,"line_end":1297,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"from_primitive_integer!(usize, approximate_float_unsigned);","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0407]\u001b[0m\u001b[0m\u001b[1m: method `from_u128` is not a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1268:13\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1268\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m            fn from_u128(n: u128) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: there is an associated function with a similar name: `from_u8`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1270\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a member of trait `FromPrimitive`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0mfrom_primitive_integer!(usize, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38109,"byte_end":38155,"line_start":1283,"line_end":1283,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"from_primitive_integer!(i8, approximate_float);","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38109,"byte_end":38155,"line_start":1283,"line_end":1283,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"from_primitive_integer!(i8, approximate_float);","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i8, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38109,"byte_end":38155,"line_start":1283,"line_end":1283,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"from_primitive_integer!(i8, approximate_float);","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38109,"byte_end":38155,"line_start":1283,"line_end":1283,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"from_primitive_integer!(i8, approximate_float);","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1283\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i8, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38157,"byte_end":38204,"line_start":1284,"line_end":1284,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i16, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38157,"byte_end":38204,"line_start":1284,"line_end":1284,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i16, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i16, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38157,"byte_end":38204,"line_start":1284,"line_end":1284,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i16, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38157,"byte_end":38204,"line_start":1284,"line_end":1284,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i16, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1284\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i16, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38206,"byte_end":38253,"line_start":1285,"line_end":1285,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i32, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38206,"byte_end":38253,"line_start":1285,"line_end":1285,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i32, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i32, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38206,"byte_end":38253,"line_start":1285,"line_end":1285,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i32, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38206,"byte_end":38253,"line_start":1285,"line_end":1285,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i32, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1285\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i32, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38255,"byte_end":38302,"line_start":1286,"line_end":1286,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i64, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38255,"byte_end":38302,"line_start":1286,"line_end":1286,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i64, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i64, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38255,"byte_end":38302,"line_start":1286,"line_end":1286,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i64, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38255,"byte_end":38302,"line_start":1286,"line_end":1286,"column_start":1,"column_end":48,"is_primary":false,"text":[{"text":"from_primitive_integer!(i64, approximate_float);","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i64, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38371,"byte_end":38420,"line_start":1289,"line_end":1289,"column_start":1,"column_end":50,"is_primary":false,"text":[{"text":"from_primitive_integer!(isize, approximate_float);","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38371,"byte_end":38420,"line_start":1289,"line_end":1289,"column_start":1,"column_end":50,"is_primary":false,"text":[{"text":"from_primitive_integer!(isize, approximate_float);","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(isize, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38371,"byte_end":38420,"line_start":1289,"line_end":1289,"column_start":1,"column_end":50,"is_primary":false,"text":[{"text":"from_primitive_integer!(isize, approximate_float);","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38371,"byte_end":38420,"line_start":1289,"line_end":1289,"column_start":1,"column_end":50,"is_primary":false,"text":[{"text":"from_primitive_integer!(isize, approximate_float);","highlight_start":1,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1289\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(isize, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38423,"byte_end":38478,"line_start":1291,"line_end":1291,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"from_primitive_integer!(u8, approximate_float_unsigned);","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38423,"byte_end":38478,"line_start":1291,"line_end":1291,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"from_primitive_integer!(u8, approximate_float_unsigned);","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u8, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38423,"byte_end":38478,"line_start":1291,"line_end":1291,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"from_primitive_integer!(u8, approximate_float_unsigned);","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38423,"byte_end":38478,"line_start":1291,"line_end":1291,"column_start":1,"column_end":56,"is_primary":false,"text":[{"text":"from_primitive_integer!(u8, approximate_float_unsigned);","highlight_start":1,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u8, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38480,"byte_end":38536,"line_start":1292,"line_end":1292,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u16, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38480,"byte_end":38536,"line_start":1292,"line_end":1292,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u16, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u16, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38480,"byte_end":38536,"line_start":1292,"line_end":1292,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u16, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38480,"byte_end":38536,"line_start":1292,"line_end":1292,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u16, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1292\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u16, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38538,"byte_end":38594,"line_start":1293,"line_end":1293,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u32, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38538,"byte_end":38594,"line_start":1293,"line_end":1293,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u32, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u32, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38538,"byte_end":38594,"line_start":1293,"line_end":1293,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u32, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38538,"byte_end":38594,"line_start":1293,"line_end":1293,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u32, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1293\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u32, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38596,"byte_end":38652,"line_start":1294,"line_end":1294,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u64, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38596,"byte_end":38652,"line_start":1294,"line_end":1294,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u64, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u64, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38596,"byte_end":38652,"line_start":1294,"line_end":1294,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u64, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38596,"byte_end":38652,"line_start":1294,"line_end":1294,"column_start":1,"column_end":57,"is_primary":false,"text":[{"text":"from_primitive_integer!(u64, approximate_float_unsigned);","highlight_start":1,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1294\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u64, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_i128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":14975,"byte_end":15010,"line_start":429,"line_end":429,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_i16(n: i16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_i16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38730,"byte_end":38788,"line_start":1297,"line_end":1297,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"from_primitive_integer!(usize, approximate_float_unsigned);","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37511,"byte_end":37520,"line_start":1260,"line_end":1260,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_i16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38730,"byte_end":38788,"line_start":1297,"line_end":1297,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"from_primitive_integer!(usize, approximate_float_unsigned);","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_i128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1260:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_i16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(usize, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:429:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m429\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i16(n: i16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_i16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot find method or associated constant `from_u128` in trait `FromPrimitive`","code":{"code":"E0576","explanation":"An associated item wasn't found in the given type.\n\nErroneous code example:\n\n```compile_fail,E0576\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::You; // error!\n}\n```\n\nIn this example, we tried to use the non-existent associated type `You` of the\n`Hello` trait. To fix this error, use an existing associated type:\n\n```\ntrait Hello {\n    type Who;\n\n    fn hello() -> <Self as Hello>::Who; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":16775,"byte_end":16810,"line_start":474,"line_end":474,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn from_u16(n: u16) -> Option<Self> {","highlight_start":5,"highlight_end":40}],"label":"similarly named associated function `from_u16` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38730,"byte_end":38788,"line_start":1297,"line_end":1297,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"from_primitive_integer!(usize, approximate_float_unsigned);","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"an associated function with a similar name exists","code":null,"level":"help","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37829,"byte_end":37838,"line_start":1269,"line_end":1269,"column_start":42,"column_end":51,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":42,"highlight_end":51}],"label":null,"suggested_replacement":"from_u16","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38730,"byte_end":38788,"line_start":1297,"line_end":1297,"column_start":1,"column_end":59,"is_primary":false,"text":[{"text":"from_primitive_integer!(usize, approximate_float_unsigned);","highlight_start":1,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0576]\u001b[0m\u001b[0m\u001b[1m: cannot find method or associated constant `from_u128` in trait `FromPrimitive`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1269:42\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1269\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: an associated function with a similar name exists: `from_u16`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1297\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(usize, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:474:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m474\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u16(n: u16) -> Option<Self> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12msimilarly named associated function `from_u16` defined here\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `BigInt: From<i128>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":36744,"byte_end":36752,"line_start":1230,"line_end":1230,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"        Some(Ratio::from_integer(n.into()))","highlight_start":34,"highlight_end":42}],"label":"the trait `From<i128>` is not implemented for `BigInt`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":36724,"byte_end":36743,"line_start":1230,"line_end":1230,"column_start":14,"column_end":33,"is_primary":false,"text":[{"text":"        Some(Ratio::from_integer(n.into()))","highlight_start":14,"highlight_end":33}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following implementations were found:\n  <BigInt as From<BigUint>>\n  <BigInt as From<i16>>\n  <BigInt as From<i32>>\n  <BigInt as From<i64>>\nand 7 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `Into<BigInt>` for `i128`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `BigInt: From<i128>` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1230:34\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Some(Ratio::from_integer(n.into()))\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<i128>` is not implemented for `BigInt`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following implementations were found:\u001b[0m\n\u001b[0m               <BigInt as From<BigUint>>\u001b[0m\n\u001b[0m               <BigInt as From<i16>>\u001b[0m\n\u001b[0m               <BigInt as From<i32>>\u001b[0m\n\u001b[0m               <BigInt as From<i64>>\u001b[0m\n\u001b[0m             and 7 others\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Into<BigInt>` for `i128`\u001b[0m\n\n"}
{"message":"the trait bound `BigInt: From<u128>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":36953,"byte_end":36961,"line_start":1239,"line_end":1239,"column_start":34,"column_end":42,"is_primary":true,"text":[{"text":"        Some(Ratio::from_integer(n.into()))","highlight_start":34,"highlight_end":42}],"label":"the trait `From<u128>` is not implemented for `BigInt`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":36933,"byte_end":36952,"line_start":1239,"line_end":1239,"column_start":14,"column_end":33,"is_primary":false,"text":[{"text":"        Some(Ratio::from_integer(n.into()))","highlight_start":14,"highlight_end":33}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following implementations were found:\n  <BigInt as From<BigUint>>\n  <BigInt as From<i16>>\n  <BigInt as From<i32>>\n  <BigInt as From<i64>>\nand 7 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `Into<BigInt>` for `u128`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `BigInt: From<u128>` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1239:34\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Some(Ratio::from_integer(n.into()))\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<u128>` is not implemented for `BigInt`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following implementations were found:\u001b[0m\n\u001b[0m               <BigInt as From<BigUint>>\u001b[0m\n\u001b[0m               <BigInt as From<i16>>\u001b[0m\n\u001b[0m               <BigInt as From<i32>>\u001b[0m\n\u001b[0m               <BigInt as From<i64>>\u001b[0m\n\u001b[0m             and 7 others\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `Into<BigInt>` for `u128`\u001b[0m\n\n"}
{"message":"the trait bound `i128: FromPrimitive` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37312,"byte_end":37345,"line_start":1255,"line_end":1255,"column_start":17,"column_end":50,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":17,"highlight_end":50}],"label":"the trait `FromPrimitive` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by `from_i64`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":15481,"byte_end":15517,"line_start":442,"line_end":442,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"    fn from_i64(n: i64) -> Option<Self>;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: FromPrimitive` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1255:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `FromPrimitive` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `from_i64`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:442:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m442\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i64(n: i64) -> Option<Self>;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37353,"byte_end":37372,"line_start":1255,"line_end":1255,"column_start":58,"column_end":77,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":58,"highlight_end":77}],"label":"the trait `Integer` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by `Ratio::<T>::from_integer`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":3192,"byte_end":3229,"line_start":118,"line_end":118,"column_start":5,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn from_integer(t: T) -> Ratio<T> {","highlight_start":5,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1255:58\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `Ratio::<T>::from_integer`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:118:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn from_integer(t: T) -> Ratio<T> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37312,"byte_end":37373,"line_start":1255,"line_end":1255,"column_start":17,"column_end":78,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":17,"highlight_end":78}],"label":"the trait `Integer` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `Ratio<T>`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":2885,"byte_end":2892,"line_start":107,"line_end":107,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"impl<T: Clone + Integer> Ratio<T> {","highlight_start":17,"highlight_end":24}],"label":"required by this bound in `Ratio<T>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1255:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Ratio<T>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:107:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl<T: Clone + Integer> Ratio<T> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Ratio<T>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: FromPrimitive` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37630,"byte_end":37663,"line_start":1264,"line_end":1264,"column_start":17,"column_end":50,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":17,"highlight_end":50}],"label":"the trait `FromPrimitive` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by `traits::FromPrimitive::from_u64`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":17281,"byte_end":17317,"line_start":487,"line_end":487,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"    fn from_u64(n: u64) -> Option<Self>;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: FromPrimitive` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1264:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `FromPrimitive` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `traits::FromPrimitive::from_u64`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:487:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m487\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u64(n: u64) -> Option<Self>;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37671,"byte_end":37690,"line_start":1264,"line_end":1264,"column_start":58,"column_end":77,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":58,"highlight_end":77}],"label":"the trait `Integer` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by `Ratio::<T>::from_integer`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":3192,"byte_end":3229,"line_start":118,"line_end":118,"column_start":5,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn from_integer(t: T) -> Ratio<T> {","highlight_start":5,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1264:58\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `Ratio::<T>::from_integer`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:118:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn from_integer(t: T) -> Ratio<T> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37630,"byte_end":37691,"line_start":1264,"line_end":1264,"column_start":17,"column_end":78,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":17,"highlight_end":78}],"label":"the trait `Integer` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `Ratio<T>`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":2885,"byte_end":2892,"line_start":107,"line_end":107,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"impl<T: Clone + Integer> Ratio<T> {","highlight_start":17,"highlight_end":24}],"label":"required by this bound in `Ratio<T>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1264:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Ratio<T>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:107:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl<T: Clone + Integer> Ratio<T> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Ratio<T>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37948,"byte_end":37955,"line_start":1273,"line_end":1273,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `Integer` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39309,"byte_end":39326,"line_start":1309,"line_end":1309,"column_start":4,"column_end":21,"is_primary":false,"text":[{"text":"fn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":21}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39411,"byte_end":39418,"line_start":1311,"line_end":1311,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    T: Integer + Signed + Bounded + NumCast + Clone,","highlight_start":8,"highlight_end":15}],"label":"required by this bound in `approximate_float`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1273:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1311:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Signed + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: Signed` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37948,"byte_end":37955,"line_start":1273,"line_end":1273,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `Signed` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39309,"byte_end":39326,"line_start":1309,"line_end":1309,"column_start":4,"column_end":21,"is_primary":false,"text":[{"text":"fn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":21}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39421,"byte_end":39427,"line_start":1311,"line_end":1311,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"    T: Integer + Signed + Bounded + NumCast + Clone,","highlight_start":18,"highlight_end":24}],"label":"required by this bound in `approximate_float`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: Signed` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1273:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Signed` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1311:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Signed + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: Bounded` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37948,"byte_end":37955,"line_start":1273,"line_end":1273,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `Bounded` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39309,"byte_end":39326,"line_start":1309,"line_end":1309,"column_start":4,"column_end":21,"is_primary":false,"text":[{"text":"fn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":21}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39430,"byte_end":39437,"line_start":1311,"line_end":1311,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"    T: Integer + Signed + Bounded + NumCast + Clone,","highlight_start":27,"highlight_end":34}],"label":"required by this bound in `approximate_float`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: Bounded` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1273:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Bounded` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1311:27\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Signed + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: NumCast` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37948,"byte_end":37955,"line_start":1273,"line_end":1273,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `NumCast` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39309,"byte_end":39326,"line_start":1309,"line_end":1309,"column_start":4,"column_end":21,"is_primary":false,"text":[{"text":"fn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":21}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39440,"byte_end":39447,"line_start":1311,"line_end":1311,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"    T: Integer + Signed + Bounded + NumCast + Clone,","highlight_start":37,"highlight_end":44}],"label":"required by this bound in `approximate_float`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: NumCast` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1273:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `NumCast` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1311:37\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Signed + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38052,"byte_end":38059,"line_start":1277,"line_end":1277,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `Integer` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39309,"byte_end":39326,"line_start":1309,"line_end":1309,"column_start":4,"column_end":21,"is_primary":false,"text":[{"text":"fn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":21}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39411,"byte_end":39418,"line_start":1311,"line_end":1311,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    T: Integer + Signed + Bounded + NumCast + Clone,","highlight_start":8,"highlight_end":15}],"label":"required by this bound in `approximate_float`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1277:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1311:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Signed + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: Signed` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38052,"byte_end":38059,"line_start":1277,"line_end":1277,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `Signed` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39309,"byte_end":39326,"line_start":1309,"line_end":1309,"column_start":4,"column_end":21,"is_primary":false,"text":[{"text":"fn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":21}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39421,"byte_end":39427,"line_start":1311,"line_end":1311,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"    T: Integer + Signed + Bounded + NumCast + Clone,","highlight_start":18,"highlight_end":24}],"label":"required by this bound in `approximate_float`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: Signed` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1277:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Signed` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1311:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Signed + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: Bounded` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38052,"byte_end":38059,"line_start":1277,"line_end":1277,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `Bounded` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39309,"byte_end":39326,"line_start":1309,"line_end":1309,"column_start":4,"column_end":21,"is_primary":false,"text":[{"text":"fn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":21}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39430,"byte_end":39437,"line_start":1311,"line_end":1311,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"    T: Integer + Signed + Bounded + NumCast + Clone,","highlight_start":27,"highlight_end":34}],"label":"required by this bound in `approximate_float`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: Bounded` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1277:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Bounded` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1311:27\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Signed + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `i128: NumCast` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38052,"byte_end":38059,"line_start":1277,"line_end":1277,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `NumCast` is not implemented for `i128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38321,"byte_end":38369,"line_start":1288,"line_end":1288,"column_start":1,"column_end":49,"is_primary":false,"text":[{"text":"from_primitive_integer!(i128, approximate_float);","highlight_start":1,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39309,"byte_end":39326,"line_start":1309,"line_end":1309,"column_start":4,"column_end":21,"is_primary":false,"text":[{"text":"fn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":21}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39440,"byte_end":39447,"line_start":1311,"line_end":1311,"column_start":37,"column_end":44,"is_primary":true,"text":[{"text":"    T: Integer + Signed + Bounded + NumCast + Clone,","highlight_start":37,"highlight_end":44}],"label":"required by this bound in `approximate_float`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i128: NumCast` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1277:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `NumCast` is not implemented for `i128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(i128, approximate_float);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1311:37\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1310\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1311\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Signed + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: FromPrimitive` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37312,"byte_end":37345,"line_start":1255,"line_end":1255,"column_start":17,"column_end":50,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":17,"highlight_end":50}],"label":"the trait `FromPrimitive` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by `from_i64`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":15481,"byte_end":15517,"line_start":442,"line_end":442,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"    fn from_i64(n: i64) -> Option<Self>;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: FromPrimitive` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1255:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `FromPrimitive` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `from_i64`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:442:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m442\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_i64(n: i64) -> Option<Self>;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37353,"byte_end":37372,"line_start":1255,"line_end":1255,"column_start":58,"column_end":77,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":58,"highlight_end":77}],"label":"the trait `Integer` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by `Ratio::<T>::from_integer`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":3192,"byte_end":3229,"line_start":118,"line_end":118,"column_start":5,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn from_integer(t: T) -> Ratio<T> {","highlight_start":5,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1255:58\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `Ratio::<T>::from_integer`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:118:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn from_integer(t: T) -> Ratio<T> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37312,"byte_end":37373,"line_start":1255,"line_end":1255,"column_start":17,"column_end":78,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":17,"highlight_end":78}],"label":"the trait `Integer` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `Ratio<T>`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":2885,"byte_end":2892,"line_start":107,"line_end":107,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"impl<T: Clone + Integer> Ratio<T> {","highlight_start":17,"highlight_end":24}],"label":"required by this bound in `Ratio<T>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1255:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Ratio<T>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:107:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl<T: Clone + Integer> Ratio<T> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Ratio<T>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: FromPrimitive` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37630,"byte_end":37663,"line_start":1264,"line_end":1264,"column_start":17,"column_end":50,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":17,"highlight_end":50}],"label":"the trait `FromPrimitive` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by `traits::FromPrimitive::from_u64`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs","byte_start":17281,"byte_end":17317,"line_start":487,"line_end":487,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"    fn from_u64(n: u64) -> Option<Self>;","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: FromPrimitive` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1264:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `FromPrimitive` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `traits::FromPrimitive::from_u64`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.14/src/cast.rs:487:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m487\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn from_u64(n: u64) -> Option<Self>;\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37671,"byte_end":37690,"line_start":1264,"line_end":1264,"column_start":58,"column_end":77,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":58,"highlight_end":77}],"label":"the trait `Integer` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by `Ratio::<T>::from_integer`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":3192,"byte_end":3229,"line_start":118,"line_end":118,"column_start":5,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn from_integer(t: T) -> Ratio<T> {","highlight_start":5,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1264:58\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `Ratio::<T>::from_integer`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:118:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m118\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    pub fn from_integer(t: T) -> Ratio<T> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37630,"byte_end":37691,"line_start":1264,"line_end":1264,"column_start":17,"column_end":78,"is_primary":true,"text":[{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":17,"highlight_end":78}],"label":"the trait `Integer` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `Ratio<T>`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":2885,"byte_end":2892,"line_start":107,"line_end":107,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"impl<T: Clone + Integer> Ratio<T> {","highlight_start":17,"highlight_end":24}],"label":"required by this bound in `Ratio<T>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1264:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Ratio<T>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:107:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m107\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl<T: Clone + Integer> Ratio<T> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Ratio<T>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37948,"byte_end":37955,"line_start":1273,"line_end":1273,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `Integer` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float_unsigned`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39863,"byte_end":39889,"line_start":1329,"line_end":1329,"column_start":4,"column_end":30,"is_primary":false,"text":[{"text":"fn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":30}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39974,"byte_end":39981,"line_start":1331,"line_end":1331,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    T: Integer + Bounded + NumCast + Clone,","highlight_start":8,"highlight_end":15}],"label":"required by this bound in `approximate_float_unsigned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1273:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1331:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: Bounded` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37948,"byte_end":37955,"line_start":1273,"line_end":1273,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `Bounded` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float_unsigned`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39863,"byte_end":39889,"line_start":1329,"line_end":1329,"column_start":4,"column_end":30,"is_primary":false,"text":[{"text":"fn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":30}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39984,"byte_end":39991,"line_start":1331,"line_end":1331,"column_start":18,"column_end":25,"is_primary":true,"text":[{"text":"    T: Integer + Bounded + NumCast + Clone,","highlight_start":18,"highlight_end":25}],"label":"required by this bound in `approximate_float_unsigned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: Bounded` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1273:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Bounded` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1331:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: NumCast` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37948,"byte_end":37955,"line_start":1273,"line_end":1273,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `NumCast` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float_unsigned`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39863,"byte_end":39889,"line_start":1329,"line_end":1329,"column_start":4,"column_end":30,"is_primary":false,"text":[{"text":"fn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":30}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39994,"byte_end":40001,"line_start":1331,"line_end":1331,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    T: Integer + Bounded + NumCast + Clone,","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `approximate_float_unsigned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: NumCast` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1273:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1273\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `NumCast` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1331:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: Integer` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38052,"byte_end":38059,"line_start":1277,"line_end":1277,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `Integer` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float_unsigned`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39863,"byte_end":39889,"line_start":1329,"line_end":1329,"column_start":4,"column_end":30,"is_primary":false,"text":[{"text":"fn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":30}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39974,"byte_end":39981,"line_start":1331,"line_end":1331,"column_start":8,"column_end":15,"is_primary":true,"text":[{"text":"    T: Integer + Bounded + NumCast + Clone,","highlight_start":8,"highlight_end":15}],"label":"required by this bound in `approximate_float_unsigned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: Integer` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1277:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Integer` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1331:8\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: Bounded` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38052,"byte_end":38059,"line_start":1277,"line_end":1277,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `Bounded` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float_unsigned`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39863,"byte_end":39889,"line_start":1329,"line_end":1329,"column_start":4,"column_end":30,"is_primary":false,"text":[{"text":"fn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":30}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39984,"byte_end":39991,"line_start":1331,"line_end":1331,"column_start":18,"column_end":25,"is_primary":true,"text":[{"text":"    T: Integer + Bounded + NumCast + Clone,","highlight_start":18,"highlight_end":25}],"label":"required by this bound in `approximate_float_unsigned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: Bounded` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1277:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Bounded` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1331:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `u128: NumCast` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38052,"byte_end":38059,"line_start":1277,"line_end":1277,"column_start":17,"column_end":24,"is_primary":true,"text":[{"text":"                $approx(n, 10e-20, 30)","highlight_start":17,"highlight_end":24}],"label":"the trait `NumCast` is not implemented for `u128`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":38671,"byte_end":38728,"line_start":1296,"line_end":1296,"column_start":1,"column_end":58,"is_primary":false,"text":[{"text":"from_primitive_integer!(u128, approximate_float_unsigned);","highlight_start":1,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_primitive_integer!","def_site_span":{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":37129,"byte_end":38107,"line_start":1251,"line_end":1281,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! from_primitive_integer {","highlight_start":1,"highlight_end":38},{"text":"    ($typ:ty, $approx:ident) => {","highlight_start":1,"highlight_end":34},{"text":"        impl FromPrimitive for Ratio<$typ> {","highlight_start":1,"highlight_end":45},{"text":"            fn from_i64(n: i64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_i64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_i128(n: i128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_i128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_u64(n: u64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                <$typ as FromPrimitive>::from_u64(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":78},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[cfg(has_i128)]","highlight_start":1,"highlight_end":29},{"text":"            fn from_u128(n: u128) -> Option<Self> {","highlight_start":1,"highlight_end":52},{"text":"                <$typ as FromPrimitive>::from_u128(n).map(Ratio::from_integer)","highlight_start":1,"highlight_end":79},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f32(n: f32) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn from_f64(n: f64) -> Option<Self> {","highlight_start":1,"highlight_end":50},{"text":"                $approx(n, 10e-20, 30)","highlight_start":1,"highlight_end":39},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required by a bound in `approximate_float_unsigned`","code":null,"level":"note","spans":[{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39863,"byte_end":39889,"line_start":1329,"line_end":1329,"column_start":4,"column_end":30,"is_primary":false,"text":[{"text":"fn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>","highlight_start":4,"highlight_end":30}],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs","byte_start":39994,"byte_end":40001,"line_start":1331,"line_end":1331,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"    T: Integer + Bounded + NumCast + Clone,","highlight_start":28,"highlight_end":35}],"label":"required by this bound in `approximate_float_unsigned`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `u128: NumCast` is not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1277:17\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1277\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                $approx(n, 10e-20, 30)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `NumCast` is not implemented for `u128`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1296\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfrom_primitive_integer!(u128, approximate_float_unsigned);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/pangp/.cargo/registry/src/github.com-1ecc6299db9ec823/num-rational-0.2.4/src/lib.rs:1331:28\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1329\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mfn approximate_float_unsigned<T, F>(val: F, max_error: F, max_iterations: usize) -> Option<Ratio<T>>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1330\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mwhere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1331\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    T: Integer + Bounded + NumCast + Clone,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `approximate_float_unsigned`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `from_primitive_integer` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 78 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 78 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0277, E0407, E0576.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0407, E0576.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
