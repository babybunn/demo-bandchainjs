{"version":3,"sources":["band.js","components/FormOracleScript.js","components/UnableService.js","components/Loading.js","components/Home.js","app-context.js","redux/walletSlice.js","components/FormConnectWallet.js","components/FormGenerateWallet.js","components/Header/ModalConnectWallet.js","components/Header/WalletDropdown.js","components/Header/Navbar.js","components/BackButton.js","components/Footer.js","components/CardPrice.js","components/FormGetPrice.js","routes/GetPrice.js","components/AccountWithBalance.js","components/FormDelegate.js","routes/Delegate.js","components/FormSendToken.js","routes/SendToken.js","components/FormSendRequest.js","routes/SendRequest.js","components/FormIBCTransfer.js","routes/IBCTransfer.js","components/FormCreateDataSource.js","routes/DataSource.js","routes/OracleScript.js","components/AccountWithBalanceCenter.js","components/SidebarAccountMenu.js","components/AccountSidebar.js","components/SingleValidator.js","routes/Validators.js","components/SingleDelegator.js","components/ModalDelegate.js","components/ModalRedelegate.js","components/ModalReinvest.js","routes/DelegatorDetails.js","routes/Delegations.js","routes/Converter.js","routes/Transactions.js","routes/AccountPage.js","routes/CreateOracleScript.js","App.js","reportWebVitals.js","redux/store.js","index.js","api/index.js"],"names":["client","Client","grpcUrl","getPairPrice","pair","minCount","askCount","a","getReferenceData","data","console","error","createWallet","Wallet","PrivateKey","generate","mnemonic","getWallet","privateKey","fromMnemonic","pubkey","toPubkey","walletAddress","toAddress","toAccBech32","undelegateCoin","operator","amount","wallet","sendAmount","Coin","setDenom","setAmount","toString","MsgUndelegate","Message","msg","address","broadCastTx","response","reDelegateCoin","srcOperator","destOperator","MsgBeginRedelegate","reinvestRewards","validator","MsgWithdrawDelegatorReward","withdrawReward","delegator","sendIBC","receiver","MsgTransfer","timeoutTimestamp","moment","unix","createOracleScript","postData","name","desc","schema","url","code","owner","log","requestMessage","MsgCreateOracleScript","editOracleScript","id","MsgEditOracleScript","feeCoin","fee","Fee","setAmountList","setGasLimit","getChainId","chainId","txn","Transaction","withMessages","withSender","withChainId","withFee","withMemo","signDoc","getSignDoc","signature","sign","signedTx","getTxData","sendTxBlockMode","FormOracleScript","useSelector","state","useState","isConnected","setisConnected","step","setStep","codeType","setCodeType","previewJson","setPreviewJson","txhash","settxhash","isbroadcasting","setisbroadcasting","osID","setOsId","osname","setosname","osdesc","setosdesc","setschema","sourcecodeUrl","setsourcecodeUrl","setOwner","setCode","filename","setfilename","codeEditor","setCodeEditor","wasmCode","setwasmCode","osActionType","setOsActionType","location","useLocation","nextStep","e","preventDefault","prevStep","removeFile","onDrop","useCallback","acceptedFiles","length","forEach","file","reader","FileReader","onabort","onerror","onload","binaryStr","result","readAsArrayBuffer","useDropzone","getRootProps","getInputProps","compileCode","axios","post","then","res","fileBuf","JSON","stringify","description","source_code_url","sender","submitCode","Buffer","from","useEffect","pathname","includes","className","href","target","rel","htmlFor","type","onChange","value","onClick","disabled","checked","src","alt","style","maxWidth","onValueChange","rawcode","highlight","languages","rust","padding","fontFamily","fontSize","background","color","borderRadius","minHeight","byteLength","xmlns","viewBox","fill","fillRule","d","clipRule","renderSwitchCode","json","stroke","strokeLinecap","strokeLinejoin","strokeWidth","UnableService","Loading","Home","to","ModalContext","createContext","isShow","setIsShow","isShowCreateWallet","setIsShowCreateWallet","ModalDelegateContext","isShowModal","setIsShowModal","isShowModalRedelegate","setIsShowModalRedelegate","isShowModalReinvest","setIsShowModalReInvest","walletSlice","createSlice","initialState","balance","reducers","addWallet","action","payload","removeWallet","updateBalance","actions","FormConnectWallet","dispatch","useDispatch","setMnemonic","GET_BALANCE","gql","useSubscription","variables","loading","accounts","uband","split","handleConnectButton","FormGenerateWallet","ModalConnectWallet","useContext","isGenerateWallet","setIsGenerateWallet","aria-labelledby","role","aria-modal","aria-hidden","WalletDropdown","account","setaccount","toggleDropdown","setToggleDropdown","orgStr","subStr","substr","aria-orientation","tabIndex","Navbar","useMemo","setIsConnected","Fragment","Provider","BackButton","width","height","Footer","Date","getFullYear","CardPrice","symbol","toLowerCase","Intl","NumberFormat","currency","format","rate","FormGetPrice","defaultPair","prices","setPrice","pairInput","setPairInput","setminCount","setaskCount","getPrice","toUpperCase","replace","placeholder","map","price","ind","GetPrice","AccountWithBalance","fullAddress","setFullAddress","copied","setcopied","accountAddress","setaccountAddress","accountBalance","setAccountBalance","text","onCopy","FormDelegate","setValidator","setSendResult","setSendResultSuccess","setLoading","transactions","setTransactions","sendBandToken","sendCoin","rawLog","MsgDelegate","tx","Delegate","FormSendToken","tokenAmount","setTokenAmount","receiverAddress","setReceiverAddress","Boolean","MsgSend","SendToken","FormSendRequest","sendResultError","setSendResultError","symbols","setSymbols","multiplierInput","setMultiplierInput","feeInput","setFeeInput","prepareGasInput","setPrepareGasInput","executeGasInput","setExecuteGasInput","formStep","setFormStep","sendRequest","makeRequest","requestID","obi","Obi","calldata","encodeInput","multiplier","feeLimit","MsgRequestData","min","stroke-linecap","stroke-linejoin","stroke-width","SendRequest","IBCTransfer","FormIBCTransfer","FormCreateDataSource","dsname","setdsname","dsdesc","setdsdesc","treasury","setTreasury","accept","alert","py","DataSource","OracleScript","AccountWithBalanceCenter","SidebarAccountMenu","title","path","icon","menu","dangerouslySetInnerHTML","__html","AccountSidebar","SingleValidator","totalBonded","moniker","tokens","toFixed","Validators","GET_VALIDATORS","useQuery","message","validators","validators_aggregate","aggregate","sum","SingleDelegator","operator_address","rewards","reward","claim","ModalDelegate","setloading","confirm","ModalRedelegate","modalloading","setmodalloading","destvalidator","setdestvalidator","ModalReinvest","rewardAmount","DelegatorDetails","delegateType","setDelegateType","reinvestReward","setreinvestReward","isModalDelegateActive","isModalRedelegateActive","isModalReinvestActive","useParams","usdPrice","setUsdPrice","GET_VALIDATOR_DETAILS","useLazyQuery","GetValidator","openModalDelegate","modalType","delegations_view","commission_rate","validator_report_count","count","Delegations","GET_DELEGATIONS","element","Converter","inputSource","setinputSource","symbolSource","setsymbolSource","inputDest","setinputDest","symbolDest","setsymbolDest","setRate","handleSelectSourceChanged","val","handleSelectDestChanged","Transactions","GET_ACCOUNT_TRANSACTIONS_BY_PK","accounts_by_pk","account_transactions","transaction","hash","block_height","success","messages","AccountPage","CreateOracleScript","BackRoute","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","walletReducer","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","query","definition","getMainDefinition","kind","operation","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4e8bb7bd.chunk.js","sourcesContent":["import { Client, Wallet, Message, Coin, Transaction, Fee } from \"@bandprotocol/bandchain.js\";\nimport moment from \"moment\";\nimport { grpcUrl } from \"./api\";\n\nconst client = new Client(grpcUrl);\n\nexport async function getPairPrice(pair, minCount, askCount) {\n  try {\n    const data = await client.getReferenceData(pair, minCount, askCount);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function createWallet() {\n  const { PrivateKey } = Wallet;\n  const [mnemonic, priv] = PrivateKey.generate(\"m/44'/494'/0'/0/3\");\n  return mnemonic;\n}\n\nexport function getWallet(mnemonic) {\n  const { PrivateKey } = Wallet;\n  const privateKey = PrivateKey.fromMnemonic(mnemonic);\n  const pubkey = privateKey.toPubkey();\n  const walletAddress = pubkey.toAddress().toAccBech32();\n  return { walletAddress, pubkey, privateKey };\n}\n\nexport const undelegateCoin = async (operator, amount, wallet) => {\n  const sendAmount = new Coin();\n  sendAmount.setDenom(\"uband\");\n  sendAmount.setAmount((amount * 1e6).toString());\n\n  const { MsgUndelegate } = Message;\n  const msg = new MsgUndelegate(wallet.address, operator, sendAmount);\n  const response = await broadCastTx(msg, wallet.mnemonic);\n\n  return response;\n};\n\nexport const reDelegateCoin = async (srcOperator, destOperator, amount, wallet) => {\n  const sendAmount = new Coin();\n  sendAmount.setDenom(\"uband\");\n  sendAmount.setAmount((amount * 1e6).toString());\n\n  const { MsgBeginRedelegate } = Message;\n  const msg = new MsgBeginRedelegate(wallet.address, srcOperator, destOperator, sendAmount);\n  const response = await broadCastTx(msg, wallet.mnemonic);\n\n  return response;\n};\n\nexport const reinvestRewards = async (validator, wallet) => {\n  const { MsgWithdrawDelegatorReward } = Message;\n  const msg = new MsgWithdrawDelegatorReward(wallet.address, validator);\n  const response = await broadCastTx(msg, wallet.mnemonic);\n\n  return response;\n};\n\nexport async function withdrawReward(delegator, validator, wallet) {\n  const msg = new Message.MsgWithdrawDelegatorReward(delegator, validator);\n  const response = await broadCastTx(msg, wallet.mnemonic);\n  return response;\n}\n\nexport const sendIBC = async (receiver, amount, wallet) => {\n  const { MsgTransfer } = Message;\n  const sendAmount = new Coin();\n  sendAmount.setDenom(\"uband\");\n  sendAmount.setAmount((amount * 1e6).toString());\n  const timeoutTimestamp = moment().unix() * 1e9;\n\n  const msg = new MsgTransfer(\n    \"transfer\",\n    \"channel-25\",\n    wallet.address,\n    receiver,\n    sendAmount,\n    timeoutTimestamp\n  );\n\n  const response = await broadCastTx(msg, wallet.mnemonic);\n  return response;\n};\n\n// TODO: Waiting for the function in bandchain.js being merged\nexport const createDataSource = async (title, code, owner, treasury, wallet, ...desc) => {\n  const { MsgCreateDataSource } = Message;\n  let feeCoin = new Coin();\n  feeCoin.setDenom(\"uband\");\n  feeCoin.setAmount(\"1000\");\n\n  const msg = MsgCreateDataSource(title, code, [feeCoin], treasury, owner, wallet.address, desc);\n\n  const response = await broadCastTx(msg, wallet.mnemonic);\n\n  return response;\n};\n\n// TODO: Waiting for the function in bandchain.js being merged\nexport const editDataSource = async (id, code, owner, wallet, ...args) => {\n  let feeCoin = new Coin();\n  feeCoin.setDenom(\"uband\");\n  feeCoin.setAmount(\"1000\");\n\n  const msg = new Message.MsgEditDataSource(parseInt(id), code, [feeCoin], owner, wallet.address);\n\n  const response = await broadCastTx(msg, wallet.mnemonic);\n\n  return response;\n};\n\nexport async function createOracleScript(postData, wallet) {\n  const { name, desc, schema, url, code, owner } = postData;\n  console.log(name);\n\n  const requestMessage = new Message.MsgCreateOracleScript(\n    name,\n    code,\n    owner,\n    wallet.address,\n    desc,\n    schema,\n    url\n  );\n\n  const response = await broadCastTx(requestMessage, wallet.mnemonic);\n\n  return response;\n}\n\n// TODO: Waiting for the function in bandchain.js being merged\nexport async function editOracleScript(postData, wallet) {\n  const { id, name, desc, schema, url, code, owner } = postData;\n  const requestMessage = new Message.MsgEditOracleScript(\n    id,\n    code,\n    owner,\n    wallet.address,\n    name,\n    desc,\n    schema,\n    url\n  );\n\n  const response = await broadCastTx(requestMessage, wallet.mnemonic);\n\n  return response;\n}\n\nexport async function getRawPreview(\n  title,\n  desc,\n  schema,\n  source_code_url,\n  code,\n  sender,\n  owner,\n  privateKey,\n  pubkey\n) {\n  let coin = new Coin();\n  coin.setDenom(\"uband\");\n  coin.setAmount(\"1000000\");\n\n  let feeCoin = new Coin();\n  feeCoin.setDenom(\"uband\");\n  feeCoin.setAmount(\"1000\");\n\n  const requestMessage = new Message.MsgCreateOracleScript(\n    title,\n    desc,\n    schema,\n    source_code_url,\n    Buffer.from(code),\n    owner,\n    sender\n  );\n\n  const fee = new Fee();\n  fee.setAmountList([feeCoin]);\n  fee.setGasLimit(1000000);\n  const chainId = await client.getChainId();\n  const txn = new Transaction();\n  txn.withMessages(requestMessage);\n  await txn.withSender(client, sender);\n  txn.withChainId(chainId);\n  txn.withFee(fee);\n  txn.withMemo(\"\");\n\n  const signDoc = txn.getSignDoc(pubkey);\n  const signature = privateKey.sign(signDoc);\n\n  const txRawBytes = txn.getTxData(signature, pubkey);\n\n  return txRawBytes;\n}\n\nexport async function getRawPreviewEditOs(\n  title,\n  desc,\n  schema,\n  source_code_url,\n  code,\n  sender,\n  owner,\n  privateKey,\n  pubkey\n) {\n  let coin = new Coin();\n  coin.setDenom(\"uband\");\n  coin.setAmount(\"1000000\");\n\n  let feeCoin = new Coin();\n  feeCoin.setDenom(\"uband\");\n  feeCoin.setAmount(\"1000\");\n\n  const requestMessage = new Message.MsgCreateOracleScript(\n    title,\n    desc,\n    schema,\n    source_code_url,\n    code,\n    owner,\n    sender\n  );\n\n  const fee = new Fee();\n  fee.setAmountList([feeCoin]);\n  fee.setGasLimit(1000000);\n  const chainId = await client.getChainId();\n  const txn = new Transaction();\n  txn.withMessages(requestMessage);\n  await txn.withSender(client, sender);\n  txn.withChainId(chainId);\n  txn.withFee(fee);\n  txn.withMemo(\"\");\n\n  const signDoc = txn.getSignDoc(pubkey);\n  const signature = privateKey.sign(signDoc);\n\n  const txRawBytes = txn.getTxData(signature, pubkey);\n\n  return txRawBytes;\n}\n\nexport async function broadCastTx(msg, mnemonic) {\n  const { walletAddress, pubkey, privateKey } = getWallet(mnemonic);\n\n  let feeCoin = new Coin();\n  feeCoin.setDenom(\"uband\");\n  feeCoin.setAmount(\"1000\");\n\n  const fee = new Fee();\n  fee.setAmountList([feeCoin]);\n  fee.setGasLimit(1000000);\n\n  try {\n    const chainId = await client.getChainId();\n\n    const txn = new Transaction();\n    txn.withMessages(msg);\n\n    await txn.withSender(client, walletAddress);\n    txn.withChainId(chainId);\n    txn.withFee(fee);\n    txn.withMemo(\"From Bandchain.js Demo App\");\n\n    const signDoc = txn.getSignDoc(pubkey);\n    const signature = privateKey.sign(signDoc);\n\n    const signedTx = txn.getTxData(signature, pubkey);\n\n    const response = await client.sendTxBlockMode(signedTx);\n    return response;\n  } catch (err) {\n    console.error(err);\n    return;\n  }\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDropzone } from \"react-dropzone\";\nimport { createOracleScript, editOracleScript } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-rust\";\nimport \"prismjs/components/prism-json\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport axios from \"axios\";\nimport Loading from \"./Loading\";\n\nexport default function FormOracleScript() {\n  const wallet = useSelector((state) => state.wallet);\n\n  // State\n  const [isConnected, setisConnected] = useState(false);\n  const [step, setStep] = useState(1);\n  const [codeType, setCodeType] = useState(\"upload\");\n  const [previewJson, setPreviewJson] = useState(\"\");\n  const [txhash, settxhash] = useState(\"\");\n  const [isbroadcasting, setisbroadcasting] = useState(false);\n\n  // Form Data\n  const [osID, setOsId] = useState(\"\");\n  const [osname, setosname] = useState(\"\");\n  const [osdesc, setosdesc] = useState(\"\");\n  const [schema, setschema] = useState(\"\");\n  const [sourcecodeUrl, setsourcecodeUrl] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [code, setCode] = useState([]);\n  const [filename, setfilename] = useState(\"\");\n  const [codeEditor, setCodeEditor] = useState(`# Insert your code here`);\n  const [wasmCode, setwasmCode] = useState(null);\n  const [osActionType, setOsActionType] = useState(\"create\");\n\n  const location = useLocation();\n\n  // Handling Functions\n  const nextStep = (e) => {\n    e.preventDefault();\n    setStep(step + 1);\n  };\n\n  const prevStep = () => {\n    setStep(step - 1);\n  };\n\n  const isFormFilled = () => {\n    if (osname !== \"\" && owner !== \"\") {\n      return false;\n    }\n    return true;\n  };\n\n  const removeFile = () => {\n    setCode([]);\n    setfilename(\"\");\n  };\n\n  const onDrop = useCallback((acceptedFiles) => {\n    if (acceptedFiles.length > 0) {\n      setfilename(acceptedFiles[0].name);\n      acceptedFiles.forEach((file) => {\n        const reader = new FileReader();\n\n        reader.onabort = () => console.log(\"file reading was aborted\");\n        reader.onerror = () => console.log(\"file reading has failed\");\n        reader.onload = () => {\n          // Do whatever you want with the file contents\n          const binaryStr = reader.result;\n          setCode(binaryStr);\n        };\n        reader.readAsArrayBuffer(file);\n      });\n    }\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    // accept: \"text/x-wasm\",\n  });\n\n  const renderSwitchCode = () => {\n    switch (codeType) {\n      case \"editor\":\n        return (\n          <Editor\n            value={codeEditor}\n            onValueChange={(rawcode) => setCodeEditor(rawcode)}\n            highlight={(rawcode) => highlight(rawcode, languages.rust)}\n            padding={15}\n            style={{\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n              fontSize: 12,\n              background: \"#282A2B\",\n              color: \"white\",\n              borderRadius: \"10px\",\n              minHeight: \"300px\",\n            }}\n          />\n        );\n      default:\n        return (\n          <div className=\"input-group mb-3\">\n            {code.byteLength > 0 ? (\n              <div\n                onClick={removeFile}\n                className=\"group cursor-pointer border-l-2 border-t-2 border-r-4 border-b-4 hover:border-r-2 hover:border-b-2  hover:border-orange hover:bg-red-100 border-black bg-yellow-50 p-3 text-black rounded-xl relative w-full hover:transform hover:translate-x-px hover:translate-y-px\"\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <img\n                      src=\"/images/python-file.png\"\n                      alt=\"\"\n                      className=\"w-100 block h-auto mr-4\"\n                      style={{ maxWidth: \"50px\" }}\n                    />\n                    <p className=\"font-medium\">{filename}</p>\n                  </div>\n                  <div className=\"invisible group-hover:visible btn-deletefile w-8 h-8 bg-orange rounded-full text-white flex items-center justify-center\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-5 w-5\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"upload-outer\" {...getRootProps()}>\n                <input {...getInputProps()} />\n                <div className=\"h-40 border-2 bg-gray-50 border-gray-300 rounded-xl text-center flex items-center justify-center\">\n                  <div>\n                    Drag 'n' drop a file here,\n                    <br /> or <br />\n                    <span className=\"mt-2 cursor-pointer inline-block button px-4 py-1 border-2 border-black rounded-xl bg-yellow-300 hover:bg-yellow-400 text-sm\">\n                      Browse\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        );\n    }\n  };\n\n  const compileCode = async () => {\n    setStep(step + 1);\n    if (codeType !== \"upload\") {\n      await axios\n        .post(`/compile`, {\n          code: codeEditor,\n        })\n        .then((res) => {\n          setwasmCode(res.data.fileBuf);\n        });\n    }\n    setPreviewJson(\n      JSON.stringify({\n        name: osname,\n        description: osdesc,\n        schema: schema,\n        source_code_url: sourcecodeUrl,\n        owner: owner,\n        sender: wallet.address,\n      })\n    );\n  };\n\n  const submitCode = async () => {\n    setisbroadcasting(true);\n    setStep(step + 1);\n    const response =\n      osActionType === \"create\"\n        ? await createOracleScript(\n            {\n              name: osname,\n              desc: osdesc,\n              schema: schema,\n              url: sourcecodeUrl,\n              code: codeType === \"upload\" ? Buffer.from(code) : Buffer.from(wasmCode),\n              owner: owner,\n            },\n            wallet\n          )\n        : await editOracleScript(\n            {\n              id: osID,\n              name: osname,\n              desc: osdesc,\n              schema: schema,\n              url: sourcecodeUrl,\n              code: codeType === \"upload\" ? Buffer.from(code) : Buffer.from(wasmCode),\n              owner: owner,\n            },\n            wallet\n          );\n    if (response.code === 0) {\n      settxhash(response.txhash);\n      setisbroadcasting(false);\n    } else {\n      setisbroadcasting(false);\n      console.log(response);\n    }\n    // Todo: Show loading state and the result of the tx and show the next step\n  };\n\n  // Effects\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n    if (location.pathname.includes(\"/edit\")) {\n      setOsActionType(\"edit\");\n    }\n  }, [wallet]);\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>{osActionType === \"edit\" ? `Edit an ` : `Add a new `} Oracle Script</strong>\n        </h2>\n        <p className=\"mb-5\">\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong>\n              {osActionType === \"edit\" ? `MsgEditOracleScript` : `MsgCreateOracleScript`}{\" \"}\n            </strong>\n          </a>{\" \"}\n          is a message for this service\n        </p>\n        <div className=\"process-step\">\n          <ul>\n            <li className=\"mb-5\">\n              <strong>Step 1:</strong> Provide the oracle script information such as name, schema,\n              owner address, and description.\n            </li>\n            <li className=\"mb-5\">\n              <strong>Step 2:</strong> Upload the .rust file or try using code editor\n            </li>\n            <li className=\"mb-5\">\n              <strong>Step 3:</strong> Review and deploy your oracle script and Finish.\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <div className=\"card-inner p-6\">\n                {step === 1 ? (\n                  <div className=\"form-container mb-5 step step-1\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 1:</strong> Enter the oracle script information below.\n                      </h3>\n                      {osActionType === \"edit\" ? (\n                        <div className=\"input-group mb-3\">\n                          <label\n                            htmlFor=\"input-address\"\n                            className=\"block text-sm font-medium text-gray-700 mb-1\"\n                          >\n                            Oracle Script ID <span className=\"text-orange\">*</span>\n                          </label>\n                          <input\n                            className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                            type=\"text\"\n                            id=\"input-address\"\n                            onChange={(e) => setOsId(e.target.value)}\n                            value={osID}\n                          />\n                        </div>\n                      ) : null}\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Oracle Script Name <span className=\"text-orange\">*</span>\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-address\"\n                          onChange={(e) => setosname(e.target.value)}\n                          value={osname}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-owner\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Owner Address <span className=\"text-orange\">*</span>\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-owner\"\n                          value={owner}\n                          onChange={(e) => setOwner(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-treasury\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Schema\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-treasury\"\n                          value={schema}\n                          onChange={(e) => setschema(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-treasury\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Source Code URL\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-treasury\"\n                          value={sourcecodeUrl}\n                          onChange={(e) => setsourcecodeUrl(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-desc\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Description\n                        </label>\n                        <textarea\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-desc\"\n                          onChange={(e) => setosdesc(e.target.value)}\n                          value={osdesc}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-buttons\">\n                      <button\n                        onClick={nextStep}\n                        disabled={isFormFilled()}\n                        className=\"button block ml-auto text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 \"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 2 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 2:</strong> Choose how to add the oracle script code\n                      </h3>\n\n                      <div className=\"flex gap-6 radio-group choice-code\">\n                        <div className=\"flex-grow flex-shrink w-1/2 input-group mb-3\">\n                          <input\n                            type=\"radio\"\n                            name=\"codeType\"\n                            id=\"input-codeType-upload\"\n                            value=\"upload\"\n                            checked={codeType === \"upload\"}\n                            onChange={(e) => setCodeType(e.target.value)}\n                          />\n                          <label\n                            htmlFor=\"input-codeType-upload\"\n                            className=\"hover:bg-indigo-50 w-full label-btn button p-4 border-2 border-gray-300 block rounded-xl text-center cursor-pointer\"\n                          >\n                            <img\n                              src=\"/images/uploading.png\"\n                              alt=\"\"\n                              className=\"w-full mx-auto block mb-2\"\n                              style={{\n                                maxWidth: \"103px\",\n                              }}\n                            />\n                            Upload from my computer (.rust)\n                          </label>\n                        </div>\n                        <div className=\"flex-grow flex-shrink w-1/2 input-group mb-3\">\n                          <input\n                            type=\"radio\"\n                            name=\"codeType\"\n                            id=\"input-codeType-editor\"\n                            value=\"editor\"\n                            checked={codeType === \"editor\"}\n                            onChange={(e) => setCodeType(e.target.value)}\n                          />\n                          <label\n                            htmlFor=\"input-codeType-editor\"\n                            className=\"hover:bg-indigo-50  w-full label-btn button p-4 border-2 border-gray-300 block rounded-xl text-center cursor-pointer\"\n                          >\n                            <img\n                              src=\"/images/code.png\"\n                              alt=\"\"\n                              className=\"w-full mx-auto block mb-2\"\n                              style={{\n                                maxWidth: \"103px\",\n                              }}\n                            />\n                            Using Code Editor\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        onClick={nextStep}\n                        className=\"button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 3 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 2.1:</strong> Add the oracle script code (.rust)\n                      </h3>\n                      {renderSwitchCode()}\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        disabled={code.byteLength > 0 ? false : codeEditor === \"\"}\n                        onClick={(e) => compileCode()}\n                        className=\"disabled:opacity-50 button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 4 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 3:</strong> Review\n                      </h3>\n                      <Editor\n                        value={previewJson}\n                        onValueChange={(rawcode) => setPreviewJson(rawcode)}\n                        highlight={(rawcode) => highlight(rawcode, languages.json)}\n                        padding={15}\n                        style={{\n                          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n                          fontSize: 12,\n                          background: \"#282A2B\",\n                          color: \"white\",\n                          borderRadius: \"10px\",\n                          minHeight: \"300px\",\n                        }}\n                      />\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        onClick={(e) => submitCode()}\n                        className=\"button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Confirm and Deploy\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 5 ? (\n                  isbroadcasting ? (\n                    <div className=\"p-6 form-wrapper flex items-center justify-center\">\n                      <Loading />\n                    </div>\n                  ) : (\n                    <div className=\"p-6 form-wrapper flex items-center justify-center\">\n                      <div className=\"form-container\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          className=\"h-20 w-20 text-green-400 mx-auto mb-5\"\n                          fill=\"none\"\n                          viewBox=\"0 0 24 24\"\n                          stroke=\"currentColor\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                          />\n                        </svg>\n                        <h4 className=\"text-md text-center\">\n                          <strong>Transaction Hash</strong>\n                        </h4>\n                        <a\n                          className=\"overflow-ellipsis overflow-hidden text-black mb-3 block hover:text-blue text-center\"\n                          href={`https://laozi-testnet4.cosmoscan.io/tx/${txhash}`}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          {txhash}\n                        </a>\n                        <button\n                          onClick={(e) => setStep(1)}\n                          className=\"button block mx-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                        >\n                          Back\n                        </button>\n                      </div>\n                    </div>\n                  )\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","function UnableService() {\n  return (\n    <div className=\"text-center w-full\">\n      <img src=\"/images/connect.png\" alt=\"\" className=\"max-w-md mx-auto w-full\" />\n      <p className=\"text-center text-lg\">\n        To perform this service, Please <strong className=\"text-pink-400\">connect</strong> with your\n        wallet\n      </p>\n    </div>\n  );\n}\n\nexport default UnableService;\n","function Loading() {\n    return (\n        <div className=\"flex justify-center items-center mt-4\">\n            <div\n              className=\"\n                loader\n                ease-linear\n                rounded-full\n                border-4 border-t-4 border-gray-200\n                h-12\n                w-12\n              \"\n            ></div>\n          </div>\n    )\n}\n\nexport default Loading;","import { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <h2 className=\"text-center text-xl md:text-4xl\">\n          <strong>Please choose a service</strong>\n        </h2>\n        <div className=\"services mt-8\">\n          <ul className=\"services--list flex gap-6 flex-wrap items-stretch\">\n            <li className=\"services--list-item flex-grow md:w-1/5 w-full\">\n              <Link\n                to=\"/getprice\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/getprice.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-md xl:text-xl font-bold\">Get Price</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow md:w-1/5 w-full\">\n              <Link\n                to=\"/sendToken\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/token.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-md xl:text-xl font-bold\">Transfer</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow md:w-1/5 w-full\">\n              <Link\n                to=\"/delegate\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/delegate.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-md xl:text-xl font-bold\">Delegate Token</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow md:w-1/5 w-full\">\n              <Link\n                to=\"/transfer\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/transfer.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-md xl:text-xl font-bold\">IBC Transfer</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow md:w-1/5 w-full\">\n              <Link\n                to=\"/request\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/request.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-md xl:text-xl font-bold\">\n                  Make an\n                  <br /> Oracle Request\n                </h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow md:w-1/5 w-full\">\n              <Link\n                to=\"/datasource\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/datasource.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-md xl:text-xl font-bold\">Data Source</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow md:w-1/5 w-full\">\n              <Link\n                to=\"/oraclescript\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/oracle.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-md xl:text-xl font-bold\">Oracle Script</h3>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"card bg-white p-2 rounded-b-2xl\"></div>\n    </div>\n  );\n}\n\nexport default Home;\n","import { createContext } from \"react\";\n\nexport const ModalContext = createContext({\n  isShow: false,\n  setIsShow: () => {},\n  isShowCreateWallet: false,\n  setIsShowCreateWallet: () => {},\n});\n\nexport const ModalDelegateContext = createContext({\n  isShowModal: false,\n  setIsShowModal: () => {},\n  isShowModalRedelegate: false,\n  setIsShowModalRedelegate: () => {},\n  isShowModalReinvest: false,\n  setIsShowModalReInvest: () => {},\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { Client, Wallet, Obi, Message, Coin, Transaction, Fee } from \"@bandprotocol/bandchain.js\";\nimport { grpcUrl } from \"../api\";\n\nconst client = new Client(grpcUrl);\n\nconst initialState = {\n  address: null,\n  mnemonic: \"\",\n  balance: 0,\n};\n\nexport const walletSlice = createSlice({\n  name: \"wallet\",\n  initialState,\n  reducers: {\n    addWallet: (state, action) => {\n      state.address = action.payload.address;\n      state.mnemonic = action.payload.mnemonic;\n    },\n    removeWallet: (state, action) => {\n      state.address = \"\";\n      state.mnemonic = \"\";\n      state.balance = 0;\n    },\n    updateBalance: (state, action) => {\n      state.balance = action.payload.balance;\n    },\n  },\n});\n\nexport const { addWallet, removeWallet, updateBalance } = walletSlice.actions;\n\nexport default walletSlice.reducer;\n","import { useState, useEffect } from \"react\";\nimport { getWallet } from \"../band\";\nimport { useDispatch } from \"react-redux\";\nimport { addWallet, updateBalance } from \"../redux/walletSlice\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\nimport { useSelector } from \"react-redux\";\n\nexport default function FormConnectWallet() {\n  const wallet = useSelector((state) => state.wallet);\n  const dispatch = useDispatch();\n  const [mnemonic, setMnemonic] = useState(\"\");\n\n  const GET_BALANCE = gql`\n    subscription GetBalance($address: String!) {\n      accounts(where: { address: { _eq: $address } }) {\n        balance\n      }\n    }\n  `;\n  const { loading, error, data } = useSubscription(GET_BALANCE, {\n    variables: { address: wallet.address },\n  });\n\n  useEffect(() => {\n    if (data && data.accounts[0]) {\n      const uband = data.accounts[0].balance.split(\"uband\")[0];\n      dispatch(\n        updateBalance({\n          balance: uband / 1e6,\n        })\n      );\n      setMnemonic(\"\");\n    }\n    if (loading) console.error(loading);\n    if (error) console.error(error);\n  }, [wallet, data]);\n\n  const handleConnectButton = (e) => {\n    e.preventDefault();\n    if (mnemonic.length > 0 && mnemonic !== \"\") {\n      const { walletAddress } = getWallet(mnemonic);\n      if (walletAddress) {\n        dispatch(\n          addWallet({\n            address: walletAddress,\n            mnemonic: mnemonic,\n          })\n        );\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"card-inner\">\n        <div className=\"mb-5\">\n          <div className=\"input-group mb-3\">\n            <label htmlFor=\"input-address\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Enter mnemonic phrase\n            </label>\n            <input\n              className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n              type=\"text\"\n              id=\"input-address\"\n              value={mnemonic}\n              onChange={(e) => setMnemonic(e.target.value)}\n            />\n          </div>\n        </div>\n        <button\n          onClick={(e) => handleConnectButton(e)}\n          className=\"button block w-full bg-black text-white py-2 px-4 rounded-xl hover:bg-black focus:outline-none focus:ring-purple-600 focus:ring-opacity-50 transition duration-500 ease-in-out\"\n        >\n          Connect Wallet\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { createWallet, getWallet } from \"../band\";\nimport { useDispatch } from \"react-redux\";\nimport { addWallet } from \"../redux/walletSlice\";\nexport default function FormGenerateWallet() {\n  const dispatch = useDispatch();\n  const [mnemonic, setMnemonic] = useState(\"\");\n\n  useEffect(() => {\n    setMnemonic(createWallet());\n  }, []);\n\n  const handleConnectButton = (e) => {\n    e.preventDefault();\n    if (mnemonic.length > 0 && mnemonic !== \"\") {\n      const { walletAddress } = getWallet(mnemonic);\n      if (walletAddress) {\n        dispatch(\n          addWallet({\n            address: walletAddress,\n            mnemonic: mnemonic,\n          })\n        );\n      }\n    }\n  };\n\n  return (\n    <div>\n      <p className=\"text-xs mb-4\">\n        Please, make sure you have carefully written down your recovery phrase somewhere safe. You\n        will need this phrase to use and restore your wallet. Phrase is case sensitive.\n      </p>\n      <div className=\"card-inner\">\n        <div className=\"mb-5\">\n          <div className=\"input-group mb-3\">\n            <label htmlFor=\"input-address\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Your Recovery phrase\n            </label>\n            <textarea\n              className=\"h-20 focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n              type=\"text\"\n              id=\"input-address\"\n              value={mnemonic}\n              onChange={(e) => setMnemonic(e.target.value)}\n              disabled\n            />\n          </div>\n        </div>\n        <button\n          onClick={(e) => handleConnectButton(e)}\n          className=\"button block w-full bg-purple-600 text-white py-2 px-4 rounded-xl hover:bg-purple-700 focus:outline-none focus:ring-purple-600 focus:ring-opacity-50 transition duration-500 ease-in-out\"\n        >\n          Yes, I have written it down\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { ModalContext } from \"../../app-context\";\nimport FormConnectWallet from \"../FormConnectWallet\";\nimport { useSelector } from \"react-redux\";\nimport FormGenerateWallet from \"../FormGenerateWallet\";\n\nexport default function ModalConnectWallet() {\n  const { isShow, setIsShow } = useContext(ModalContext);\n  const [isGenerateWallet, setIsGenerateWallet] = useState(false);\n\n  const closeModalHandler = (event) => setIsShow(false);\n  const wallet = useSelector((state) => state.wallet);\n\n  useEffect(() => {\n    setIsShow(false);\n    if (wallet.address) setIsGenerateWallet(false);\n  }, [wallet, setIsShow]);\n\n  return (\n    <div\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      className={\n        isShow\n          ? \"fixed z-10 inset-0 overflow-y-auto block\"\n          : \" fixed z-10 inset-0 overflow-y-auto hidden\"\n      }\n    >\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n          &#8203;\n        </span>\n\n        <div className=\"inline-block align-bottom bg-white rounded-3xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n            <div className=\"flex justify-between align-items-center mt-3 mb-5 text-center sm:mt-0 sm:text-left\">\n              <h2 className=\"mb-0 text-xl\">\n                <strong>{isGenerateWallet ? \"Create a new wallet\" : \"Connect wallet\"}</strong>\n              </h2>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6 text-orange cursor-pointer hover:text-orange-dark\"\n                onClick={(e) => closeModalHandler(e)}\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </div>\n            {isGenerateWallet ? <FormGenerateWallet /> : <FormConnectWallet />}\n            <div className=\"my-4\">\n              <p className=\"text-center text-sm\">\n                {isGenerateWallet\n                  ? \"No, I already have a crypto wallet. \"\n                  : \"Haven’t got a crypto wallet yet? \"}\n                <span\n                  className=\"text-blue underline font-medium cursor-pointer\"\n                  onClick={(e) => setIsGenerateWallet(!isGenerateWallet)}\n                >\n                  {isGenerateWallet ? \"Connect an existing wallet\" : \"Create a new wallet\"}\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeWallet } from \"../../redux/walletSlice\";\nimport { Link } from \"react-router-dom\";\n\nexport default function WalletDropdown() {\n  const wallet = useSelector((state) => state.wallet);\n  const [account, setaccount] = useState(\"\");\n  const [toggleDropdown, setToggleDropdown] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (wallet.address) {\n      const orgStr = wallet.address;\n      const subStr = orgStr.substr(0, 8) + \"...\" + orgStr.substr(orgStr.length - 4, orgStr.length);\n      setaccount(subStr);\n    }\n  }, [wallet]);\n\n  const handleDisconnectBtn = () => {\n    dispatch(removeWallet({}));\n  };\n  return (\n    <div className=\"relative inline-block\">\n      <div>\n        <button\n          onClick={(e) => setToggleDropdown(!toggleDropdown)}\n          className=\"inline-flex justify-center items-center w-full rounded-xl font-bold text-sm md:text-lg py-1 md:py-2 px-2 md:px-6 rounded-lg text-white bg-black hover:bg-black focus:outline-none\"\n        >\n          <span className=\"inline-block mr-1\">{account}</span>\n          <svg\n            className=\" h-7 w-7\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </button>\n      </div>\n      <div\n        className={`origin-top-right absolute right-0 mt-2 w-full border-2 border-black rounded-lg shadow-lg bg-white focus:outline-none${\n          toggleDropdown ? \"\" : \" hidden\"\n        }`}\n        role=\"menu\"\n        aria-orientation=\"vertical\"\n        aria-labelledby=\"menu-button\"\n        tabIndex=\"-1\"\n      >\n        <div className=\"py-1\" role=\"none\">\n          <Link\n            to=\"/myaccount\"\n            className=\"text-black block px-4 py-2 font-bold hover:bg-warmGray-100\"\n            tabIndex=\"-1\"\n            id=\"menu-item-0\"\n          >\n            My Account\n          </Link>\n          <button\n            onClick={handleDisconnectBtn}\n            type=\"submit\"\n            className=\"text-orange block w-full text-left px-4 py-2 font-bold hover:bg-warmGray-100\"\n            role=\"menuitem\"\n            tabIndex=\"-1\"\n            id=\"menu-item-3\"\n          >\n            Disconnect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ModalConnectWallet from \"./ModalConnectWallet\";\nimport { ModalContext } from \"../../app-context\";\nimport { useSelector } from \"react-redux\";\nimport WalletDropdown from \"./WalletDropdown\";\n\nfunction Navbar() {\n  const [isShow, setIsShow] = useState(false);\n  const value = useMemo(() => ({ isShow, setIsShow }), [isShow]);\n  const wallet = useSelector((state) => state.wallet);\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    if (wallet.address) {\n      setIsConnected(true);\n    } else {\n      setIsConnected(false);\n    }\n  }, [wallet]);\n\n  return (\n    <React.Fragment>\n      <nav className=\"bg-white rounded-2xl\">\n        <div className=\"mx-auto md:px-10 p-3 md:py-0\">\n          <div className=\"relative flex items-center justify-between md:h-16\">\n            <div className=\"flex-1 flex items-center justify-start\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                <div className=\"flex md:items-end\">\n                  <h1 className=\"text-md md:text-xl\">\n                    <strong>\n                      <Link to=\"/\" className=\"hover:text-blue\">\n                        BandChain.js\n                      </Link>\n                    </strong>\n                  </h1>\n                  <div className=\"text-lg md:ml-2 flex items-center\">\n                    <span className=\"hidden md:inline-block\">Playgr</span>\n                    <span className=\"logo-ball w-3 h-3  mx-1 block bg-orange rounded-full animate-bounce\"></span>\n                    <span className=\"hidden md:inline-block\">und</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex-1 flex items-center justify-end\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                {isConnected ? (\n                  <WalletDropdown />\n                ) : (\n                  <button\n                    onClick={(e) => setIsShow(!isShow)}\n                    className=\"button text-blue text-sm md:text-lg py-2 px-2 md:px-6 rounded-lg bg-yellow-400 hover:bg-yellow-500 focus:outline-none focus:ring-yellow-500 focus:ring-opacity-50\"\n                  >\n                    Connect Wallet\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <ModalContext.Provider value={value}>\n        <ModalConnectWallet />\n      </ModalContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default Navbar;\n","import { Link } from \"react-router-dom\";\n\nexport default function BackButton() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:px-10 px-5 pt-0 pb-10 rounded-b-2xl mt-0\">\n        <div className=\"\">\n          <Link to=\"/\" className=\"text-xl font-bold text-black group inline-block\">\n            <div className=\"flex items-center\">\n              <div\n                className=\"bg-white group-hover:bg-orange text-black back-icon flex items-center justify-center rounded-full border-2 border-solid border-black mr-2\"\n                style={{\n                  width: \"40px\",\n                  height: \"40px\",\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\n                  />\n                </svg>\n              </div>\n              Back\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default function Footer() {\n  return (\n    <div className=\"py-3 px-10 bg-white rounded-2xl mt-5 flex justify-between items-center\">\n      <p className=\"mb-0 text-sm text-gray-400\">©{new Date().getFullYear()} | Bandprotocol </p>\n      <p className=\"mb-0 text-sm text-gray-400\">\n        Designed and Developed by{\" \"}\n        <a\n          href=\"https://github.com/pangthebabydustbunny\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"text-blue\"\n        >\n          pangp\n        </a>\n      </p>\n    </div>\n  );\n}\n","export default function CardPrice({ value }) {\n  const orgPair = value.pair;\n  const symbol = orgPair.split(\"/\")[0].toLowerCase();\n  return (\n    <div className=\"card bg-yellow-50 relative p-3 border-2 border-black rounded-xl w-full md:w-2/6 lg:w-1/6 cursor-pointer hover:bg-yellow-100\">\n      <div className=\"coin-symbol  w-6 h-6 overflow-hidden bg-white rounded-full flex justify-center items-center text-black\">\n        <img\n          src={`https://data.bandprotocol.com/tokens/${symbol}.png`}\n          alt=\"\"\n          className=\"object-cover block w-full h-full\"\n        />\n      </div>\n      <h3 className=\"text-lg mb-5 font-bold mt-3\">{value.pair}</h3>\n      <h3 className=\"text-lg font-medium text-blue\">\n        {new Intl.NumberFormat(\"en-TH\", { style: \"currency\", currency: \"USD\" }).format(value.rate)}\n      </h3>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Client } from \"@bandprotocol/bandchain.js\";\nimport CardPrice from \"./CardPrice\";\nimport { grpcUrl } from \"../api\";\n\nfunction FormGetPrice() {\n  const defaultPair = [\n    \"BTC/USD\",\n    \"ETH/USD\",\n    \"BNB/USD\",\n    \"LUNA/USD\",\n    \"DOT/USD\",\n    \"BAND/USD\",\n    \"ALPHA/USD\",\n  ];\n  // states\n  const [prices, setPrice] = useState([]);\n  const [pairInput, setPairInput] = useState(\"\");\n  const [minCount, setminCount] = useState(10);\n  const [askCount, setaskCount] = useState(16);\n\n  useEffect(() => {\n    getPrice(defaultPair);\n  }, []);\n\n  async function getPrice(pair = []) {\n    const client = new Client(grpcUrl);\n    const rate = await client.getReferenceData(\n      pairInput !== \"\"\n        ? pairInput.toUpperCase().replace(/\\s/g, \"\").split(\",\")\n        : pair.length > 0\n        ? pair\n        : defaultPair,\n      minCount,\n      askCount\n    );\n    // console.log(rate)\n    setPrice(rate);\n  }\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Get Price</strong>\n        </h2>\n        <p className=\"mb-5\">\n          This section shows an example on how to query data from BandChain using{\" \"}\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#get-reference-data\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong>getReferenceData</strong>\n          </a>{\" \"}\n          method. This example query standard price references based on given symbol pairs, min\n          count, and ask count.\n        </p>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        <div className=\"card bg-white p-6 border-2 border-black rounded rounded-2xl w-full mb-10\">\n          <div className=\"card-inner\">\n            <div className=\"mb-5\">\n              <div className=\"input-group mb-3\">\n                <label\n                  htmlFor=\"input-address\"\n                  className=\"block text-sm font-medium text-gray-700 mb-1\"\n                >\n                  Token Pair\n                </label>\n                <input\n                  className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                  type=\"text\"\n                  id=\"input-address\"\n                  placeholder=\"e.g. BTC/USD,ETH/USD\"\n                  value={pairInput}\n                  onChange={(e) => setPairInput(e.target.value)}\n                />\n              </div>\n              <div className=\"input-group mb-3\">\n                <label\n                  htmlFor=\"input-mincount\"\n                  className=\"block text-sm font-medium text-gray-700 mb-1\"\n                >\n                  Ask Count\n                </label>\n                <input\n                  className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                  type=\"text\"\n                  id=\"input-address\"\n                  value={askCount}\n                  onChange={(e) => setaskCount(e.target.value)}\n                />\n              </div>\n              <div className=\"input-group mb-3\">\n                <label\n                  htmlFor=\"input-mincount\"\n                  className=\"block text-sm font-medium text-gray-700 mb-1\"\n                >\n                  Min Count\n                </label>\n                <input\n                  className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                  type=\"text\"\n                  id=\"input-address\"\n                  value={minCount}\n                  onChange={(e) => setminCount(e.target.value)}\n                />\n              </div>\n            </div>\n            <button\n              onClick={getPrice}\n              className=\"button block w-full text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-4 rounded-xl focus:outline-none\"\n            >\n              Request\n            </button>\n          </div>\n        </div>\n        <h3 className=\"text-xl mb-8\">\n          <strong>Results</strong>\n        </h3>\n        <div className=\"flex flex-row gap-6 flex-wrap\">\n          {prices.map((price, ind) => (\n            <CardPrice value={price} key={ind} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FormGetPrice;\n","import FormGetPrice from \"../components/FormGetPrice\";\nexport default function GetPrice() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormGetPrice />\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nexport default function AccountWithBalance() {\n  const wallet = useSelector((state) => state.wallet);\n  const [fullAddress, setFullAddress] = useState(\"\");\n  const [copied, setcopied] = useState(false);\n  const [accountAddress, setaccountAddress] = useState(\"\");\n  const [accountBalance, setAccountBalance] = useState(0);\n\n  useEffect(() => {\n    if (wallet.address) {\n      const orgStr = wallet.address;\n      const subStr = orgStr.substr(0, 10) + \"...\" + orgStr.substr(orgStr.length - 4, orgStr.length);\n      setaccountAddress(subStr);\n      setFullAddress(orgStr);\n      setAccountBalance(wallet.balance);\n    } else {\n      setaccountAddress(\"\");\n      setFullAddress(\"\");\n    }\n  }, [wallet]);\n\n  return (\n    <div className=\"card-balance card-top border-b-2 border-black p-6 flex items-center justify-between\">\n      <div className=\"account-avatar flex items-center\">\n        <div className=\"avatar w-20 h-20 mr-5\">\n          <img src=\"/images/avatar-4.png\" alt=\"\" />\n        </div>\n        <div className=\"flex items-center\">\n          <h3 className=\"text-lg font-bold\">{accountAddress} </h3>\n          <div className=\"relative\">\n            <CopyToClipboard text={fullAddress} onCopy={() => setcopied(true)}>\n              <button className=\"ml-3 hover:text-orange group relative\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                  />\n                </svg>\n                <div className=\"tooltip-content absolute opacity-0 group-hover:opacity-100 text-xs bg-black rounded-md py-1 px-2 text-white transform -translate-x-1/2 left-1/2\">\n                  {copied ? \"Copied\" : \"Copy\"}\n                </div>\n              </button>\n            </CopyToClipboard>\n          </div>\n        </div>\n      </div>\n      <div className=\"account-balance\">\n        <p className=\"text-right text-gray-500\">Available Balance (BAND)</p>\n        <h3 className=\"text-3xl font-bold text-right\">\n          {accountBalance ? <div>{accountBalance}</div> : \"0\"}\n        </h3>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Message, Coin } from \"@bandprotocol/bandchain.js\";\nimport { getWallet, broadCastTx } from \"../band\";\nimport Loading from \"./Loading\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport AccountWithBalance from \"./AccountWithBalance\";\n\nfunction FormDelegate() {\n  const wallet = useSelector((state) => state.wallet);\n\n  const [validator, setValidator] = useState(\"bandvaloper1zkf9qzs7ayf3uqksxqwve8q693dsdhxk800wvw\");\n  const [isConnected, setisConnected] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [sendResult, setSendResult] = useState(\"\");\n  const [sendResultSuccess, setSendResultSuccess] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n  }, [wallet]);\n\n  const handleInputValidator = (e) => {\n    if (e.target.value) setValidator(e.target.value);\n  };\n\n  const handleInputAmount = (e) => {\n    if (e.target.value) setAmount(e.target.value);\n  };\n\n  const sendBandToken = async () => {\n    if (!validator && !amount) return;\n    setLoading(true);\n    const response = await sendCoin();\n\n    if (response.data === \"\") setSendResult(response.rawLog);\n    if (response.data !== \"\") {\n      setTransactions((transactions) => [...transactions, response.txhash]);\n      setSendResultSuccess(response.txhash);\n    }\n    setLoading(false);\n  };\n\n  const sendCoin = async () => {\n    const { walletAddress } = getWallet(wallet.mnemonic);\n    const { MsgDelegate } = Message;\n\n    const sendAmount = new Coin();\n    sendAmount.setDenom(\"uband\");\n    sendAmount.setAmount((amount * 1e6).toString());\n\n    const msg = new MsgDelegate(walletAddress, validator, sendAmount);\n\n    // Step 5 send the transaction\n    const response = await broadCastTx(msg, wallet.mnemonic);\n\n    return response;\n  };\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Delegate Token</strong>\n        </h2>\n        <p className=\"mb-5\">\n          The message used for this service is\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong> MsgDelegate</strong>\n          </a>\n        </p>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <AccountWithBalance />\n              <div className=\"card-inner p-6 \">\n                <div className=\"mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Delegate to\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"text\"\n                      id=\"input-address\"\n                      value={validator}\n                      onChange={handleInputValidator}\n                    />\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Token Amount (BAND)\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      id=\"input-amount\"\n                      onChange={handleInputAmount}\n                      value={amount}\n                    />\n                  </div>\n                </div>\n                <button\n                  onClick={sendBandToken}\n                  className=\"button block w-full text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-4 rounded-xl focus:outline-none\"\n                >\n                  Delegate\n                </button>\n              </div>\n            </div>\n            <h3 className=\"text-xl font-bold mb-5\">Latest Transactions</h3>\n            {loading ? (\n              <Loading />\n            ) : transactions.length > 0 ? (\n              transactions.map((tx) => {\n                return (\n                  <a\n                    className=\"text-black mb-3 p-3 border-2 border-gray-200 hover:border-blue rounded-xl block\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${tx}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {tx}\n                  </a>\n                );\n              })\n            ) : (\n              <div className=\"text-md\">You don't have any transactions</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FormDelegate;\n","import FormDelegate from \"../components/FormDelegate\";\nexport default function Delegate() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormDelegate />\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport { Message, Coin } from \"@bandprotocol/bandchain.js\";\nimport Loading from \"./Loading\";\nimport { broadCastTx } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport AccountWithBalance from \"./AccountWithBalance\";\n\nfunction FormSendToken() {\n  const wallet = useSelector((state) => state.wallet);\n  const [isConnected, setisConnected] = useState(false);\n  const [tokenAmount, setTokenAmount] = useState(0);\n  const [receiverAddress, setReceiverAddress] = useState(\"\");\n  const [sendResult, setSendResult] = useState(\"\");\n  const [sendResultSuccess, setSendResultSuccess] = useState(\"\");\n  const [loading, setLoading] = useState(Boolean(0));\n\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n  }, [wallet]);\n\n  const handleInputTokenAmount = (e) => {\n    setTokenAmount(e.target.value);\n  };\n  const handleInputAddress = (e) => {\n    setReceiverAddress(e.target.value);\n  };\n  const sendBandToken = async () => {\n    if (!receiverAddress && !tokenAmount) return;\n    setLoading(true);\n    const response = await sendCoin();\n    if (response.data === \"\") setSendResult(response.rawLog);\n    if (response.data !== \"\") {\n      setTransactions((transactions) => [...transactions, response.txhash]);\n      setSendResultSuccess(response.txhash);\n    }\n    setLoading(false);\n  };\n\n  const sendCoin = async () => {\n    const { MsgSend } = Message;\n\n    const sendAmount = new Coin();\n    sendAmount.setDenom(\"uband\");\n    sendAmount.setAmount((tokenAmount * 1e6).toString());\n\n    const msg = new MsgSend(wallet.address, receiverAddress, [sendAmount]);\n    const response = await broadCastTx(msg, wallet.mnemonic);\n\n    return response;\n  };\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Send BAND Token</strong>\n        </h2>\n        <p className=\"mb-5\">\n          The message used for this service is\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong> MsgSend</strong>\n          </a>\n        </p>\n      </div>\n\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <AccountWithBalance />\n              <div className=\"card-inner p-6 \">\n                <div className=\"mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Recipient Address\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"text\"\n                      id=\"input-address\"\n                      value={receiverAddress}\n                      onChange={handleInputAddress}\n                    />\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Token Amount (BAND)\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      id=\"input-amount\"\n                      value={tokenAmount}\n                      onChange={handleInputTokenAmount}\n                    />\n                  </div>\n                </div>\n                <button\n                  onClick={sendBandToken}\n                  className=\"button block w-full text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-4 rounded-xl focus:outline-none\"\n                >\n                  Send\n                </button>\n              </div>\n            </div>\n            <h3 className=\"text-xl font-bold mb-5\">Latest Transactions</h3>\n            {loading ? (\n              <Loading />\n            ) : transactions.length > 0 ? (\n              transactions.map((tx) => {\n                return (\n                  <a\n                    className=\"text-black mb-3 p-3 border-2 border-gray-200 hover:border-blue rounded-xl block\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${tx}`}\n                  >\n                    {tx}\n                  </a>\n                );\n              })\n            ) : (\n              <div className=\"text-md\">You don't have any transactions</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FormSendToken;\n","import FormSendToken from \"../components/FormSendToken\";\nexport default function SendToken() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormSendToken />\n      </div>\n    </div>\n  );\n}\n","import { broadCastTx } from \"../band\";\nimport { Obi, Message, Coin } from \"@bandprotocol/bandchain.js\";\nimport { useState, useEffect } from \"react\";\nimport Loading from \"./Loading\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport AccountWithBalance from \"./AccountWithBalance\";\n\nfunction FormSendRequest() {\n  const wallet = useSelector((state) => state.wallet);\n  const [isConnected, setisConnected] = useState(false);\n\n  const [sendResultError, setSendResultError] = useState(\"\");\n  // const [sendResult, setSendResult] = useState([]);\n  const [symbols, setSymbols] = useState(\"\");\n  const [multiplierInput, setMultiplierInput] = useState(\"\");\n  const [feeInput, setFeeInput] = useState(\"\");\n  const [prepareGasInput, setPrepareGasInput] = useState(\"\");\n  const [executeGasInput, setExecuteGasInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [formStep, setFormStep] = useState(0);\n\n  const [transactions, setTransactions] = useState(\"\");\n\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n  }, [wallet]);\n\n  const sendRequest = async () => {\n    setFormStep(formStep + 1);\n    if (!symbols && !multiplierInput && !feeInput && !prepareGasInput && !executeGasInput) return;\n    setLoading(Boolean(1));\n    const requestID = await makeRequest();\n\n    if (requestID.data === \"\") {\n      setSendResultError(requestID.rawLog);\n    }\n\n    setTransactions(requestID.txhash);\n    setLoading(false);\n  };\n\n  const makeRequest = async () => {\n    const obi = new Obi(\"{symbols:[string],multiplier:u64}/{rates:[u64]}\");\n    const calldata = obi.encodeInput({\n      symbols: symbols.toUpperCase().replace(/\\s/g, \"\").split(\",\"),\n      multiplier: multiplierInput,\n    });\n\n    const oracleScriptId = 37;\n    const askCount = 2;\n    const minCount = 1;\n    const clientId = \"from_bandchain.js\";\n\n    let feeLimit = new Coin();\n    feeLimit.setDenom(\"uband\");\n    feeLimit.setAmount(feeInput);\n\n    // Step 2.2: Create an oracle request message\n    const requestMessage = new Message.MsgRequestData(\n      oracleScriptId,\n      calldata,\n      askCount,\n      minCount,\n      clientId,\n      wallet.address, // sender\n      [feeLimit],\n      prepareGasInput,\n      executeGasInput\n    );\n\n    const tx = await broadCastTx(requestMessage, wallet.mnemonic);\n    return tx;\n  };\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Create a new request</strong>\n        </h2>\n        <p className=\"mb-5\">\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong>MsgRequestData</strong>\n          </a>{\" \"}\n          is a message for sending a data oracle request.\n        </p>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <AccountWithBalance />\n              {formStep === 0 ? (\n                <>\n                  <div className=\"card-inner p-6\">\n                    <div className=\"mb-5 form-container\">\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Symbols (Separate with comma)\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-address\"\n                          value={symbols}\n                          onChange={(e) => setSymbols(e.target.value)}\n                          placeholder=\"e.g BTC,ETH\"\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Multiplier (u64)\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          min=\"0\"\n                          type=\"number\"\n                          id=\"input-multiplier\"\n                          value={multiplierInput}\n                          onChange={(e) => setMultiplierInput(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Fee Limit (uband)\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          min=\"0\"\n                          type=\"number\"\n                          id=\"input-fee\"\n                          value={feeInput}\n                          onChange={(e) => setFeeInput(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Prepare Gas\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          min=\"0\"\n                          type=\"number\"\n                          id=\"input-gas1\"\n                          value={prepareGasInput}\n                          onChange={(e) => setPrepareGasInput(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Execute Gas\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          min=\"0\"\n                          type=\"number\"\n                          id=\"input-gas2\"\n                          value={executeGasInput}\n                          onChange={(e) => setExecuteGasInput(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                    <button\n                      onClick={sendRequest}\n                      className=\"button block w-full text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-4 rounded-xl focus:outline-none\"\n                    >\n                      Send a Request\n                    </button>\n                  </div>\n                </>\n              ) : loading ? (\n                <div className=\"form-wrapper flex items-center justify-center\">\n                  <div className=\"form-container\">\n                    <Loading />\n                  </div>\n                </div>\n              ) : transactions !== \"\" ? (\n                sendResultError ? (\n                  <div className=\"form-wrapper flex items-center justify-center\">\n                    <div className=\"form-container p-6\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-20 w-20 text-orange mx-auto mb-5\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                        />\n                      </svg>\n                      <div className=\"text-orange text-center mb-5\">{sendResultError}</div>\n                      <button\n                        onClick={(e) => setFormStep(formStep - 1)}\n                        className=\"button block mx-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Back\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"p-6 form-wrapper flex items-center justify-center\">\n                    <div className=\"form-container\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-20 w-20 text-green-400 mx-auto mb-5\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                        />\n                      </svg>\n                      <h4 className=\"text-md text-center\">\n                        <strong>Transaction Hash</strong>\n                      </h4>\n                      <a\n                        className=\"overflow-ellipsis overflow-hidden text-black mb-3 block hover:text-blue text-center\"\n                        href={`https://laozi-testnet4.cosmoscan.io/tx/${transactions}`}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        {transactions}\n                      </a>\n                      <button\n                        onClick={(e) => setFormStep(formStep - 1)}\n                        className=\"button block mx-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Back\n                      </button>\n                    </div>\n                  </div>\n                )\n              ) : (\n                <>\n                  <div className=\"text-md\">You don't have any transactions</div>\n                  <button onClick={(e) => setFormStep(formStep - 1)}>Back</button>\n                </>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FormSendRequest;\n","import FormSendRequest from \"../components/FormSendRequest\";\nexport default function SendRequest() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormSendRequest />\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { sendIBC } from \"../band\";\nimport Loading from \"./Loading\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport AccountWithBalance from \"./AccountWithBalance\";\n\nfunction FormSendToken() {\n  const wallet = useSelector((state) => state.wallet);\n  const [isConnected, setisConnected] = useState(false);\n\n  const [tokenAmount, setTokenAmount] = useState(0);\n  const [receiverAddress, setReceiverAddress] = useState(\n    \"band1jrhuqrymzt4mnvgw8cvy3s9zhx3jj0dq30qpte\"\n  );\n  const [sendResult, setSendResult] = useState(\"\");\n  const [sendResultSuccess, setSendResultSuccess] = useState(\"\");\n  const [loading, setLoading] = useState(Boolean(0));\n  const ibcchannel = \"CONSUMER\";\n\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n  }, [wallet]);\n\n  const handleInputTokenAmount = (e) => {\n    setTokenAmount(e.target.value);\n  };\n  const handleInputAddress = (e) => {\n    setReceiverAddress(e.target.value);\n  };\n  const sendBandToken = async () => {\n    if (!receiverAddress && !tokenAmount) return;\n    setLoading(Boolean(1));\n    const response = await sendIBC(receiverAddress, tokenAmount, wallet);\n    console.log(response);\n    if (response.height === 0) {\n      setSendResult(response.rawLog);\n    }\n    if (response.data !== \"\") {\n      setSendResultSuccess(response.txhash);\n    }\n    setTransactions((transactions) => [...transactions, response.txhash]);\n    setLoading(Boolean(0));\n  };\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Send BAND token via IBC</strong>\n        </h2>\n        <p className=\"mb-5\">\n          The message used for this service is\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong> MsgTransfer</strong>\n          </a>\n        </p>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <AccountWithBalance />\n              <div className=\"card-inner p-6\">\n                <div className=\"mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-channel\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Channel\n                    </label>\n                    <input\n                      className=\"text-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"text\"\n                      id=\"input-channel\"\n                      value={ibcchannel}\n                      disabled\n                    />\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Recipient Address\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"text\"\n                      id=\"input-address\"\n                      value={receiverAddress}\n                      onChange={handleInputAddress}\n                    />\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Token Amount (BAND)\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"number\"\n                      id=\"input-amount\"\n                      value={tokenAmount}\n                      onChange={handleInputTokenAmount}\n                    />\n                  </div>\n                </div>\n                <button\n                  onClick={sendBandToken}\n                  className=\"button block w-full text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-4 rounded-xl focus:outline-none\"\n                >\n                  Send\n                </button>\n              </div>\n            </div>\n            <h3 className=\"text-xl font-bold mb-5\">Latest Transactions</h3>\n            {loading ? (\n              <Loading />\n            ) : transactions.length > 0 ? (\n              transactions.map((tx, ind) => {\n                return (\n                  <a\n                    className=\"text-black mb-3 p-3 border-2 border-gray-200 hover:border-blue rounded-xl block\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${tx}`}\n                    key={ind}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {tx}\n                  </a>\n                );\n              })\n            ) : (\n              <div className=\"text-md\">You don't have any transactions</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FormSendToken;\n","import FormIBCTransfer from \"../components/FormIBCTransfer\";\nexport default function IBCTransfer() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormIBCTransfer />\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { createDataSource } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport AccountWithBalance from \"./AccountWithBalance\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-python\";\n// import \"prismjs/themes/prism.css\";\nimport \"prismjs/themes/prism-tomorrow.css\";\n\nexport default function FormCreateDataSource() {\n  const wallet = useSelector((state) => state.wallet);\n\n  // State\n  const [isConnected, setisConnected] = useState(false);\n  const [step, setStep] = useState(1);\n  const [codeType, setCodeType] = useState(\"upload\");\n\n  // Form Data\n  const [dsname, setdsname] = useState(\"\");\n  const [dsdesc, setdsdesc] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [treasury, setTreasury] = useState(\"\");\n  const [code, setCode] = useState([]);\n  const [filename, setfilename] = useState(\"\");\n  const [codeEditor, setCodeEditor] = useState(`# Insert your code here`);\n\n  // Handling Functions\n  const nextStep = (e) => {\n    e.preventDefault();\n    setStep(step + 1);\n  };\n\n  const prevStep = () => {\n    setStep(step - 1);\n  };\n\n  const isFormFilled = () => {\n    if (dsname !== \"\" && owner !== \"\" && treasury !== \"\") {\n      return false;\n    }\n    return true;\n  };\n\n  const removeFile = () => {\n    setCode([]);\n    setfilename(\"\");\n  };\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setfilename(acceptedFiles[0].name);\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n        console.log(binaryStr);\n        setCode(binaryStr);\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: \"text/x-python-script\",\n  });\n\n  const renderSwitchCode = () => {\n    switch (codeType) {\n      case \"editor\":\n        return (\n          <Editor\n            value={codeEditor}\n            onValueChange={(rawcode) => setCodeEditor(rawcode)}\n            highlight={(rawcode) => highlight(rawcode, languages.py, \"python\")}\n            padding={15}\n            style={{\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n              fontSize: 12,\n              background: \"#282A2B\",\n              color: \"white\",\n              borderRadius: \"10px\",\n              minHeight: \"300px\",\n            }}\n          />\n        );\n      default:\n        return (\n          <div className=\"input-group mb-3\">\n            {code.byteLength > 0 ? (\n              <div\n                onClick={removeFile}\n                className=\"group cursor-pointer border-l-2 border-t-2 border-r-4 border-b-4 hover:border-r-2 hover:border-b-2  hover:border-orange hover:bg-red-100 border-black bg-yellow-50 p-3 text-black rounded-xl relative w-full hover:transform hover:translate-x-px hover:translate-y-px\"\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <img\n                      src=\"/images/python-file.png\"\n                      alt=\"\"\n                      className=\"w-100 block h-auto mr-4\"\n                      style={{ maxWidth: \"50px\" }}\n                    />\n                    <p className=\"font-medium\">{filename}</p>\n                  </div>\n                  <div className=\"invisible group-hover:visible btn-deletefile w-8 h-8 bg-orange rounded-full text-white flex items-center justify-center\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-5 w-5\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"upload-outer\" {...getRootProps()}>\n                <input {...getInputProps()} />\n                <div className=\"h-40 border-2 bg-gray-50 border-gray-300 rounded-xl text-center flex items-center justify-center\">\n                  <div>\n                    Drag 'n' drop a file here,\n                    <br /> or <br />\n                    <span className=\"mt-2 cursor-pointer inline-block button px-4 py-1 border-2 border-black rounded-xl bg-yellow-300 hover:bg-yellow-400 text-sm\">\n                      Browse\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        );\n    }\n  };\n\n  const submitCode = async () => {\n    alert(\"MsgCreateDataSource not found\");\n    // const response = await createDataSource(\n    //   dsname,\n    //   codeType === \"upload\" ? code : window.btoa(codeEditor),\n    //   owner,\n    //   treasury,\n    //   wallet,\n    //   dsdesc\n    // );\n    // console.log(response);\n  };\n\n  // Effects\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n  }, [wallet]);\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Add a new data source</strong>\n        </h2>\n        <p className=\"mb-5\">\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong>MsgCreateDataSource</strong>\n          </a>{\" \"}\n          is a message for creating a new data source.\n        </p>\n        <div className=\"process-step\">\n          <ul>\n            <li className=\"mb-5\">\n              <strong>Step 1:</strong> Provide the data source information such as data source name,\n              owner, treasury address, and description.\n            </li>\n            <li className=\"mb-5\">\n              <strong>Step 2:</strong> Upload the data source file or try using code editor in .py\n              formatted.\n            </li>\n            <li className=\"mb-5\">\n              <strong>Step 3:</strong> Deploy your data source and Finish.\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <div className=\"card-inner p-6\">\n                {step === 1 ? (\n                  <div className=\"form-container mb-5 step step-1\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 1:</strong> Enter the data source information below.\n                      </h3>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Data Source Name <span className=\"text-orange\">*</span>\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-address\"\n                          onChange={(e) => setdsname(e.target.value)}\n                          value={dsname}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-owner\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Owner Address <span className=\"text-orange\">*</span>\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-owner\"\n                          value={owner}\n                          onChange={(e) => setOwner(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-treasury\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Treasury Address <span className=\"text-orange\">*</span>\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-treasury\"\n                          value={treasury}\n                          onChange={(e) => setTreasury(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-desc\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Description\n                        </label>\n                        <textarea\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-desc\"\n                          onChange={(e) => setdsdesc(e.target.value)}\n                          value={dsdesc}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-buttons\">\n                      <button\n                        onClick={nextStep}\n                        disabled={isFormFilled()}\n                        className=\"button block ml-auto text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 \"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 2 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 2:</strong> Choose how to add the data source code\n                      </h3>\n\n                      <div className=\"flex gap-6 radio-group choice-code\">\n                        <div className=\"flex-grow flex-shrink w-1/2 input-group mb-3\">\n                          <input\n                            type=\"radio\"\n                            name=\"codeType\"\n                            id=\"input-codeType-upload\"\n                            value=\"upload\"\n                            checked={codeType === \"upload\"}\n                            onChange={(e) => setCodeType(e.target.value)}\n                          />\n                          <label\n                            htmlFor=\"input-codeType-upload\"\n                            className=\"hover:bg-indigo-50 w-full label-btn button p-4 border-2 border-gray-300 block rounded-xl text-center cursor-pointer\"\n                          >\n                            <img\n                              src=\"/images/uploading.png\"\n                              alt=\"\"\n                              className=\"w-full mx-auto block mb-2\"\n                              style={{\n                                maxWidth: \"103px\",\n                              }}\n                            />\n                            Upload from my computer\n                          </label>\n                        </div>\n                        <div className=\"flex-grow flex-shrink w-1/2 input-group mb-3\">\n                          <input\n                            type=\"radio\"\n                            name=\"codeType\"\n                            id=\"input-codeType-editor\"\n                            value=\"editor\"\n                            checked={codeType === \"editor\"}\n                            onChange={(e) => setCodeType(e.target.value)}\n                          />\n                          <label\n                            htmlFor=\"input-codeType-editor\"\n                            className=\"hover:bg-indigo-50  w-full label-btn button p-4 border-2 border-gray-300 block rounded-xl text-center cursor-pointer\"\n                          >\n                            <img\n                              src=\"/images/code.png\"\n                              alt=\"\"\n                              className=\"w-full mx-auto block mb-2\"\n                              style={{\n                                maxWidth: \"103px\",\n                              }}\n                            />\n                            Using Code Editor\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        onClick={nextStep}\n                        className=\"button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 3 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 2.1:</strong> Add the data source code\n                      </h3>\n                      {renderSwitchCode()}\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        disabled={code.byteLength > 0 ? false : codeEditor === \"\"}\n                        onClick={nextStep}\n                        className=\"disabled:opacity-50 button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 4 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 3:</strong> Review\n                      </h3>\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        onClick={submitCode()}\n                        className=\"button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Confirm and Deploy\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import FormCreateDataSource from \"../components/FormCreateDataSource\";\n\nexport default function DataSource() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormCreateDataSource />\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nexport default function OracleScript() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <div className=\"services mt-8 max-w-screen-md mx-auto\">\n          <ul className=\"services--list flex gap-6 flex-wrap items-stretch\">\n            <li className=\"services--list-item flex-grow w-1/5\">\n              <Link\n                to=\"create\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/oracle.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-xl font-bold\">Create Oracle Script</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow w-1/5\">\n              <Link\n                to=\"edit\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/osedit.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-xl font-bold\">Edit Oracle Script</h3>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nexport default function AccountWithBalanceCenter() {\n  const wallet = useSelector((state) => state.wallet);\n  const [fullAddress, setFullAddress] = useState(\"\");\n  const [copied, setcopied] = useState(false);\n  const [accountAddress, setaccountAddress] = useState(\"\");\n  const [accountBalance, setAccountBalance] = useState(0);\n\n  useEffect(() => {\n    if (wallet.address) {\n      const orgStr = wallet.address;\n      const subStr = orgStr.substr(0, 20) + \"...\" + orgStr.substr(orgStr.length - 4, orgStr.length);\n      setaccountAddress(subStr);\n      setFullAddress(orgStr);\n      setAccountBalance(wallet.balance);\n    } else {\n      setaccountAddress(\"\");\n      setFullAddress(\"\");\n    }\n  }, [wallet]);\n\n  return (\n    <div className=\"\">\n      <div className=\"card-balance card-top  p-6 w-full rounded-xl\">\n        <div className=\"account-avatar\">\n          <div className=\"avatar w-full\">\n            <img\n              src=\"/images/avatar-4.png\"\n              alt=\"\"\n              style={{ maxWidth: \"100px\" }}\n              className=\"block mx-auto mb-6\"\n            />\n          </div>\n          <div className=\"w-full block\">\n            <div className=\"flex justify-center\">\n              <h3 className=\"text-sm font-bold\">{accountAddress} </h3>\n              <div className=\"relative\">\n                <CopyToClipboard text={fullAddress} onCopy={() => setcopied(true)}>\n                  <button className=\"ml-3 hover:text-orange group relative inline-block align-baseline\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      style={{ width: \"16px\", height: \"16px\" }}\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                      />\n                    </svg>\n                    <div className=\"tooltip-content absolute opacity-0 group-hover:opacity-100 text-xs bg-black rounded-md py-1 px-2 text-white transform -translate-x-1/2 left-1/2\">\n                      {copied ? \"Copied\" : \"Copy\"}\n                    </div>\n                  </button>\n                </CopyToClipboard>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"account-balance mt-3 border-b-4 border-2 border-black p-3 rounded-xl bg-yellow-50 flex justify-between items-center\">\n          <div>\n            <p className=\"text-sm mb-1\">Balance:</p>\n            <h3 className=\"text-md font-bold\">{accountBalance ? accountBalance : \"0\"} BAND</h3>\n          </div>\n          <button className=\"button bg-white hover:bg-orange flex items-center justify-center w-10 h-10 rounded-full border-2 border-black\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-8 w-8\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nexport default function SidebarAccountMenu() {\n  const menus = [\n    {\n      title: \"Overview\",\n      path: \"/myaccount/\",\n      icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z\" />\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z\" />\n    </svg>`,\n    },\n    {\n      title: \"Validators\",\n      path: \"/myaccount/validators\",\n      icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n    </svg>`,\n    },\n    {\n      title: \"Delegations\",\n      path: \"/myaccount/delegations\",\n      icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\" />\n    </svg>`,\n    },\n    {\n      title: \"Transactions\",\n      path: \"/myaccount/transactions\",\n      icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n    </svg>`,\n    },\n    {\n      title: \"Converter\",\n      path: \"/myaccount/converter\",\n      icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" />\n    </svg>`,\n    },\n  ];\n  return (\n    <div className=\"sidebar-menu--vertical py-6 border-t-2 border-gray-200\">\n      <h4 className=\"text-gray-500 font-medium text-xs mb-3 px-6 uppercase \">Menu</h4>\n      <ul>\n        {menus.map((menu, ind) => {\n          return (\n            <li className=\"menu-item group\" key={ind}>\n              <Link\n                to={menu.path}\n                className=\"px-6 py-3 flex items-center gap-3 group-hover:bg-gray-100 group-hover:text-blue\"\n              >\n                <div className=\"menu-icon\" dangerouslySetInnerHTML={{ __html: menu.icon }}></div>\n                <span className=\"menu-text font-medium\">{menu.title}</span>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import AccountWithBalanceCenter from \"./AccountWithBalanceCenter\";\nimport SidebarAccountMenu from \"./SidebarAccountMenu\";\n\nexport default function AccountSidebar() {\n  return (\n    <div className=\"card bg-white rounded-2xl mt-5 lg:w-1/4 w-full\">\n      <AccountWithBalanceCenter />\n      <SidebarAccountMenu />\n    </div>\n  );\n}\n","export function SingleValidator({ validator, totalBonded }) {\n  return (\n    <div className=\"px-2  w-4/12 \">\n      <div className=\"card border-2 border-black rounded-xl p-5 my-2\">\n        <h3 className=\"mb-3\">\n          <strong>{validator.moniker}</strong>\n        </h3>\n        <p className=\"text-gray-500 text-xs mb-1\">Voting Power</p>\n        <h4 className=\"text-xl\">{((validator.tokens / totalBonded) * 100).toFixed(2)}%</h4>\n      </div>\n    </div>\n  );\n}\n","import { gql, useLazyQuery, useQuery } from \"@apollo/client\";\nimport { SingleValidator } from \"../components/SingleValidator\";\n\nexport default function Validators() {\n  const GET_VALIDATORS = gql`\n    query GetValidators {\n      validators {\n        moniker\n        operator_address\n        tokens\n        commission_rate\n        commission_max_change\n        commission_max_rate\n      }\n      validators_aggregate {\n        aggregate {\n          sum {\n            tokens\n          }\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_VALIDATORS);\n\n  return (\n    <div className=\"flex flex-wrap -mx-2\">\n      {loading\n        ? \"Loading...\"\n        : error\n        ? `Error! ${error.message}`\n        : data\n        ? data.validators.map((validator, ind) => {\n            return (\n              <SingleValidator\n                validator={validator}\n                key={ind}\n                totalBonded={\n                  data.validators_aggregate ? data.validators_aggregate.aggregate.sum.tokens : 0\n                }\n              />\n            );\n          })\n        : \"0 Validator\"}\n    </div>\n  );\n}\n","import { withdrawReward } from \"../band\";\nimport { useSelector } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\nexport function SingleDelegator({ delegator }) {\n  const wallet = useSelector((state) => state.wallet);\n  const validator = delegator.operator_address;\n  const rewards = delegator.reward / 1e6;\n  const claim = async (e) => {\n    e.preventDefault();\n    const response = await withdrawReward(wallet.address, validator, wallet);\n\n    //TODO: there's no handle fn to the response in UI\n    console.log(response);\n  };\n\n  return (\n    <div className=\"px-2 w-full lg:w-4/12 mb-5 block\">\n      <div className=\"card border-2 border-black rounded-xl p-5 h-full\">\n        <h3 className=\"mb-3\">\n          <Link to={validator} className=\"hover:text-blue\">\n            <strong>{delegator.moniker}</strong>\n          </Link>\n        </h3>\n        <div className=\"flex -mx-3 flex-wrap \">\n          <div className=\"px-3 w-1/2\">\n            <p className=\"text-xs text-gray-500 mb-1\">Staked (BAND)</p>\n            <p className=\"text-md text-black font-bold\">{(delegator.amount / 1e6).toFixed(4)}</p>\n          </div>\n          <div className=\"border-l border-gray-200  px-3 :w-1/2\">\n            <p className=\"text-xs text-gray-500 mb-1\">Rewards (BAND)</p>\n            <p className=\"text-md text-black font-bold\">{rewards.toFixed(4)}</p>\n          </div>\n        </div>\n        <button\n          onClick={(e) => claim(e)}\n          disabled={rewards.toFixed(4) <= 0.0001}\n          className=\"button disabled:opacity-50 disabled:border-b-2 px-4 py-2 w-full bg-yellow-400 border-2 shadow-insetBlack border-black rounded-xl mt-4 hover:border-b-2 hover:bg-yellow-500 hover:shadow-none disabled:bg-gray-300 disabled:shadow-none\"\n        >\n          Claim\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport { Message, Coin } from \"@bandprotocol/bandchain.js\";\nimport { undelegateCoin, broadCastTx } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport { ModalDelegateContext } from \"../app-context\";\n\nexport default function ModalDelegate({ title, operator }) {\n  const { isShowModal, setIsShowModal } = useContext(ModalDelegateContext);\n  const wallet = useSelector((state) => state.wallet);\n  const [loading, setloading] = useState(false);\n  const [txhash, settxhash] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const closeModalHandler = () => {\n    setloading(false);\n    setIsShowModal(false);\n  };\n\n  const confirm = async () => {\n    setloading(true);\n\n    const response =\n      title === \"delegate\"\n        ? await sendCoin(\n            operator,\n            amount,\n            wallet.privateKey,\n            wallet.pubkey,\n            wallet.address,\n            \"delegate\"\n          )\n        : await undelegateCoin(operator, amount, wallet);\n    if (response) {\n      settxhash(response.txhash);\n    }\n  };\n\n  const sendCoin = async () => {\n    const { MsgDelegate } = Message;\n\n    const sendAmount = new Coin();\n    sendAmount.setDenom(\"uband\");\n    sendAmount.setAmount((amount * 1e6).toString());\n\n    const msg = new MsgDelegate(wallet.address, operator, sendAmount);\n\n    // Step 5 send the transaction\n    const response = await broadCastTx(msg, wallet.mnemonic);\n\n    return response;\n  };\n\n  return (\n    <div\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      className={\n        isShowModal\n          ? \"fixed z-10 inset-0 overflow-y-auto block\"\n          : \" fixed z-10 inset-0 overflow-y-auto hidden\"\n      }\n    >\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n          &#8203;\n        </span>\n\n        <div className=\"inline-block align-bottom bg-white rounded-3xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-5\">\n            <div className=\"flex justify-between align-items-center mt-3 mb-5 text-center sm:mt-0 sm:text-left\">\n              <h2 className=\"mb-0 text-xl capitalize\">\n                <strong>{title}</strong>\n              </h2>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6 text-orange cursor-pointer hover:text-orange-dark\"\n                onClick={(e) => closeModalHandler(e)}\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </div>\n            {loading ? (\n              txhash ? (\n                <div>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-20 w-20 text-green-400 mx-auto mb-5\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                  </svg>\n                  <h4 className=\"text-md text-center\">\n                    <strong>Transaction Hash</strong>\n                  </h4>\n                  <a\n                    className=\"overflow-ellipsis overflow-hidden text-black mb-3 block hover:text-blue\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${txhash}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {txhash}\n                  </a>\n                </div>\n              ) : (\n                <div>\n                  <h2>Sending...</h2>\n                </div>\n              )\n            ) : (\n              <div className=\"modal-body\">\n                <div className=\"form-delegate-wrapper mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Delegate {title === \"delegate\" ? `To` : `From`}\n                    </label>\n                    <p>{operator}</p>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Amount\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"number\"\n                      id=\"input-amount\"\n                      value={amount}\n                      onChange={(e) => setAmount(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <button\n                  onClick={confirm}\n                  className=\"capitalize button block w-full bg-purple-600 text-white py-2 px-4 rounded-xl hover:bg-purple-700 focus:outline-none focus:ring-purple-600 focus:ring-opacity-50 transition duration-500 ease-in-out\"\n                >\n                  {title}\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport { reDelegateCoin } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport { ModalDelegateContext } from \"../app-context\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nexport default function ModalRedelegate({ title, operator }) {\n  const { isShowModalRedelegate, setIsShowModalRedelegate } = useContext(ModalDelegateContext);\n  const wallet = useSelector((state) => state.wallet);\n  const [modalloading, setmodalloading] = useState(false);\n  const [txhash, settxhash] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [destvalidator, setdestvalidator] = useState(\"\");\n\n  const closeModalHandler = () => {\n    setmodalloading(false);\n    setIsShowModalRedelegate(false);\n  };\n\n  const confirm = async () => {\n    setmodalloading(true);\n    console.log(operator);\n    console.log(destvalidator);\n\n    const response = await reDelegateCoin(operator, destvalidator, amount, wallet);\n    if (response) {\n      settxhash(response.txhash);\n    }\n  };\n\n  const GET_VALIDATORS = gql`\n    query GetValidators {\n      validators {\n        moniker\n        operator_address\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_VALIDATORS);\n\n  return (\n    <div\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      className={\n        isShowModalRedelegate\n          ? \"fixed z-10 inset-0 overflow-y-auto block\"\n          : \" fixed z-10 inset-0 overflow-y-auto hidden\"\n      }\n    >\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n          &#8203;\n        </span>\n\n        <div className=\"inline-block align-bottom bg-white rounded-3xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-5\">\n            <div className=\"flex justify-between align-items-center mt-3 mb-5 text-center sm:mt-0 sm:text-left\">\n              <h2 className=\"mb-0 text-xl capitalize\">\n                <strong>Redelegate</strong>\n              </h2>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6 text-orange cursor-pointer hover:text-orange-dark\"\n                onClick={(e) => closeModalHandler(e)}\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </div>\n            {modalloading ? (\n              txhash ? (\n                <div>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-20 w-20 text-green-400 mx-auto mb-5\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                  </svg>\n                  <h4 className=\"text-md text-center\">\n                    <strong>Transaction Hash</strong>\n                  </h4>\n                  <a\n                    className=\"overflow-ellipsis overflow-hidden text-black mb-3 block hover:text-blue\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${txhash}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {txhash}\n                  </a>\n                </div>\n              ) : (\n                <div>\n                  <h2>Sending...</h2>\n                </div>\n              )\n            ) : (\n              <div className=\"modal-body\">\n                <div className=\"form-delegate-wrapper mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Redelegate From\n                    </label>\n                    <p>{operator}</p>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-validator\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Redelegate To\n                    </label>\n                    <select\n                      className=\"border-2 border-gray-200 rounded-xl w-full px-3 py-2\"\n                      onChange={(e) => setdestvalidator(e.target.value)}\n                    >\n                      {data ? (\n                        data.validators.map((validator) => (\n                          <option value={validator.operator_address}>{validator.moniker}</option>\n                        ))\n                      ) : (\n                        <option value=\"\">Select Validator</option>\n                      )}\n                    </select>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Amount\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"number\"\n                      id=\"input-amount\"\n                      value={amount}\n                      onChange={(e) => setAmount(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <button\n                  onClick={confirm}\n                  className=\"capitalize button block w-full bg-purple-600 text-white py-2 px-4 rounded-xl hover:bg-purple-700 focus:outline-none focus:ring-purple-600 focus:ring-opacity-50 transition duration-500 ease-in-out\"\n                >\n                  Redelegate\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport { reinvestRewards } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport { ModalDelegateContext } from \"../app-context\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nexport default function ModalReinvest({ operator, rewardAmount }) {\n  const { isShowModalReinvest, setIsShowModalReInvest } = useContext(ModalDelegateContext);\n  const wallet = useSelector((state) => state.wallet);\n  const [modalloading, setmodalloading] = useState(false);\n  const [txhash, settxhash] = useState(\"\");\n\n  const closeModalHandler = () => {\n    setmodalloading(false);\n    setIsShowModalReInvest(false);\n  };\n\n  const confirm = async () => {\n    setmodalloading(true);\n\n    const response = await reinvestRewards(operator, wallet);\n    if (response) {\n      settxhash(response.txhash);\n    }\n  };\n\n  return (\n    <div\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      className={\n        isShowModalReinvest\n          ? \"fixed z-10 inset-0 overflow-y-auto block\"\n          : \" fixed z-10 inset-0 overflow-y-auto hidden\"\n      }\n    >\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n          &#8203;\n        </span>\n\n        <div className=\"inline-block align-bottom bg-white rounded-3xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-5\">\n            <div className=\"flex justify-between align-items-center mt-3 mb-5 text-center sm:mt-0 sm:text-left\">\n              <h2 className=\"mb-0 text-xl capitalize\">\n                <strong>Reinvest</strong>\n              </h2>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6 text-orange cursor-pointer hover:text-orange-dark\"\n                onClick={(e) => closeModalHandler(e)}\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </div>\n            {modalloading ? (\n              txhash ? (\n                <div>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-20 w-20 text-green-400 mx-auto mb-5\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                  </svg>\n                  <h4 className=\"text-md text-center\">\n                    <strong>Transaction Hash</strong>\n                  </h4>\n                  <a\n                    className=\"overflow-ellipsis overflow-hidden text-black mb-3 block hover:text-blue\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${txhash}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {txhash}\n                  </a>\n                </div>\n              ) : (\n                <div>\n                  <h2>Sending...</h2>\n                </div>\n              )\n            ) : (\n              <div className=\"modal-body\">\n                <div className=\"form-delegate-wrapper mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Reinvest To\n                    </label>\n                    <p>{operator}</p>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Current Rewards\n                    </label>\n                    <p>{rewardAmount} BAND</p>\n                  </div>\n                </div>\n                <button\n                  onClick={confirm}\n                  className=\"capitalize button block w-full bg-purple-600 text-white py-2 px-4 rounded-xl hover:bg-purple-700 focus:outline-none focus:ring-purple-600 focus:ring-opacity-50 transition duration-500 ease-in-out\"\n                >\n                  Reinvest\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\nimport { getPairPrice, withdrawReward } from \"../band\";\nimport ModalDelegate from \"../components/ModalDelegate\";\nimport { ModalDelegateContext } from \"../app-context\";\nimport ModalRedelegate from \"../components/ModalRedelegate\";\nimport ModalReinvest from \"../components/ModalReinvest\";\n\nexport default function DelegatorDetails() {\n  const [isShowModal, setIsShowModal] = useState(false);\n  const [isShowModalRedelegate, setIsShowModalRedelegate] = useState(false);\n  const [isShowModalReinvest, setIsShowModalReInvest] = useState(false);\n  const [delegateType, setDelegateType] = useState(\"\");\n  const [reinvestReward, setreinvestReward] = useState(0);\n  // const [isShowModalDelegate, setIsShowModalDelegate] = useState(false);\n  // const [isShowModalUndelegate, setIsShowModalUndelegate] = useState(false);\n\n  const isModalDelegateActive = useMemo(() => ({ isShowModal, setIsShowModal }), [isShowModal]);\n  const isModalRedelegateActive = useMemo(\n    () => ({ isShowModalRedelegate, setIsShowModalRedelegate }),\n    [isShowModalRedelegate]\n  );\n  const isModalReinvestActive = useMemo(\n    () => ({ isShowModalReinvest, setIsShowModalReInvest }),\n    [isShowModalReinvest]\n  );\n\n  // const isModalDelegateActive = useMemo(\n  //   () => ({ isShowModalDelegate, setIsShowModalDelegate }),\n  //   [isShowModalDelegate]\n  // );\n  // const isModalUndelegateActive = useMemo(\n  //   () => ({ isShowModalUndelegate, setIsShowModalUndelegate }),\n  //   [isShowModalUndelegate]\n  // );\n\n  const wallet = useSelector((state) => state.wallet);\n  let { operator } = useParams();\n\n  // states\n  const [usdPrice, setUsdPrice] = useState([]);\n\n  async function getPrice() {\n    const response = await getPairPrice([\"BAND/USD\"], 10, 16);\n    if (response) setUsdPrice(response[0].rate);\n  }\n\n  // const GET_DELEGATIONS = gql`\n  //   subscription GetAccountDelegations($address: String!) {\n  //     delegations_view(\n  //       where: { delegator_address: { _eq: $address } }\n  //       order_by: { moniker: asc }\n  //     ) {\n  //       amount\n  //       moniker\n  //       reward\n  //       operator_address\n  //       delegator_address\n  //     }\n  //   }\n  // `;\n\n  const GET_VALIDATOR_DETAILS = gql`\n    query GetValidatorDetails($address: String!, $operator: String!) {\n      delegations_view(\n        where: { delegator_address: { _eq: $address }, operator_address: { _eq: $operator } }\n      ) {\n        amount\n        delegator_address\n        moniker\n        operator_address\n        reward\n      }\n      validators(where: { operator_address: { _eq: $operator } }) {\n        tokens\n        commission_rate\n        validator_report_count {\n          count\n        }\n      }\n      validators_aggregate {\n        aggregate {\n          sum {\n            tokens\n          }\n        }\n      }\n    }\n  `;\n\n  // const { loading, error, data } = useQuery(GET_DELEGATIONS);\n  // const [GetValidator, { loading, error, data }] = useSubscription(GET_VALIDATOR_DETAILS);\n  //\n  const [GetValidator, { loading, error, data }] = useLazyQuery(GET_VALIDATOR_DETAILS);\n\n  // const [getDelegationSub, { loading, error, data }] = useSubscription(GET_DELEGATIONS, {\n  //   variables: { address: wallet.address },\n  // });\n\n  // const { amount, moniker, delegator_address, operator_address, reward, share_percentage } = data.delegations_view\n\n  const openModalDelegate = (modalType) => {\n    // if (delegateType === \"delegate\") setIsShowModalDelegate(true);\n    // if (delegateType === \"undelegate\") setIsShowModalUndelegate(true);\n    setIsShowModal(true);\n    setDelegateType(modalType);\n  };\n\n  const openModalRedelegate = () => {\n    // if (delegateType === \"delegate\") setIsShowModalDelegate(true);\n    // if (delegateType === \"undelegate\") setIsShowModalUndelegate(true);\n    setIsShowModalRedelegate(true);\n  };\n\n  const openModalReInvest = (reward) => {\n    setreinvestReward(reward);\n    // if (delegateType === \"delegate\") setIsShowModalDelegate(true);\n    // if (delegateType === \"undelegate\") setIsShowModalUndelegate(true);\n    setIsShowModalReInvest(true);\n  };\n\n  const claim = async () => {\n    const response = await withdrawReward(\n      wallet.address,\n      operator,\n      wallet.address,\n      wallet.pubkey,\n      wallet.privateKey\n    );\n    console.log(response);\n  };\n\n  useEffect(() => {\n    getPrice();\n  }, []);\n\n  useEffect(() => {\n    GetValidator({ variables: { address: wallet.address, operator: operator } });\n  }, [wallet, operator, GetValidator]);\n\n  return (\n    <div>\n      <div className=\"flex flex-wrap -mx-2\">\n        {loading ? (\n          \"Loading...\"\n        ) : error ? (\n          `Error! ${error.message}`\n        ) : data ? (\n          <>\n            <h1 className=\"text-2xl mb-3\">\n              <strong>{data.delegations_view[0].moniker}</strong>\n            </h1>\n            <div className=\"flex w-full gap-3 flex-wrap mt-3\">\n              <div className=\"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-rose-400\">\n                <h3 className=\"mb-2 text-sm font-medium\">Voting Power</h3>\n                <h3 className=\"text-2xl text-right font-bold\">\n                  {(\n                    (data.validators[0].tokens / data.validators_aggregate.aggregate.sum.tokens) *\n                    100\n                  ).toFixed(2)}\n                  %\n                </h3>\n              </div>\n              <div className=\"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-indigo-400\">\n                <h3 className=\"mb-2 text-sm font-medium\">Commission</h3>\n                <h3 className=\"text-2xl text-right font-bold\">\n                  {(data.validators[0].commission_rate * 100).toFixed(2)}%\n                </h3>\n              </div>\n              <div className=\"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-warmGray-400\">\n                <h3 className=\"mb-2 text-sm font-medium\">Oracle Reports</h3>\n                <h3 className=\"text-2xl text-right font-bold\">\n                  {data.validators[0].validator_report_count.count}\n                </h3>\n              </div>\n            </div>\n            <div className=\"mt-8 block w-full\">\n              <h2 className=\"text-xl mb-3\">\n                <strong>Your Delegation</strong>\n              </h2>\n              <div className=\"flex w-full gap-3 flex-wrap mt-3\">\n                <div className=\"border-2 border-black p-5 w-full block rounded-xl flex-1 flex-grow bg-yellow-300\">\n                  <h3 className=\"mb-4 text-xl font-bold\">Assets</h3>\n                  <h3 className=\"mb-2 text-sm font-medium\">BAND Staked</h3>\n                  <h4 className=\"text-2xl font-bold text-right\">\n                    {(data.delegations_view[0].amount / 1e6).toFixed(4)}\n                  </h4>\n                  <h4 className=\"mb-2 text-sm font-medium text-right text-orange\">\n                    ~{((data.delegations_view[0].amount / 1e6) * usdPrice).toFixed(4)} USD\n                  </h4>\n                  <div className=\"action-group flex gap-3 mt-4\">\n                    <button\n                      onClick={() => openModalDelegate(\"delegate\")}\n                      className=\"flex-1 flex-grow button block ml-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 shadow-insetBlack hover:shadow-none\"\n                    >\n                      Delegate\n                    </button>\n                    <button\n                      onClick={() => openModalDelegate(\"undelegate\")}\n                      className=\"flex-1 flex-grow button block ml-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 shadow-insetBlack hover:shadow-none\"\n                    >\n                      Undelegate\n                    </button>\n                    <button\n                      onClick={openModalRedelegate}\n                      className=\"flex-1 flex-grow button block ml-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 shadow-insetBlack hover:shadow-none\"\n                    >\n                      Redelegate\n                    </button>\n                  </div>\n                </div>\n                <div className=\"border-2 border-black p-5 w-full block rounded-xl flex-1 flex-grow bg-teal-400\">\n                  <h3 className=\"mb-3 text-xl font-bold\">Rewards</h3>\n                  <h3 className=\"mb-2 text-sm font-medium\">Unclaim Rewards (BAND)</h3>\n                  <h4 className=\"text-2xl font-bold text-right\">\n                    {(data.delegations_view[0].reward / 1e6).toFixed(4)}\n                  </h4>\n                  <h4 className=\"mb-2 text-sm font-medium text-right text-orange\">\n                    ~{((data.delegations_view[0].reward / 1e6) * usdPrice).toFixed(4)} USD\n                  </h4>\n                  <div className=\"action-group flex gap-3 mt-4\">\n                    <button\n                      onClick={() => openModalReInvest(data.delegations_view[0].reward / 1e6)}\n                      className=\"flex-1 flex-grow button block ml-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 shadow-insetBlack hover:shadow-none\"\n                    >\n                      Reinvest\n                    </button>\n                    <button\n                      onClick={claim}\n                      className=\"flex-1 flex-grow button block ml-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 shadow-insetBlack hover:shadow-none\"\n                    >\n                      Claim\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          \"0 Validator\"\n        )}\n      </div>\n      <ModalDelegateContext.Provider value={isModalDelegateActive}>\n        <ModalDelegate operator={operator} title={delegateType} />\n      </ModalDelegateContext.Provider>\n      <ModalDelegateContext.Provider value={isModalRedelegateActive}>\n        <ModalRedelegate operator={operator} title={delegateType} />\n      </ModalDelegateContext.Provider>\n      <ModalDelegateContext.Provider value={isModalReinvestActive}>\n        <ModalReinvest operator={operator} rewardAmount={reinvestReward} />\n      </ModalDelegateContext.Provider>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\nimport { SingleDelegator } from \"../components/SingleDelegator\";\nimport DelegatorDetails from \"./DelegatorDetails\";\n\nexport default function Delegations() {\n  const wallet = useSelector((state) => state.wallet);\n  useEffect(() => {\n    // getDelegators({ variables: { address: wallet.address } });\n  }, []);\n\n  const GET_DELEGATIONS = gql`\n    subscription GetAccountDelegations($address: String!) {\n      delegations_view(\n        where: { delegator_address: { _eq: $address } }\n        order_by: { moniker: asc }\n      ) {\n        amount\n        moniker\n        reward\n        operator_address\n        delegator_address\n      }\n    }\n  `;\n\n  //   const { loading, error, data } = useQuery(GET_DELEGATIONS);\n  // const [getDelegators, { loading, error, data }] = useLazyQuery(GET_DELEGATIONS);\n  const { loading, error, data } = useSubscription(GET_DELEGATIONS, {\n    variables: { address: wallet.address },\n  });\n\n  return (\n    <div>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <div>\n              <h2 className=\"text-2xl mb-5\">\n                <strong>Delegations</strong>\n              </h2>\n              <div className=\"flex flex-wrap -mx-2\">\n                {loading\n                  ? \"Loading...\"\n                  : error\n                  ? `Error! ${error.message}`\n                  : data\n                  ? data.delegations_view.map((delegator, ind) => {\n                      return <SingleDelegator delegator={delegator} key={ind} />;\n                    })\n                  : \"0 Validator\"}\n              </div>\n            </div>\n          }\n        />\n        <Route path=\":operator\" element={<DelegatorDetails />} />\n      </Routes>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { getPairPrice } from \"../band\";\nexport default function Converter() {\n  const [inputSource, setinputSource] = useState(1);\n  const [symbolSource, setsymbolSource] = useState(\"BTC\");\n  const [inputDest, setinputDest] = useState(1);\n  const [symbolDest, setsymbolDest] = useState(\"USD\");\n  const [rate, setRate] = useState(0);\n\n  const symbols = [\n    \"USD\",\n    \"JPY\",\n    \"THB\",\n    \"AUD\",\n    \"EUR\",\n    \"BTC\",\n    \"ETH\",\n    \"BNB\",\n    \"USDT\",\n    \"SOL\",\n    \"LUNA\",\n    \"BAND\",\n  ];\n\n  const getPrice = async (pair) => {\n    const response = await getPairPrice(pair, 10, 16);\n    setRate(response[0].rate);\n  };\n\n  const handleSelectSourceChanged = (e) => {\n    setsymbolSource(e.target.value);\n    getPrice([`${e.target.value}/${symbolDest}`]);\n  };\n\n  const handleSelectDestChanged = (e) => {\n    setsymbolDest(e.target.value);\n    getPrice([`${symbolSource}/${e.target.value}`]);\n  };\n\n  const handleInputSourceChange = (val) => {\n    setinputSource(val);\n    setinputDest((val * rate).toFixed(2));\n  };\n\n  useEffect(() => {\n    if (symbolSource != \"\") getPrice([`${symbolSource}/${symbolDest}`]);\n  }, []);\n\n  useEffect(() => {\n    setinputDest((inputSource * rate).toFixed(2));\n  }, [rate]);\n\n  return (\n    <div>\n      <h1 className=\"text-2xl mb-5\">\n        <strong>Cryptocurrency Converter Calculator</strong>\n      </h1>\n      <div className=\"\">\n        <div className=\"form-converter-group md:flex gap-2 items-center\">\n          <div className=\"form flex-1 flex-grow\">\n            <label className=\"text-gray-400 font-medium\">From</label>\n            <div className=\"input-group mb-3\">\n              <select\n                className=\"bg-white border-2 border-gray-200 rounded-xl w-full px-3 py-2\"\n                onChange={(e) => handleSelectSourceChanged(e)}\n                value={symbolSource}\n              >\n                {symbols.map((symbol) => (\n                  <option value={symbol}>{symbol}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <input\n                className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 text-5xl border-solid border-2 border-gray-200 rounded-xl\"\n                type=\"text\"\n                id=\"input-srcPrice\"\n                value={inputSource}\n                onChange={(e) => handleInputSourceChange(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"mx-auto mt-3 w-10 h-10 border-2 border-black rounded-full flex items-center justify-center bg-orange\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\"\n              />\n            </svg>\n          </div>\n          <div className=\"form  flex-1 flex-grow\">\n            <label className=\"text-gray-400 font-medium\">To</label>\n            <div className=\"input-group mb-3\">\n              <select\n                className=\"bg-white border-2 border-gray-200 rounded-xl w-full px-3 py-2\"\n                onChange={(e) => handleSelectDestChanged(e)}\n                value={symbolDest}\n              >\n                {symbols.map((symbol) => (\n                  <option value={symbol}>{symbol}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <input\n                className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 text-5xl border-solid border-2 border-gray-200 rounded-xl\"\n                type=\"text\"\n                id=\"input-desc\"\n                value={inputDest}\n                onChange={(e) => setinputDest(e.target.value)}\n                disabled=\"disabled\"\n              />\n            </div>\n          </div>\n          <div className=\"flex\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { gql, useSubscription } from \"@apollo/client\";\nimport { useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nexport default function Transactions() {\n  const wallet = useSelector((state) => state.wallet);\n\n  const GET_ACCOUNT_TRANSACTIONS_BY_PK = gql`\n    subscription GetAccountTransactionByPK($address: String!) {\n      accounts_by_pk(address: $address) {\n        account_transactions(order_by: { transaction_id: desc }, limit: 10) {\n          transaction {\n            block_height\n            err_msg\n            gas_fee\n            gas_limit\n            hash\n            gas_used\n            id\n            messages\n            sender\n            success\n          }\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useSubscription(GET_ACCOUNT_TRANSACTIONS_BY_PK, {\n    variables: { address: wallet.address },\n  });\n\n  useEffect(() => {}, []);\n\n  return (\n    <div>\n      <h1 className=\"text-2xl mb-5\">\n        <strong>My Transactions</strong>\n      </h1>\n      <div className=\"\">\n        {loading ? (\n          \"Loading...\"\n        ) : error ? (\n          `Error! ${error.message}`\n        ) : data ? (\n          <div className=\"tx-table border-black border-2 rounded-xl\">\n            <div>\n              <div className=\"row flex text-left\">\n                <th className=\"w-4/12 col p-2\">Hash</th>\n                <th className=\"col w-2/12 p-2\">Block</th>\n                <th className=\"col w-2/12 p-2\">Status</th>\n                <th className=\"w-4/12 col p-2\">Actions</th>\n              </div>\n            </div>\n            <tbody>\n              {data.accounts_by_pk.account_transactions.map((tx, ind) => {\n                return (\n                  <div className=\"row flex\">\n                    <div className=\"p-2 w-4/12 overflow-hidden overflow-ellipsis\">\n                      <span>{tx.transaction.hash.replace(\"\\\\x\", \"\")}</span>\n                    </div>\n                    <div className=\"p-2 w-2/12\">{tx.transaction.block_height}</div>\n                    <div className=\"p-2 w-2/12\">\n                      {tx.transaction.success ? (\n                        <span className=\"text-green-400\">Success</span>\n                      ) : (\n                        <span className=\"text-orange\">Failed</span>\n                      )}\n                    </div>\n                    <div className=\"p-2 w-4/12  overflow-hidden overflow-ellipsis\">\n                      {tx.transaction.messages.map((msg) => (\n                        <span>{msg.type.split(\"1.\")[1]}</span>\n                      ))}\n                    </div>\n                  </div>\n                );\n              })}\n            </tbody>\n          </div>\n        ) : (\n          \"You haven't made any transaction in this account.\"\n        )}\n      </div>\n    </div>\n  );\n}\n","import AccountSidebar from \"../components/AccountSidebar\";\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Validators from \"./Validators\";\nimport Delegations from \"./Delegations\";\nimport DelegatorDetails from \"./DelegatorDetails\";\nimport Converter from \"./Converter\";\nimport Transactions from \"./Transactions\";\n\nexport default function AccountPage() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"md:flex gap-6\">\n        <AccountSidebar />\n        <div className=\"card bg-white md:p-10 p-5 rounded-2xl mt-5 lg:w-3/4 w-full\">\n          <Routes>\n            <Route path=\"validators\" element={<Validators />} />\n            <Route path=\"delegations\" element={<Delegations />}>\n              <Route path=\":operator\" element={<DelegatorDetails />} />\n            </Route>\n            <Route path=\"converter\" element={<Converter />} />\n            <Route path=\"transactions\" element={<Transactions />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import FormOracleScript from \"../components/FormOracleScript\";\nexport default function CreateOracleScript() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormOracleScript />\n      </div>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport { React, useState, useEffect } from \"react\";\nimport { Link, BrowserRouter, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\n// components\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Header/Navbar\";\nimport BackButton from \"./components/BackButton\";\nimport Footer from \"./components/Footer\";\n\n// routes\nimport GetPrice from \"./routes/GetPrice\";\nimport Delegate from \"./routes/Delegate\";\nimport SendToken from \"./routes/SendToken\";\nimport SendRequest from \"./routes/SendRequest\";\nimport IBCTransfer from \"./routes/IBCTransfer\";\nimport DataSource from \"./routes/DataSource\";\nimport OracleScript from \"./routes/OracleScript\";\nimport AccountPage from \"./routes/AccountPage\";\nimport Validators from \"./routes/Validators\";\nimport Delegations from \"./routes/Delegations\";\nimport DelegatorDetails from \"./routes/DelegatorDetails\";\nimport CreateOracleScript from \"./routes/CreateOracleScript\";\nimport Converter from \"./routes/Converter\";\nimport Transactions from \"./routes/Transactions\";\n\nconst BackRoute = () => {\n  const location = useLocation();\n  if (location.pathname !== \"/\" && !location.pathname.includes(\"/myaccount\")) {\n    return <BackButton />;\n  }\n  return null;\n};\n\nfunction App() {\n  const wallet = useSelector((state) => state.wallet);\n  const [code, setCode] = useState(null);\n\n  useEffect(() => {\n    // fetch(\"/compile\")\n    //   .then((res) => res.json())\n    //   .then((data) => {\n    //     setCode(data.message);\n    //     if (code) console.log(code);\n    //   });\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App md:p-6 p-3\">\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          <Route exact path=\"/sendToken\" element={<SendToken />} />\n          <Route exact path=\"/request\" element={<SendRequest />} />\n          <Route exact path=\"/getprice\" element={<GetPrice />} />\n          <Route exact path=\"/delegate\" element={<Delegate />} />\n          <Route exact path=\"/transfer\" element={<IBCTransfer />} />\n          <Route exact path=\"/datasource\" element={<DataSource />} />\n          <Route exact path=\"/oraclescript\" element={<OracleScript />} />\n          <Route exact path=\"/oraclescript/create\" element={<CreateOracleScript />} />\n          <Route exact path=\"/oraclescript/edit\" element={<CreateOracleScript />} />\n          <Route\n            exact\n            path=\"/myaccount\"\n            element={wallet.address ? <AccountPage /> : <Navigate to=\"/\" />}\n          >\n            <Route path=\"validators\" element={<Validators />} />\n            <Route path=\"delegations\" element={<Delegations />}>\n              <Route path=\":operator\" element={<DelegatorDetails />} />\n            </Route>\n            <Route path=\"converter\" element={<Converter />} />\n            <Route path=\"transactions\" element={<Transactions />} />\n          </Route>\n        </Routes>\n        <BackRoute />\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport walletReducer from \"./walletSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    wallet: walletReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./redux/store\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { split, HttpLink } from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\n\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst httpLink = new HttpLink({\n  uri: \"https://graphql-lt4.bandchain.org/v1/graphql\",\n});\n\nconst wsLink = new WebSocketLink({\n  uri: \"wss://graphql-lt4.bandchain.org/v1/graphql\",\n  options: {\n    reconnect: true,\n  },\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const baseUrl = \"https://graphql-lt4.bandchain.org/v1/graphql\";\nexport const grpcUrl = \"https://laozi-testnet4.bandchain.org/grpc-web\";\n"],"sourceRoot":""}