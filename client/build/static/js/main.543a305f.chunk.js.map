{"version":3,"sources":["band.js","components/FormOracleScript.js","components/UnableService.js","components/Home.js","app-context.js","redux/walletSlice.js","components/FormConnectWallet.js","components/Header/ModalConnectWallet.js","components/Header/WalletDropdown.js","components/Header/Navbar.js","components/BackButton.js","components/Footer.js","components/CardPrice.js","components/FormGetPrice.js","routes/GetPrice.js","components/Loading.js","components/AccountWithBalance.js","components/FormDelegate.js","routes/Delegate.js","components/FormSendToken.js","routes/SendToken.js","components/FormSendRequest.js","routes/SendRequest.js","components/FormIBCTransfer.js","routes/IBCTransfer.js","components/FormCreateDataSource.js","routes/DataSource.js","routes/OracleScript.js","components/AccountWithBalanceCenter.js","components/SidebarAccountMenu.js","components/AccountSidebar.js","components/SingleValidator.js","routes/Validators.js","components/SingleDelegator.js","components/ModalDelegate.js","components/ModalRedelegate.js","components/ModalReinvest.js","routes/DelegatorDetails.js","routes/Delegations.js","routes/Converter.js","routes/Transactions.js","routes/AccountPage.js","routes/CreateOracleScript.js","App.js","reportWebVitals.js","redux/store.js","index.js","api/index.js"],"names":["client","Client","grpcUrl","getPairPrice","pair","minCount","askCount","a","getReferenceData","data","console","log","error","getWallet","mnemonic","privateKey","Wallet","PrivateKey","fromMnemonic","pubkey","toPubkey","walletAddress","toAddress","toAccBech32","undelegateCoin","operator","amount","wallet","sendAmount","Coin","setDenom","setAmount","toString","MsgUndelegate","Message","msg","address","broadCastTx","response","reDelegateCoin","srcOperator","destOperator","MsgBeginRedelegate","reinvestRewards","validator","MsgWithdrawDelegatorReward","withdrawReward","delegator","sendIBC","receiver","MsgTransfer","timeoutTimestamp","moment","unix","createOracleScript","postData","name","desc","schema","url","code","owner","requestMessage","MsgCreateOracleScript","createMsgEditOS","id","MsgEditOracleScript","getRawPreview","title","source_code_url","sender","coin","feeCoin","Buffer","from","fee","Fee","setAmountList","setGasLimit","getChainId","chainId","txn","Transaction","withMessages","withSender","withChainId","withFee","withMemo","signDoc","getSignDoc","signature","sign","txRawBytes","getTxData","getRawPreviewEditOs","signedTx","sendTxBlockMode","FormOracleScript","useSelector","state","useState","isConnected","setisConnected","step","setStep","codeType","setCodeType","setOsId","osname","setosname","osdesc","setosdesc","setschema","sourcecodeUrl","setsourcecodeUrl","setOwner","setCode","filename","setfilename","codeEditor","setCodeEditor","wasmCode","setwasmCode","osActionType","setOsActionType","location","useLocation","nextStep","e","preventDefault","prevStep","removeFile","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","onerror","onload","binaryStr","result","readAsArrayBuffer","useDropzone","accept","getRootProps","getInputProps","compileCode","axios","post","then","res","fileBuf","submitCode","useEffect","pathname","includes","className","href","target","rel","htmlFor","type","onChange","value","onClick","disabled","checked","src","alt","style","maxWidth","onValueChange","rawcode","highlight","languages","rust","padding","fontFamily","fontSize","background","color","borderRadius","minHeight","byteLength","xmlns","viewBox","fill","fillRule","d","clipRule","renderSwitchCode","UnableService","Home","to","ModalContext","createContext","isShow","setIsShow","ModalDelegateContext","isShowModal","setIsShowModal","isShowModalRedelegate","setIsShowModalRedelegate","isShowModalReinvest","setIsShowModalReInvest","walletSlice","createSlice","initialState","balance","reducers","addWallet","action","payload","removeWallet","updateBalance","actions","FormConnectWallet","dispatch","useDispatch","setMnemonic","GET_BALANCE","gql","useSubscription","variables","loading","accounts","uband","split","valur","length","handleConnectButton","ModalConnectWallet","useContext","aria-labelledby","role","aria-modal","aria-hidden","stroke","strokeLinecap","strokeLinejoin","strokeWidth","WalletDropdown","account","setaccount","toggleDropdown","setToggleDropdown","orgStr","subStr","substr","aria-orientation","tabIndex","Navbar","useMemo","setIsConnected","Fragment","Provider","BackButton","width","height","Footer","Date","getFullYear","CardPrice","symbol","toLowerCase","Intl","NumberFormat","currency","format","rate","FormGetPrice","defaultPair","prices","setPrice","pairInput","setPairInput","setminCount","setaskCount","getPrice","toUpperCase","replace","placeholder","map","price","ind","GetPrice","Loading","AccountWithBalance","fullAddress","setFullAddress","copied","setcopied","accountAddress","setaccountAddress","accountBalance","setAccountBalance","text","onCopy","FormDelegate","setValidator","setSendResult","setSendResultSuccess","setLoading","transactions","setTransactions","sendBandToken","sendCoin","rawLog","txhash","MsgDelegate","tx","Delegate","FormSendToken","tokenAmount","setTokenAmount","receiverAddress","setReceiverAddress","Boolean","MsgSend","SendToken","FormSendRequest","sendResultError","setSendResultError","symbols","setSymbols","multiplierInput","setMultiplierInput","feeInput","setFeeInput","prepareGasInput","setPrepareGasInput","executeGasInput","setExecuteGasInput","formStep","setFormStep","sendRequest","makeRequest","requestID","obi","Obi","calldata","encodeInput","multiplier","feeLimit","MsgRequestData","min","stroke-linecap","stroke-linejoin","stroke-width","SendRequest","IBCTransfer","FormIBCTransfer","FormCreateDataSource","dsname","setdsname","dsdesc","setdsdesc","treasury","setTreasury","alert","py","DataSource","OracleScript","AccountWithBalanceCenter","SidebarAccountMenu","path","icon","menu","dangerouslySetInnerHTML","__html","AccountSidebar","SingleValidator","totalBonded","moniker","tokens","toFixed","Validators","GET_VALIDATORS","useQuery","message","validators","validators_aggregate","aggregate","sum","SingleDelegator","operator_address","rewards","reward","claim","ModalDelegate","setloading","settxhash","confirm","ModalRedelegate","modalloading","setmodalloading","destvalidator","setdestvalidator","ModalReinvest","rewardAmount","DelegatorDetails","delegateType","setDelegateType","reinvestReward","setreinvestReward","isModalDelegateActive","isModalRedelegateActive","isModalReinvestActive","useParams","usdPrice","setUsdPrice","GET_VALIDATOR_DETAILS","useLazyQuery","GetValidator","openModalDelegate","modalType","delegations_view","commission_rate","validator_report_count","count","Delegations","GET_DELEGATIONS","element","Converter","inputSource","setinputSource","symbolSource","setsymbolSource","inputDest","setinputDest","symbolDest","setsymbolDest","setRate","handleSelectSourceChanged","val","handleSelectDestChanged","Transactions","GET_ACCOUNT_TRANSACTIONS_BY_PK","accounts_by_pk","account_transactions","transaction","hash","block_height","success","messages","AccountPage","CreateOracleScript","BackRoute","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","walletReducer","httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","splitLink","query","definition","getMainDefinition","kind","operation","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.543a305f.chunk.js","sourcesContent":["import { Client, Wallet, Message, Coin, Transaction, Fee } from \"@bandprotocol/bandchain.js\";\nimport moment from \"moment\";\nimport { grpcUrl } from \"./api\";\n\nconst client = new Client(grpcUrl);\n\nexport async function getPairPrice(pair, minCount, askCount) {\n  try {\n    const data = await client.getReferenceData(pair, minCount, askCount);\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function getWallet(mnemonic) {\n  const { PrivateKey } = Wallet;\n  const privateKey = PrivateKey.fromMnemonic(mnemonic);\n  const pubkey = privateKey.toPubkey();\n  const walletAddress = pubkey.toAddress().toAccBech32();\n  return { walletAddress, pubkey, privateKey };\n}\n\nexport const undelegateCoin = async (operator, amount, wallet) => {\n  const sendAmount = new Coin();\n  sendAmount.setDenom(\"uband\");\n  sendAmount.setAmount((amount * 1e6).toString());\n\n  const { MsgUndelegate } = Message;\n  const msg = new MsgUndelegate(wallet.address, operator, sendAmount);\n  const response = await broadCastTx(msg, wallet.mnemonic);\n\n  return response;\n};\n\nexport const reDelegateCoin = async (srcOperator, destOperator, amount, wallet) => {\n  const sendAmount = new Coin();\n  sendAmount.setDenom(\"uband\");\n  sendAmount.setAmount((amount * 1e6).toString());\n\n  const { MsgBeginRedelegate } = Message;\n  const msg = new MsgBeginRedelegate(wallet.address, srcOperator, destOperator, sendAmount);\n  const response = await broadCastTx(msg, wallet.mnemonic);\n\n  return response;\n};\n\nexport const reinvestRewards = async (validator, wallet) => {\n  const { MsgWithdrawDelegatorReward } = Message;\n  const msg = new MsgWithdrawDelegatorReward(wallet.address, validator);\n  const response = await broadCastTx(msg, wallet.mnemonic);\n\n  return response;\n};\n\nexport async function withdrawReward(delegator, validator, wallet) {\n  const msg = new Message.MsgWithdrawDelegatorReward(delegator, validator);\n  const response = await broadCastTx(msg, wallet.mnemonic);\n  return response;\n}\n\nexport const sendIBC = async (receiver, amount, wallet) => {\n  const { MsgTransfer } = Message;\n  const sendAmount = new Coin();\n  sendAmount.setDenom(\"uband\");\n  sendAmount.setAmount((amount * 1e6).toString());\n  const timeoutTimestamp = moment().unix() * 1e9;\n\n  const msg = new MsgTransfer(\n    \"transfer\",\n    \"channel-25\",\n    wallet.address,\n    receiver,\n    sendAmount,\n    timeoutTimestamp\n  );\n\n  const response = await broadCastTx(msg, wallet.mnemonic);\n  return response;\n};\n\n// TODO: Waiting for the function in bandchain.js being merged\nexport const createDataSource = async (title, code, owner, treasury, wallet, ...desc) => {\n  const { MsgCreateDataSource } = Message;\n  let feeCoin = new Coin();\n  feeCoin.setDenom(\"uband\");\n  feeCoin.setAmount(\"1000\");\n\n  const msg = MsgCreateDataSource(title, code, [feeCoin], treasury, owner, wallet.address, desc);\n\n  const response = await broadCastTx(msg, wallet.mnemonic);\n\n  return response;\n};\n\n// TODO: Waiting for the function in bandchain.js being merged\nexport const editDataSource = async (id, code, owner, wallet, ...args) => {\n  let feeCoin = new Coin();\n  feeCoin.setDenom(\"uband\");\n  feeCoin.setAmount(\"1000\");\n\n  const msg = new Message.MsgEditDataSource(parseInt(id), code, [feeCoin], owner, wallet.address);\n\n  const response = await broadCastTx(msg, wallet.mnemonic);\n\n  return response;\n};\n\nexport async function createOracleScript(postData, wallet) {\n  const { name, desc, schema, url, code, owner } = postData;\n\n  const requestMessage = new Message.MsgCreateOracleScript(\n    name,\n    code,\n    owner,\n    wallet.address,\n    desc,\n    schema,\n    url\n  );\n\n  const response = await broadCastTx(requestMessage, wallet.mnemonic);\n\n  return response;\n}\n\n// TODO: Waiting for the function in bandchain.js being merged\nexport async function createMsgEditOS(postData, wallet) {\n  const { id, name, desc, schema, url, code, owner } = postData;\n  const requestMessage = new Message.MsgEditOracleScript(\n    id,\n    code,\n    owner,\n    wallet.address,\n    name,\n    desc,\n    schema,\n    url\n  );\n\n  const response = await broadCastTx(requestMessage, wallet.mnemonic);\n\n  return response;\n}\n\nexport async function getRawPreview(\n  title,\n  desc,\n  schema,\n  source_code_url,\n  code,\n  sender,\n  owner,\n  privateKey,\n  pubkey\n) {\n  let coin = new Coin();\n  coin.setDenom(\"uband\");\n  coin.setAmount(\"1000000\");\n\n  let feeCoin = new Coin();\n  feeCoin.setDenom(\"uband\");\n  feeCoin.setAmount(\"1000\");\n\n  const requestMessage = new Message.MsgCreateOracleScript(\n    title,\n    desc,\n    schema,\n    source_code_url,\n    Buffer.from(code),\n    owner,\n    sender\n  );\n\n  const fee = new Fee();\n  fee.setAmountList([feeCoin]);\n  fee.setGasLimit(1000000);\n  const chainId = await client.getChainId();\n  const txn = new Transaction();\n  txn.withMessages(requestMessage);\n  await txn.withSender(client, sender);\n  txn.withChainId(chainId);\n  txn.withFee(fee);\n  txn.withMemo(\"\");\n\n  const signDoc = txn.getSignDoc(pubkey);\n  const signature = privateKey.sign(signDoc);\n\n  const txRawBytes = txn.getTxData(signature, pubkey);\n\n  return txRawBytes;\n}\n\nexport async function getRawPreviewEditOs(\n  title,\n  desc,\n  schema,\n  source_code_url,\n  code,\n  sender,\n  owner,\n  privateKey,\n  pubkey\n) {\n  let coin = new Coin();\n  coin.setDenom(\"uband\");\n  coin.setAmount(\"1000000\");\n\n  let feeCoin = new Coin();\n  feeCoin.setDenom(\"uband\");\n  feeCoin.setAmount(\"1000\");\n\n  const requestMessage = new Message.MsgCreateOracleScript(\n    title,\n    desc,\n    schema,\n    source_code_url,\n    Buffer.from(code),\n    owner,\n    sender\n  );\n\n  const fee = new Fee();\n  fee.setAmountList([feeCoin]);\n  fee.setGasLimit(1000000);\n  const chainId = await client.getChainId();\n  const txn = new Transaction();\n  txn.withMessages(requestMessage);\n  await txn.withSender(client, sender);\n  txn.withChainId(chainId);\n  txn.withFee(fee);\n  txn.withMemo(\"\");\n\n  const signDoc = txn.getSignDoc(pubkey);\n  const signature = privateKey.sign(signDoc);\n\n  const txRawBytes = txn.getTxData(signature, pubkey);\n\n  return txRawBytes;\n}\n\nexport async function broadCastTx(msg, mnemonic) {\n  const { walletAddress, pubkey, privateKey } = getWallet(mnemonic);\n\n  let feeCoin = new Coin();\n  feeCoin.setDenom(\"uband\");\n  feeCoin.setAmount(\"1000\");\n\n  const fee = new Fee();\n  fee.setAmountList([feeCoin]);\n  fee.setGasLimit(1000000);\n\n  try {\n    const chainId = await client.getChainId();\n\n    const txn = new Transaction();\n    txn.withMessages(msg);\n\n    await txn.withSender(client, walletAddress);\n    txn.withChainId(chainId);\n    txn.withFee(fee);\n    txn.withMemo(\"From Bandchain.js Demo App\");\n\n    const signDoc = txn.getSignDoc(pubkey);\n    const signature = privateKey.sign(signDoc);\n\n    const signedTx = txn.getTxData(signature, pubkey);\n\n    const response = await client.sendTxBlockMode(signedTx);\n    return response;\n  } catch (err) {\n    console.error(err);\n    return;\n  }\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDropzone } from \"react-dropzone\";\nimport { createOracleScript, getRawPreview } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-rust\";\nimport \"prismjs/themes/prism-tomorrow.css\";\nimport axios from \"axios\";\n\nexport default function FormOracleScript() {\n  const wallet = useSelector((state) => state.wallet);\n\n  // State\n  const [isConnected, setisConnected] = useState(false);\n  const [step, setStep] = useState(1);\n  const [codeType, setCodeType] = useState(\"upload\");\n\n  // Form Data\n  const [osID, setOsId] = useState(\"\");\n  const [osname, setosname] = useState(\"\");\n  const [osdesc, setosdesc] = useState(\"\");\n  const [schema, setschema] = useState(\"\");\n  const [sourcecodeUrl, setsourcecodeUrl] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [code, setCode] = useState([]);\n  const [filename, setfilename] = useState(\"\");\n  const [codeEditor, setCodeEditor] = useState(`# Insert your code here`);\n  const [wasmCode, setwasmCode] = useState(null);\n  const [osActionType, setOsActionType] = useState(\"create\");\n\n  const location = useLocation();\n\n  // Handling Functions\n  const nextStep = (e) => {\n    e.preventDefault();\n    setStep(step + 1);\n  };\n\n  const prevStep = () => {\n    setStep(step - 1);\n  };\n\n  const isFormFilled = () => {\n    if (osname !== \"\" && owner !== \"\") {\n      return false;\n    }\n    return true;\n  };\n\n  const removeFile = () => {\n    setCode([]);\n    setfilename(\"\");\n  };\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setfilename(acceptedFiles[0].name);\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n        console.log(binaryStr);\n        setCode(binaryStr);\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: \"text/x-rustsrc\",\n  });\n\n  const renderSwitchCode = () => {\n    switch (codeType) {\n      case \"editor\":\n        return (\n          <Editor\n            value={codeEditor}\n            onValueChange={(rawcode) => setCodeEditor(rawcode)}\n            highlight={(rawcode) => highlight(rawcode, languages.rust)}\n            padding={15}\n            style={{\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n              fontSize: 12,\n              background: \"#282A2B\",\n              color: \"white\",\n              borderRadius: \"10px\",\n              minHeight: \"300px\",\n            }}\n          />\n        );\n      default:\n        return (\n          <div className=\"input-group mb-3\">\n            {code.byteLength > 0 ? (\n              <div\n                onClick={removeFile}\n                className=\"group cursor-pointer border-l-2 border-t-2 border-r-4 border-b-4 hover:border-r-2 hover:border-b-2  hover:border-orange hover:bg-red-100 border-black bg-yellow-50 p-3 text-black rounded-xl relative w-full hover:transform hover:translate-x-px hover:translate-y-px\"\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <img\n                      src=\"/images/python-file.png\"\n                      alt=\"\"\n                      className=\"w-100 block h-auto mr-4\"\n                      style={{ maxWidth: \"50px\" }}\n                    />\n                    <p className=\"font-medium\">{filename}</p>\n                  </div>\n                  <div className=\"invisible group-hover:visible btn-deletefile w-8 h-8 bg-orange rounded-full text-white flex items-center justify-center\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-5 w-5\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"upload-outer\" {...getRootProps()}>\n                <input {...getInputProps()} />\n                <div className=\"h-40 border-2 bg-gray-50 border-gray-300 rounded-xl text-center flex items-center justify-center\">\n                  <div>\n                    Drag 'n' drop a file here,\n                    <br /> or <br />\n                    <span className=\"mt-2 cursor-pointer inline-block button px-4 py-1 border-2 border-black rounded-xl bg-yellow-300 hover:bg-yellow-400 text-sm\">\n                      Browse\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        );\n    }\n  };\n\n  const compileCode = async () => {\n    setStep(step + 1);\n    if (codeType !== \"upload\") {\n      await axios\n        .post(`/compile`, {\n          code: codeEditor,\n        })\n        .then((res) => {\n          console.log(res);\n          setwasmCode(res.data.fileBuf);\n        });\n    }\n    // TODO: Check function create message\n    // getPreviewTx();\n  };\n\n  const getPreviewTx = async () => {\n    const response = await getRawPreview(\n      osname,\n      osdesc,\n      schema,\n      sourcecodeUrl,\n      codeType === \"upload\" ? code : Buffer.from(wasmCode),\n      owner,\n      wallet\n    );\n    console.log(response);\n    // Todo: receive the response and display as a preview\n  };\n\n  const submitCode = async () => {\n    const response = await createOracleScript(\n      {\n        name: osname,\n        desc: osdesc,\n        schema: schema,\n        url: sourcecodeUrl,\n        code: codeType === \"upload\" ? code : Buffer.from(wasmCode),\n        owner: owner,\n      },\n      wallet\n    );\n    console.log(response);\n    // Todo: Show loading state and the result of the tx and show the next step\n  };\n\n  // Effects\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n    if (location.pathname.includes(\"/edit\")) {\n      setOsActionType(\"edit\");\n    }\n  }, [wallet]);\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>{osActionType === \"edit\" ? `Edit an ` : `Add a new `} Oracle Script</strong>\n        </h2>\n        <p className=\"mb-5\">\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong>\n              {osActionType === \"edit\" ? `MsgEditOracleScript` : `MsgCreateOracleScript`}{\" \"}\n            </strong>\n          </a>{\" \"}\n          is a message for this service\n        </p>\n        <div className=\"process-step\">\n          <ul>\n            <li className=\"mb-5\">\n              <strong>Step 1:</strong> Provide the oracle script information such as name, schema,\n              owner address, and description.\n            </li>\n            <li className=\"mb-5\">\n              <strong>Step 2:</strong> Upload the .rust file or try using code editor\n            </li>\n            <li className=\"mb-5\">\n              <strong>Step 3:</strong> Review and deploy your oracle script and Finish.\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <div className=\"card-inner p-6\">\n                {step === 1 ? (\n                  <div className=\"form-container mb-5 step step-1\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 1:</strong> Enter the oracle script information below.\n                      </h3>\n                      {osActionType === \"edit\" ? (\n                        <div className=\"input-group mb-3\">\n                          <label\n                            htmlFor=\"input-address\"\n                            className=\"block text-sm font-medium text-gray-700 mb-1\"\n                          >\n                            Oracle Script ID <span className=\"text-orange\">*</span>\n                          </label>\n                          <input\n                            className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                            type=\"text\"\n                            id=\"input-address\"\n                            onChange={(e) => setOsId(e.target.value)}\n                            value={osname}\n                          />\n                        </div>\n                      ) : null}\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Oracle Script Name <span className=\"text-orange\">*</span>\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-address\"\n                          onChange={(e) => setosname(e.target.value)}\n                          value={osname}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-owner\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Owner Address <span className=\"text-orange\">*</span>\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-owner\"\n                          value={owner}\n                          onChange={(e) => setOwner(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-treasury\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Schema\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-treasury\"\n                          value={schema}\n                          onChange={(e) => setschema(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-treasury\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Source Code URL\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-treasury\"\n                          value={sourcecodeUrl}\n                          onChange={(e) => setsourcecodeUrl(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-desc\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Description\n                        </label>\n                        <textarea\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-desc\"\n                          onChange={(e) => setosdesc(e.target.value)}\n                          value={osdesc}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-buttons\">\n                      <button\n                        onClick={nextStep}\n                        disabled={isFormFilled()}\n                        className=\"button block ml-auto text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 \"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 2 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 2:</strong> Choose how to add the oracle script code\n                      </h3>\n\n                      <div className=\"flex gap-6 radio-group choice-code\">\n                        <div className=\"flex-grow flex-shrink w-1/2 input-group mb-3\">\n                          <input\n                            type=\"radio\"\n                            name=\"codeType\"\n                            id=\"input-codeType-upload\"\n                            value=\"upload\"\n                            checked={codeType === \"upload\"}\n                            onChange={(e) => setCodeType(e.target.value)}\n                          />\n                          <label\n                            htmlFor=\"input-codeType-upload\"\n                            className=\"hover:bg-indigo-50 w-full label-btn button p-4 border-2 border-gray-300 block rounded-xl text-center cursor-pointer\"\n                          >\n                            <img\n                              src=\"/images/uploading.png\"\n                              alt=\"\"\n                              className=\"w-full mx-auto block mb-2\"\n                              style={{\n                                maxWidth: \"103px\",\n                              }}\n                            />\n                            Upload from my computer (.rust)\n                          </label>\n                        </div>\n                        <div className=\"flex-grow flex-shrink w-1/2 input-group mb-3\">\n                          <input\n                            type=\"radio\"\n                            name=\"codeType\"\n                            id=\"input-codeType-editor\"\n                            value=\"editor\"\n                            checked={codeType === \"editor\"}\n                            onChange={(e) => setCodeType(e.target.value)}\n                          />\n                          <label\n                            htmlFor=\"input-codeType-editor\"\n                            className=\"hover:bg-indigo-50  w-full label-btn button p-4 border-2 border-gray-300 block rounded-xl text-center cursor-pointer\"\n                          >\n                            <img\n                              src=\"/images/code.png\"\n                              alt=\"\"\n                              className=\"w-full mx-auto block mb-2\"\n                              style={{\n                                maxWidth: \"103px\",\n                              }}\n                            />\n                            Using Code Editor\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        onClick={nextStep}\n                        className=\"button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 3 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 2.1:</strong> Add the oracle script code (.rust)\n                      </h3>\n                      {renderSwitchCode()}\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        disabled={code.byteLength > 0 ? false : codeEditor === \"\"}\n                        onClick={(e) => compileCode()}\n                        className=\"disabled:opacity-50 button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 4 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 3:</strong> Review\n                      </h3>\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        onClick={(e) => submitCode()}\n                        className=\"button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Confirm and Deploy\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","function UnableService() {\n  return (\n    <div className=\"text-center w-full\">\n      <img src=\"/images/connect.png\" alt=\"\" className=\"max-w-md mx-auto w-full\" />\n      <p className=\"text-center text-lg\">\n        To perform this service, Please <strong className=\"text-pink-400\">connect</strong> with your\n        wallet\n      </p>\n    </div>\n  );\n}\n\nexport default UnableService;\n","import { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <h2 className=\"text-center text-4xl\">\n          <strong>Please choose a service</strong>\n        </h2>\n        <div className=\"services mt-8\">\n          <ul className=\"services--list flex gap-6 flex-wrap items-stretch\">\n            <li className=\"services--list-item flex-grow w-1/5\">\n              <Link\n                to=\"/getprice\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/getprice.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-xl font-bold\">Get Price</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow w-1/5\">\n              <Link\n                to=\"/sendToken\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/token.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-xl font-bold\">Transfer</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow w-1/5\">\n              <Link\n                to=\"/delegate\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/delegate.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-xl font-bold\">Delegate Token</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow w-1/5\">\n              <Link\n                to=\"/transfer\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/transfer.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-xl font-bold\">IBC Transfer</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow w-1/5\">\n              <Link\n                to=\"/request\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/request.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-xl font-bold\">\n                  Make an\n                  <br /> Oracle Request\n                </h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow w-1/5\">\n              <Link\n                to=\"/datasource\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/datasource.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-xl font-bold\">Data Source</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow w-1/5\">\n              <Link\n                to=\"/oraclescript\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/oracle.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-xl font-bold\">Oracle Script</h3>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import { createContext } from \"react\";\n\nexport const ModalContext = createContext({\n  isShow: false,\n  setIsShow: () => {},\n});\n\nexport const ModalDelegateContext = createContext({\n  isShowModal: false,\n  setIsShowModal: () => {},\n  isShowModalRedelegate: false,\n  setIsShowModalRedelegate: () => {},\n  isShowModalReinvest: false,\n  setIsShowModalReInvest: () => {},\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { Client, Wallet, Obi, Message, Coin, Transaction, Fee } from \"@bandprotocol/bandchain.js\";\nimport { grpcUrl } from \"../api\";\n\nconst client = new Client(grpcUrl);\n\nconst initialState = {\n  address: null,\n  mnemonic: \"\",\n  balance: 0,\n};\n\nexport const walletSlice = createSlice({\n  name: \"wallet\",\n  initialState,\n  reducers: {\n    addWallet: (state, action) => {\n      state.address = action.payload.address;\n      state.mnemonic = action.payload.mnemonic;\n    },\n    removeWallet: (state, action) => {\n      state.address = \"\";\n      state.mnemonic = \"\";\n      state.balance = 0;\n    },\n    updateBalance: (state, action) => {\n      state.balance = action.payload.balance;\n    },\n  },\n});\n\nexport const { addWallet, removeWallet, updateBalance } = walletSlice.actions;\n\nexport default walletSlice.reducer;\n","import { useState, useEffect } from \"react\";\nimport { getWallet } from \"../band\";\nimport { useDispatch } from \"react-redux\";\nimport { addWallet, updateBalance } from \"../redux/walletSlice\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\nimport { useSelector } from \"react-redux\";\n\nexport default function FormConnectWallet() {\n  const wallet = useSelector((state) => state.wallet);\n  const dispatch = useDispatch();\n  const [mnemonic, setMnemonic] = useState(\"\");\n\n  // const GET_BALANCE = gql`\n  //   query GetBalance($address: String!) {\n  //     accounts(where: { address: { _eq: $address } }) {\n  //       balance\n  //     }\n  //   }\n  // `;\n\n  const GET_BALANCE = gql`\n    subscription GetBalance($address: String!) {\n      accounts(where: { address: { _eq: $address } }) {\n        balance\n      }\n    }\n  `;\n\n  // const [getBalance, { loading, error, data }] = useLazyQuery(GET_BALANCE);\n  const { loading, error, data } = useSubscription(GET_BALANCE, {\n    variables: { address: wallet.address },\n  });\n\n  useEffect(() => {\n    // getBalance({ variables: { address: wallet.address } });\n    if (data && data.accounts[0]) {\n      const uband = data.accounts[0].balance.split(\"uband\")[0];\n      dispatch(\n        updateBalance({\n          balance: uband / 1e6,\n        })\n      );\n    }\n    if (loading) console.error(loading);\n    if (error) console.error(error);\n  }, [wallet, data]);\n\n  const handleConnectButton = (e) => {\n    e.preventDefault();\n    if (mnemonic.length > 0 && mnemonic !== \"\") {\n      const { walletAddress } = getWallet(mnemonic);\n      if (walletAddress) {\n        dispatch(\n          addWallet({\n            address: walletAddress,\n            mnemonic: mnemonic,\n          })\n        );\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"card-inner\">\n        <div className=\"mb-5\">\n          <div className=\"input-group mb-3\">\n            <label htmlFor=\"input-address\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Enter mnemonic phrase\n            </label>\n            <input\n              className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n              type=\"text\"\n              id=\"input-address\"\n              valur={mnemonic}\n              onChange={(e) => setMnemonic(e.target.value)}\n            />\n          </div>\n        </div>\n        <button\n          onClick={(e) => handleConnectButton(e)}\n          className=\"button block w-full bg-purple-600 text-white py-2 px-4 rounded-xl hover:bg-purple-700 focus:outline-none focus:ring-purple-600 focus:ring-opacity-50 transition duration-500 ease-in-out\"\n        >\n          Connect Wallet\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { useContext, useEffect } from \"react\";\nimport { ModalContext } from \"../../app-context\";\nimport FormConnectWallet from \"../FormConnectWallet\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ModalConnectWallet() {\n  const { isShow, setIsShow } = useContext(ModalContext);\n  const closeModalHandler = (event) => setIsShow(false);\n  const wallet = useSelector((state) => state.wallet);\n\n  useEffect(() => {\n    setIsShow(false);\n  }, [wallet, setIsShow]);\n\n  return (\n    <div\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      className={\n        isShow\n          ? \"fixed z-10 inset-0 overflow-y-auto block\"\n          : \" fixed z-10 inset-0 overflow-y-auto hidden\"\n      }\n    >\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n          &#8203;\n        </span>\n\n        <div className=\"inline-block align-bottom bg-white rounded-3xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n            <div className=\"flex justify-between align-items-center mt-3 mb-5 text-center sm:mt-0 sm:text-left\">\n              <h2 className=\"mb-0 text-xl\">\n                <strong>Connect Wallet</strong>\n              </h2>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6 text-orange cursor-pointer hover:text-orange-dark\"\n                onClick={(e) => closeModalHandler(e)}\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </div>\n            <FormConnectWallet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { removeWallet } from \"../../redux/walletSlice\";\nimport { Link } from \"react-router-dom\";\n\nexport default function WalletDropdown() {\n  const wallet = useSelector((state) => state.wallet);\n  const [account, setaccount] = useState(\"\");\n  const [toggleDropdown, setToggleDropdown] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (wallet.address) {\n      const orgStr = wallet.address;\n      const subStr = orgStr.substr(0, 8) + \"...\" + orgStr.substr(orgStr.length - 4, orgStr.length);\n      setaccount(subStr);\n    }\n  }, [wallet]);\n  return (\n    <div className=\"relative inline-block\">\n      <div>\n        <button\n          onClick={(e) => setToggleDropdown(!toggleDropdown)}\n          className=\"inline-flex justify-center items-center w-full rounded-xl font-bold text-sm md:text-lg py-1 md:py-2 px-2 md:px-6 rounded-lg text-white bg-black hover:bg-black focus:outline-none\"\n        >\n          <span className=\"inline-block mr-1\">{account}</span>\n          <svg\n            className=\" h-7 w-7\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </button>\n      </div>\n      <div\n        className={`origin-top-right absolute right-0 mt-2 w-full border-2 border-black rounded-lg shadow-lg bg-white focus:outline-none${\n          toggleDropdown ? \"\" : \" hidden\"\n        }`}\n        role=\"menu\"\n        aria-orientation=\"vertical\"\n        aria-labelledby=\"menu-button\"\n        tabIndex=\"-1\"\n      >\n        <div className=\"py-1\" role=\"none\">\n          <Link\n            to=\"/myaccount\"\n            className=\"text-black block px-4 py-2 font-bold hover:bg-warmGray-100\"\n            tabIndex=\"-1\"\n            id=\"menu-item-0\"\n          >\n            My Account\n          </Link>\n          <button\n            onClick={(e) => dispatch(removeWallet({}))}\n            type=\"submit\"\n            className=\"text-orange block w-full text-left px-4 py-2 font-bold hover:bg-warmGray-100\"\n            role=\"menuitem\"\n            tabIndex=\"-1\"\n            id=\"menu-item-3\"\n          >\n            Disconnect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ModalConnectWallet from \"./ModalConnectWallet\";\nimport { ModalContext } from \"../../app-context\";\nimport { useSelector } from \"react-redux\";\nimport WalletDropdown from \"./WalletDropdown\";\n\nfunction Navbar() {\n  const [isShow, setIsShow] = useState(false);\n  const value = useMemo(() => ({ isShow, setIsShow }), [isShow]);\n  const wallet = useSelector((state) => state.wallet);\n  const [isConnected, setIsConnected] = useState(false);\n\n  useEffect(() => {\n    if (wallet.address) {\n      setIsConnected(true);\n    } else {\n      setIsConnected(false);\n    }\n  }, [wallet]);\n\n  return (\n    <React.Fragment>\n      <nav className=\"bg-white rounded-2xl\">\n        <div className=\"mx-auto md:px-10 p-3 md:py-0\">\n          <div className=\"relative flex items-center justify-between md:h-16\">\n            <div className=\"flex-1 flex items-center justify-start\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                <div className=\"flex md:items-end\">\n                  <h1 className=\"text-md md:text-xl\">\n                    <strong>\n                      <Link to=\"/\" className=\"hover:text-blue\">\n                        BandChain.js\n                      </Link>\n                    </strong>\n                  </h1>\n                  <div className=\"text-lg md:ml-2 flex items-center\">\n                    <span className=\"hidden md:inline-block\">Playgr</span>\n                    <span className=\"logo-ball w-3 h-3  mx-1 block bg-orange rounded-full animate-bounce\"></span>\n                    <span className=\"hidden md:inline-block\">und</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex-1 flex items-center justify-end\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                {isConnected ? (\n                  <WalletDropdown />\n                ) : (\n                  <button\n                    onClick={(e) => setIsShow(!isShow)}\n                    className=\"button text-blue text-sm md:text-lg py-2 px-2 md:px-6 rounded-lg bg-yellow-400 hover:bg-yellow-500 focus:outline-none focus:ring-yellow-500 focus:ring-opacity-50\"\n                  >\n                    Connect Wallet\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <ModalContext.Provider value={value}>\n        <ModalConnectWallet />\n      </ModalContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default Navbar;\n","import { Link } from \"react-router-dom\";\n\nexport default function BackButton() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:px-10 px-5 pt-0 pb-10 rounded-b-2xl mt-0\">\n        <div className=\"\">\n          <Link to=\"/\" className=\"text-xl font-bold text-black group inline-block\">\n            <div className=\"flex items-center\">\n              <div\n                className=\"bg-white group-hover:bg-orange text-black back-icon flex items-center justify-center rounded-full border-2 border-solid border-black mr-2\"\n                style={{\n                  width: \"40px\",\n                  height: \"40px\",\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\n                  />\n                </svg>\n              </div>\n              Back\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default function Footer() {\n  return (\n    <div className=\"py-3 px-10 bg-white rounded-2xl mt-5 flex justify-between items-center\">\n      <p className=\"mb-0 text-sm text-gray-400\">©{new Date().getFullYear()} | Bandprotocol </p>\n      <p className=\"mb-0 text-sm text-gray-400\">\n        Designed and Developed by{\" \"}\n        <a\n          href=\"https://github.com/pangthebabydustbunny\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"text-blue\"\n        >\n          pangp\n        </a>\n      </p>\n    </div>\n  );\n}\n","export default function CardPrice({ value }) {\n  const orgPair = value.pair;\n  const symbol = orgPair.split(\"/\")[0].toLowerCase();\n  return (\n    <div className=\"card bg-yellow-50 relative p-3 border-2 border-black rounded-xl w-full md:w-2/6 lg:w-1/6 cursor-pointer hover:bg-yellow-100\">\n      <div className=\"coin-symbol  w-6 h-6 overflow-hidden bg-white rounded-full flex justify-center items-center text-black\">\n        <img\n          src={`https://data.bandprotocol.com/tokens/${symbol}.png`}\n          alt=\"\"\n          className=\"object-cover block w-full h-full\"\n        />\n      </div>\n      <h3 className=\"text-lg mb-5 font-bold mt-3\">{value.pair}</h3>\n      <h3 className=\"text-lg font-medium text-blue\">\n        {new Intl.NumberFormat(\"en-TH\", { style: \"currency\", currency: \"USD\" }).format(value.rate)}\n      </h3>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Client } from \"@bandprotocol/bandchain.js\";\nimport CardPrice from \"./CardPrice\";\nimport { grpcUrl } from \"../api\";\n\nfunction FormGetPrice() {\n  const defaultPair = [\n    \"BTC/USD\",\n    \"ETH/USD\",\n    \"BNB/USD\",\n    \"LUNA/USD\",\n    \"DOT/USD\",\n    \"BAND/USD\",\n    \"ALPHA/USD\",\n  ];\n  // states\n  const [prices, setPrice] = useState([]);\n  const [pairInput, setPairInput] = useState(\"\");\n  const [minCount, setminCount] = useState(10);\n  const [askCount, setaskCount] = useState(16);\n\n  useEffect(() => {\n    getPrice(defaultPair);\n  }, []);\n\n  async function getPrice(pair = []) {\n    const client = new Client(grpcUrl);\n    const rate = await client.getReferenceData(\n      pairInput !== \"\"\n        ? pairInput.toUpperCase().replace(/\\s/g, \"\").split(\",\")\n        : pair.length > 0\n        ? pair\n        : defaultPair,\n      minCount,\n      askCount\n    );\n    // console.log(rate)\n    setPrice(rate);\n  }\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Get Price</strong>\n        </h2>\n        <p className=\"mb-5\">\n          This section shows an example on how to query data from BandChain using{\" \"}\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#get-reference-data\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong>getReferenceData</strong>\n          </a>{\" \"}\n          method. This example query standard price references based on given symbol pairs, min\n          count, and ask count.\n        </p>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        <div className=\"card bg-white p-6 border-2 border-black rounded rounded-2xl w-full mb-10\">\n          <div className=\"card-inner\">\n            <div className=\"mb-5\">\n              <div className=\"input-group mb-3\">\n                <label\n                  htmlFor=\"input-address\"\n                  className=\"block text-sm font-medium text-gray-700 mb-1\"\n                >\n                  Token Pair\n                </label>\n                <input\n                  className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                  type=\"text\"\n                  id=\"input-address\"\n                  placeholder=\"e.g. BTC/USD,ETH/USD\"\n                  value={pairInput}\n                  onChange={(e) => setPairInput(e.target.value)}\n                />\n              </div>\n              <div className=\"input-group mb-3\">\n                <label\n                  htmlFor=\"input-mincount\"\n                  className=\"block text-sm font-medium text-gray-700 mb-1\"\n                >\n                  Ask Count\n                </label>\n                <input\n                  className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                  type=\"text\"\n                  id=\"input-address\"\n                  value={askCount}\n                  onChange={(e) => setaskCount(e.target.value)}\n                />\n              </div>\n              <div className=\"input-group mb-3\">\n                <label\n                  htmlFor=\"input-mincount\"\n                  className=\"block text-sm font-medium text-gray-700 mb-1\"\n                >\n                  Min Count\n                </label>\n                <input\n                  className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                  type=\"text\"\n                  id=\"input-address\"\n                  value={minCount}\n                  onChange={(e) => setminCount(e.target.value)}\n                />\n              </div>\n            </div>\n            <button\n              onClick={getPrice}\n              className=\"button block w-full text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-4 rounded-xl focus:outline-none\"\n            >\n              Request\n            </button>\n          </div>\n        </div>\n        <h3 className=\"text-xl mb-8\">\n          <strong>Results</strong>\n        </h3>\n        <div className=\"flex flex-row gap-6 flex-wrap\">\n          {prices.map((price, ind) => (\n            <CardPrice value={price} key={ind} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FormGetPrice;\n","import FormGetPrice from \"../components/FormGetPrice\";\nexport default function GetPrice() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormGetPrice />\n      </div>\n    </div>\n  );\n}\n","function Loading() {\n    return (\n        <div className=\"flex justify-center items-center mt-4\">\n            <div\n              className=\"\n                loader\n                ease-linear\n                rounded-full\n                border-4 border-t-4 border-gray-200\n                h-12\n                w-12\n              \"\n            ></div>\n          </div>\n    )\n}\n\nexport default Loading;","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nexport default function AccountWithBalance() {\n  const wallet = useSelector((state) => state.wallet);\n  const [fullAddress, setFullAddress] = useState(\"\");\n  const [copied, setcopied] = useState(false);\n  const [accountAddress, setaccountAddress] = useState(\"\");\n  const [accountBalance, setAccountBalance] = useState(0);\n\n  useEffect(() => {\n    if (wallet.address) {\n      const orgStr = wallet.address;\n      const subStr = orgStr.substr(0, 10) + \"...\" + orgStr.substr(orgStr.length - 4, orgStr.length);\n      setaccountAddress(subStr);\n      setFullAddress(orgStr);\n      setAccountBalance(wallet.balance);\n    } else {\n      setaccountAddress(\"\");\n      setFullAddress(\"\");\n    }\n  }, [wallet]);\n\n  return (\n    <div className=\"card-balance card-top border-b-2 border-black p-6 flex items-center justify-between\">\n      <div className=\"account-avatar flex items-center\">\n        <div className=\"avatar w-20 h-20 mr-5\">\n          <img src=\"/images/avatar-4.png\" alt=\"\" />\n        </div>\n        <div className=\"flex items-center\">\n          <h3 className=\"text-lg font-bold\">{accountAddress} </h3>\n          <div className=\"relative\">\n            <CopyToClipboard text={fullAddress} onCopy={() => setcopied(true)}>\n              <button className=\"ml-3 hover:text-orange group relative\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                  />\n                </svg>\n                <div className=\"tooltip-content absolute opacity-0 group-hover:opacity-100 text-xs bg-black rounded-md py-1 px-2 text-white transform -translate-x-1/2 left-1/2\">\n                  {copied ? \"Copied\" : \"Copy\"}\n                </div>\n              </button>\n            </CopyToClipboard>\n          </div>\n        </div>\n      </div>\n      <div className=\"account-balance\">\n        <p className=\"text-right text-gray-500\">Available Balance (BAND)</p>\n        <h3 className=\"text-3xl font-bold text-right\">\n          {accountBalance ? <div>{accountBalance}</div> : \"0\"}\n        </h3>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Message, Coin } from \"@bandprotocol/bandchain.js\";\nimport { getWallet, broadCastTx } from \"../band\";\nimport Loading from \"./Loading\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport AccountWithBalance from \"./AccountWithBalance\";\n\nfunction FormDelegate() {\n  const wallet = useSelector((state) => state.wallet);\n\n  const [validator, setValidator] = useState(\"bandvaloper1zkf9qzs7ayf3uqksxqwve8q693dsdhxk800wvw\");\n  const [isConnected, setisConnected] = useState(false);\n  const [amount, setAmount] = useState(\"\");\n  const [sendResult, setSendResult] = useState(\"\");\n  const [sendResultSuccess, setSendResultSuccess] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n  }, [wallet]);\n\n  const handleInputValidator = (e) => {\n    if (e.target.value) setValidator(e.target.value);\n  };\n\n  const handleInputAmount = (e) => {\n    if (e.target.value) setAmount(e.target.value);\n  };\n\n  const sendBandToken = async () => {\n    if (!validator && !amount) return;\n    setLoading(true);\n    const response = await sendCoin();\n\n    if (response.data === \"\") setSendResult(response.rawLog);\n    if (response.data !== \"\") {\n      setTransactions((transactions) => [...transactions, response.txhash]);\n      setSendResultSuccess(response.txhash);\n    }\n    setLoading(false);\n  };\n\n  const sendCoin = async () => {\n    const { walletAddress } = getWallet(wallet.mnemonic);\n    const { MsgDelegate } = Message;\n\n    const sendAmount = new Coin();\n    sendAmount.setDenom(\"uband\");\n    sendAmount.setAmount((amount * 1e6).toString());\n\n    const msg = new MsgDelegate(walletAddress, validator, sendAmount);\n\n    // Step 5 send the transaction\n    const response = await broadCastTx(msg, wallet.mnemonic);\n\n    return response;\n  };\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Delegate Token</strong>\n        </h2>\n        <p className=\"mb-5\">\n          The message used for this service is\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong> MsgDelegate</strong>\n          </a>\n        </p>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <AccountWithBalance />\n              <div className=\"card-inner p-6 \">\n                <div className=\"mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Delegate to\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"text\"\n                      id=\"input-address\"\n                      value={validator}\n                      onChange={handleInputValidator}\n                    />\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Token Amount (BAND)\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      id=\"input-amount\"\n                      onChange={handleInputAmount}\n                      value={amount}\n                    />\n                  </div>\n                </div>\n                <button\n                  onClick={sendBandToken}\n                  className=\"button block w-full text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-4 rounded-xl focus:outline-none\"\n                >\n                  Delegate\n                </button>\n              </div>\n            </div>\n            <h3 className=\"text-xl font-bold mb-5\">Latest Transactions</h3>\n            {loading ? (\n              <Loading />\n            ) : transactions.length > 0 ? (\n              transactions.map((tx) => {\n                return (\n                  <a\n                    className=\"text-black mb-3 p-3 border-2 border-gray-200 hover:border-blue rounded-xl block\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${tx}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {tx}\n                  </a>\n                );\n              })\n            ) : (\n              <div className=\"text-md\">You don't have any transactions</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FormDelegate;\n","import FormDelegate from \"../components/FormDelegate\";\nexport default function Delegate() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormDelegate />\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport { Message, Coin } from \"@bandprotocol/bandchain.js\";\nimport Loading from \"./Loading\";\nimport { broadCastTx } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport AccountWithBalance from \"./AccountWithBalance\";\n\nfunction FormSendToken() {\n  const wallet = useSelector((state) => state.wallet);\n  const [isConnected, setisConnected] = useState(false);\n  const [tokenAmount, setTokenAmount] = useState(0);\n  const [receiverAddress, setReceiverAddress] = useState(\"\");\n  const [sendResult, setSendResult] = useState(\"\");\n  const [sendResultSuccess, setSendResultSuccess] = useState(\"\");\n  const [loading, setLoading] = useState(Boolean(0));\n\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n  }, [wallet]);\n\n  const handleInputTokenAmount = (e) => {\n    setTokenAmount(e.target.value);\n  };\n  const handleInputAddress = (e) => {\n    setReceiverAddress(e.target.value);\n  };\n  const sendBandToken = async () => {\n    if (!receiverAddress && !tokenAmount) return;\n    setLoading(true);\n    const response = await sendCoin();\n    if (response.data === \"\") setSendResult(response.rawLog);\n    if (response.data !== \"\") {\n      setTransactions((transactions) => [...transactions, response.txhash]);\n      setSendResultSuccess(response.txhash);\n    }\n    setLoading(false);\n  };\n\n  const sendCoin = async () => {\n    const { MsgSend } = Message;\n\n    const sendAmount = new Coin();\n    sendAmount.setDenom(\"uband\");\n    sendAmount.setAmount((tokenAmount * 1e6).toString());\n\n    const msg = new MsgSend(wallet.address, receiverAddress, [sendAmount]);\n    const response = await broadCastTx(msg, wallet.mnemonic);\n\n    return response;\n  };\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Send BAND Token</strong>\n        </h2>\n        <p className=\"mb-5\">\n          The message used for this service is\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong> MsgSend</strong>\n          </a>\n        </p>\n      </div>\n\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <AccountWithBalance />\n              <div className=\"card-inner p-6 \">\n                <div className=\"mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Recipient Address\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"text\"\n                      id=\"input-address\"\n                      value={receiverAddress}\n                      onChange={handleInputAddress}\n                    />\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Token Amount (BAND)\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      id=\"input-amount\"\n                      value={tokenAmount}\n                      onChange={handleInputTokenAmount}\n                    />\n                  </div>\n                </div>\n                <button\n                  onClick={sendBandToken}\n                  className=\"button block w-full text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-4 rounded-xl focus:outline-none\"\n                >\n                  Send\n                </button>\n              </div>\n            </div>\n            <h3 className=\"text-xl font-bold mb-5\">Latest Transactions</h3>\n            {loading ? (\n              <Loading />\n            ) : transactions.length > 0 ? (\n              transactions.map((tx) => {\n                return (\n                  <a\n                    className=\"text-black mb-3 p-3 border-2 border-gray-200 hover:border-blue rounded-xl block\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${tx}`}\n                  >\n                    {tx}\n                  </a>\n                );\n              })\n            ) : (\n              <div className=\"text-md\">You don't have any transactions</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FormSendToken;\n","import FormSendToken from \"../components/FormSendToken\";\nexport default function SendToken() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormSendToken />\n      </div>\n    </div>\n  );\n}\n","import { broadCastTx } from \"../band\";\nimport { Obi, Message, Coin } from \"@bandprotocol/bandchain.js\";\nimport { useState, useEffect } from \"react\";\nimport Loading from \"./Loading\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport AccountWithBalance from \"./AccountWithBalance\";\n\nfunction FormSendRequest() {\n  const wallet = useSelector((state) => state.wallet);\n  const [isConnected, setisConnected] = useState(false);\n\n  const [sendResultError, setSendResultError] = useState(\"\");\n  // const [sendResult, setSendResult] = useState([]);\n  const [symbols, setSymbols] = useState(\"\");\n  const [multiplierInput, setMultiplierInput] = useState(\"\");\n  const [feeInput, setFeeInput] = useState(\"\");\n  const [prepareGasInput, setPrepareGasInput] = useState(\"\");\n  const [executeGasInput, setExecuteGasInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [formStep, setFormStep] = useState(0);\n\n  const [transactions, setTransactions] = useState(\"\");\n\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n  }, [wallet]);\n\n  const sendRequest = async () => {\n    setFormStep(formStep + 1);\n    if (!symbols && !multiplierInput && !feeInput && !prepareGasInput && !executeGasInput) return;\n    setLoading(Boolean(1));\n    const requestID = await makeRequest();\n\n    if (requestID.data === \"\") {\n      setSendResultError(requestID.rawLog);\n    }\n\n    setTransactions(requestID.txhash);\n    setLoading(false);\n  };\n\n  const makeRequest = async () => {\n    const obi = new Obi(\"{symbols:[string],multiplier:u64}/{rates:[u64]}\");\n    const calldata = obi.encodeInput({\n      symbols: symbols.toUpperCase().replace(/\\s/g, \"\").split(\",\"),\n      multiplier: multiplierInput,\n    });\n\n    const oracleScriptId = 37;\n    const askCount = 2;\n    const minCount = 1;\n    const clientId = \"from_bandchain.js\";\n\n    let feeLimit = new Coin();\n    feeLimit.setDenom(\"uband\");\n    feeLimit.setAmount(feeInput);\n\n    // Step 2.2: Create an oracle request message\n    const requestMessage = new Message.MsgRequestData(\n      oracleScriptId,\n      calldata,\n      askCount,\n      minCount,\n      clientId,\n      wallet.address, // sender\n      [feeLimit],\n      prepareGasInput,\n      executeGasInput\n    );\n\n    const tx = await broadCastTx(requestMessage, wallet.mnemonic);\n    return tx;\n  };\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Create a new request</strong>\n        </h2>\n        <p className=\"mb-5\">\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong>MsgRequestData</strong>\n          </a>{\" \"}\n          is a message for sending a data oracle request.\n        </p>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <AccountWithBalance />\n              {formStep === 0 ? (\n                <>\n                  <div className=\"card-inner p-6\">\n                    <div className=\"mb-5 form-container\">\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Symbols (Separate with comma)\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-address\"\n                          value={symbols}\n                          onChange={(e) => setSymbols(e.target.value)}\n                          placeholder=\"e.g BTC,ETH\"\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Multiplier (u64)\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          min=\"0\"\n                          type=\"number\"\n                          id=\"input-multiplier\"\n                          value={multiplierInput}\n                          onChange={(e) => setMultiplierInput(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Fee Limit (uband)\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          min=\"0\"\n                          type=\"number\"\n                          id=\"input-fee\"\n                          value={feeInput}\n                          onChange={(e) => setFeeInput(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Prepare Gas\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          min=\"0\"\n                          type=\"number\"\n                          id=\"input-gas1\"\n                          value={prepareGasInput}\n                          onChange={(e) => setPrepareGasInput(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Execute Gas\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          min=\"0\"\n                          type=\"number\"\n                          id=\"input-gas2\"\n                          value={executeGasInput}\n                          onChange={(e) => setExecuteGasInput(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                    <button\n                      onClick={sendRequest}\n                      className=\"button block w-full text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-4 rounded-xl focus:outline-none\"\n                    >\n                      Send a Request\n                    </button>\n                  </div>\n                </>\n              ) : loading ? (\n                <div className=\"form-wrapper flex items-center justify-center\">\n                  <div className=\"form-container\">\n                    <Loading />\n                  </div>\n                </div>\n              ) : transactions !== \"\" ? (\n                sendResultError ? (\n                  <div className=\"form-wrapper flex items-center justify-center\">\n                    <div className=\"form-container p-6\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-20 w-20 text-orange mx-auto mb-5\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                        />\n                      </svg>\n                      <div className=\"text-orange text-center mb-5\">{sendResultError}</div>\n                      <button\n                        onClick={(e) => setFormStep(formStep - 1)}\n                        className=\"button block mx-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Back\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"p-6 form-wrapper flex items-center justify-center\">\n                    <div className=\"form-container\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-20 w-20 text-green-400 mx-auto mb-5\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                        />\n                      </svg>\n                      <h4 className=\"text-md text-center\">\n                        <strong>Transaction Hash</strong>\n                      </h4>\n                      <a\n                        className=\"overflow-ellipsis overflow-hidden text-black mb-3 block hover:text-blue text-center\"\n                        href={`https://laozi-testnet4.cosmoscan.io/tx/${transactions}`}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        {transactions}\n                      </a>\n                      <button\n                        onClick={(e) => setFormStep(formStep - 1)}\n                        className=\"button block mx-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Back\n                      </button>\n                    </div>\n                  </div>\n                )\n              ) : (\n                <>\n                  <div className=\"text-md\">You don't have any transactions</div>\n                  <button onClick={(e) => setFormStep(formStep - 1)}>Back</button>\n                </>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FormSendRequest;\n","import FormSendRequest from \"../components/FormSendRequest\";\nexport default function SendRequest() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormSendRequest />\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { sendIBC } from \"../band\";\nimport Loading from \"./Loading\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport AccountWithBalance from \"./AccountWithBalance\";\n\nfunction FormSendToken() {\n  const wallet = useSelector((state) => state.wallet);\n  const [isConnected, setisConnected] = useState(false);\n\n  const [tokenAmount, setTokenAmount] = useState(0);\n  const [receiverAddress, setReceiverAddress] = useState(\n    \"band1jrhuqrymzt4mnvgw8cvy3s9zhx3jj0dq30qpte\"\n  );\n  const [sendResult, setSendResult] = useState(\"\");\n  const [sendResultSuccess, setSendResultSuccess] = useState(\"\");\n  const [loading, setLoading] = useState(Boolean(0));\n  const ibcchannel = \"CONSUMER\";\n\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n  }, [wallet]);\n\n  const handleInputTokenAmount = (e) => {\n    setTokenAmount(e.target.value);\n  };\n  const handleInputAddress = (e) => {\n    setReceiverAddress(e.target.value);\n  };\n  const sendBandToken = async () => {\n    if (!receiverAddress && !tokenAmount) return;\n    setLoading(Boolean(1));\n    const response = await sendIBC(receiverAddress, tokenAmount, wallet);\n    console.log(response);\n    if (response.height === 0) {\n      setSendResult(response.rawLog);\n    }\n    if (response.data !== \"\") {\n      setSendResultSuccess(response.txhash);\n    }\n    setTransactions((transactions) => [...transactions, response.txhash]);\n    setLoading(Boolean(0));\n  };\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Send BAND token via IBC</strong>\n        </h2>\n        <p className=\"mb-5\">\n          The message used for this service is\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong> MsgTransfer</strong>\n          </a>\n        </p>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <AccountWithBalance />\n              <div className=\"card-inner p-6\">\n                <div className=\"mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-channel\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Channel\n                    </label>\n                    <input\n                      className=\"text-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"text\"\n                      id=\"input-channel\"\n                      value={ibcchannel}\n                      disabled\n                    />\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Recipient Address\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"text\"\n                      id=\"input-address\"\n                      value={receiverAddress}\n                      onChange={handleInputAddress}\n                    />\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Token Amount (BAND)\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"number\"\n                      id=\"input-amount\"\n                      value={tokenAmount}\n                      onChange={handleInputTokenAmount}\n                    />\n                  </div>\n                </div>\n                <button\n                  onClick={sendBandToken}\n                  className=\"button block w-full text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-4 rounded-xl focus:outline-none\"\n                >\n                  Send\n                </button>\n              </div>\n            </div>\n            <h3 className=\"text-xl font-bold mb-5\">Latest Transactions</h3>\n            {loading ? (\n              <Loading />\n            ) : transactions.length > 0 ? (\n              transactions.map((tx, ind) => {\n                return (\n                  <a\n                    className=\"text-black mb-3 p-3 border-2 border-gray-200 hover:border-blue rounded-xl block\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${tx}`}\n                    key={ind}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {tx}\n                  </a>\n                );\n              })\n            ) : (\n              <div className=\"text-md\">You don't have any transactions</div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default FormSendToken;\n","import FormIBCTransfer from \"../components/FormIBCTransfer\";\nexport default function IBCTransfer() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormIBCTransfer />\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { createDataSource } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport UnableService from \"./UnableService\";\nimport AccountWithBalance from \"./AccountWithBalance\";\nimport Editor from \"react-simple-code-editor\";\nimport { highlight, languages } from \"prismjs/components/prism-core\";\nimport \"prismjs/components/prism-clike\";\nimport \"prismjs/components/prism-python\";\n// import \"prismjs/themes/prism.css\";\nimport \"prismjs/themes/prism-tomorrow.css\";\n\nexport default function FormCreateDataSource() {\n  const wallet = useSelector((state) => state.wallet);\n\n  // State\n  const [isConnected, setisConnected] = useState(false);\n  const [step, setStep] = useState(1);\n  const [codeType, setCodeType] = useState(\"upload\");\n\n  // Form Data\n  const [dsname, setdsname] = useState(\"\");\n  const [dsdesc, setdsdesc] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [treasury, setTreasury] = useState(\"\");\n  const [code, setCode] = useState([]);\n  const [filename, setfilename] = useState(\"\");\n  const [codeEditor, setCodeEditor] = useState(`# Insert your code here`);\n\n  // Handling Functions\n  const nextStep = (e) => {\n    e.preventDefault();\n    setStep(step + 1);\n  };\n\n  const prevStep = () => {\n    setStep(step - 1);\n  };\n\n  const isFormFilled = () => {\n    if (dsname !== \"\" && owner !== \"\" && treasury !== \"\") {\n      return false;\n    }\n    return true;\n  };\n\n  const removeFile = () => {\n    setCode([]);\n    setfilename(\"\");\n  };\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setfilename(acceptedFiles[0].name);\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log(\"file reading was aborted\");\n      reader.onerror = () => console.log(\"file reading has failed\");\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n        console.log(binaryStr);\n        setCode(binaryStr);\n      };\n      reader.readAsArrayBuffer(file);\n    });\n  }, []);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: \"text/x-python-script\",\n  });\n\n  const renderSwitchCode = () => {\n    switch (codeType) {\n      case \"editor\":\n        return (\n          <Editor\n            value={codeEditor}\n            onValueChange={(rawcode) => setCodeEditor(rawcode)}\n            highlight={(rawcode) => highlight(rawcode, languages.py, \"python\")}\n            padding={15}\n            style={{\n              fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n              fontSize: 12,\n              background: \"#282A2B\",\n              color: \"white\",\n              borderRadius: \"10px\",\n              minHeight: \"300px\",\n            }}\n          />\n        );\n      default:\n        return (\n          <div className=\"input-group mb-3\">\n            {code.byteLength > 0 ? (\n              <div\n                onClick={removeFile}\n                className=\"group cursor-pointer border-l-2 border-t-2 border-r-4 border-b-4 hover:border-r-2 hover:border-b-2  hover:border-orange hover:bg-red-100 border-black bg-yellow-50 p-3 text-black rounded-xl relative w-full hover:transform hover:translate-x-px hover:translate-y-px\"\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <img\n                      src=\"/images/python-file.png\"\n                      alt=\"\"\n                      className=\"w-100 block h-auto mr-4\"\n                      style={{ maxWidth: \"50px\" }}\n                    />\n                    <p className=\"font-medium\">{filename}</p>\n                  </div>\n                  <div className=\"invisible group-hover:visible btn-deletefile w-8 h-8 bg-orange rounded-full text-white flex items-center justify-center\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      className=\"h-5 w-5\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"upload-outer\" {...getRootProps()}>\n                <input {...getInputProps()} />\n                <div className=\"h-40 border-2 bg-gray-50 border-gray-300 rounded-xl text-center flex items-center justify-center\">\n                  <div>\n                    Drag 'n' drop a file here,\n                    <br /> or <br />\n                    <span className=\"mt-2 cursor-pointer inline-block button px-4 py-1 border-2 border-black rounded-xl bg-yellow-300 hover:bg-yellow-400 text-sm\">\n                      Browse\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        );\n    }\n  };\n\n  const submitCode = async () => {\n    alert(\"MsgCreateDataSource not found\");\n    // const response = await createDataSource(\n    //   dsname,\n    //   codeType === \"upload\" ? code : window.btoa(codeEditor),\n    //   owner,\n    //   treasury,\n    //   wallet,\n    //   dsdesc\n    // );\n    // console.log(response);\n  };\n\n  // Effects\n  useEffect(() => {\n    if (wallet.address) {\n      setisConnected(true);\n    } else {\n      setisConnected(false);\n    }\n  }, [wallet]);\n\n  return (\n    <div className=\"flex flex-row flex-wrap\">\n      <div className=\"w-full md:w-4/12 mb-8 md:mb-0\">\n        <h2 className=\"mb-5 text-3xl \">\n          <strong>Add a new data source</strong>\n        </h2>\n        <p className=\"mb-5\">\n          <a\n            href=\"https://docs.bandchain.org/client-library/bandchain.js/get-started.html#send-band-token\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <strong>MsgCreateDataSource</strong>\n          </a>{\" \"}\n          is a message for creating a new data source.\n        </p>\n        <div className=\"process-step\">\n          <ul>\n            <li className=\"mb-5\">\n              <strong>Step 1:</strong> Provide the data source information such as data source name,\n              owner, treasury address, and description.\n            </li>\n            <li className=\"mb-5\">\n              <strong>Step 2:</strong> Upload the data source file or try using code editor in .py\n              formatted.\n            </li>\n            <li className=\"mb-5\">\n              <strong>Step 3:</strong> Deploy your data source and Finish.\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"w-full md:w-8/12 md:pl-10\">\n        {!isConnected ? (\n          <UnableService />\n        ) : (\n          <div>\n            <div className=\"card bg-white border-2 border-black rounded rounded-2xl w-full mb-10\">\n              <div className=\"card-inner p-6\">\n                {step === 1 ? (\n                  <div className=\"form-container mb-5 step step-1\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 1:</strong> Enter the data source information below.\n                      </h3>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-address\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Data Source Name <span className=\"text-orange\">*</span>\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-address\"\n                          onChange={(e) => setdsname(e.target.value)}\n                          value={dsname}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-owner\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Owner Address <span className=\"text-orange\">*</span>\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-owner\"\n                          value={owner}\n                          onChange={(e) => setOwner(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-treasury\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Treasury Address <span className=\"text-orange\">*</span>\n                        </label>\n                        <input\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-treasury\"\n                          value={treasury}\n                          onChange={(e) => setTreasury(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"input-group mb-3\">\n                        <label\n                          htmlFor=\"input-desc\"\n                          className=\"block text-sm font-medium text-gray-700 mb-1\"\n                        >\n                          Description\n                        </label>\n                        <textarea\n                          className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                          type=\"text\"\n                          id=\"input-desc\"\n                          onChange={(e) => setdsdesc(e.target.value)}\n                          value={dsdesc}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-buttons\">\n                      <button\n                        onClick={nextStep}\n                        disabled={isFormFilled()}\n                        className=\"button block ml-auto text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 \"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 2 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 2:</strong> Choose how to add the data source code\n                      </h3>\n\n                      <div className=\"flex gap-6 radio-group choice-code\">\n                        <div className=\"flex-grow flex-shrink w-1/2 input-group mb-3\">\n                          <input\n                            type=\"radio\"\n                            name=\"codeType\"\n                            id=\"input-codeType-upload\"\n                            value=\"upload\"\n                            checked={codeType === \"upload\"}\n                            onChange={(e) => setCodeType(e.target.value)}\n                          />\n                          <label\n                            htmlFor=\"input-codeType-upload\"\n                            className=\"hover:bg-indigo-50 w-full label-btn button p-4 border-2 border-gray-300 block rounded-xl text-center cursor-pointer\"\n                          >\n                            <img\n                              src=\"/images/uploading.png\"\n                              alt=\"\"\n                              className=\"w-full mx-auto block mb-2\"\n                              style={{\n                                maxWidth: \"103px\",\n                              }}\n                            />\n                            Upload from my computer\n                          </label>\n                        </div>\n                        <div className=\"flex-grow flex-shrink w-1/2 input-group mb-3\">\n                          <input\n                            type=\"radio\"\n                            name=\"codeType\"\n                            id=\"input-codeType-editor\"\n                            value=\"editor\"\n                            checked={codeType === \"editor\"}\n                            onChange={(e) => setCodeType(e.target.value)}\n                          />\n                          <label\n                            htmlFor=\"input-codeType-editor\"\n                            className=\"hover:bg-indigo-50  w-full label-btn button p-4 border-2 border-gray-300 block rounded-xl text-center cursor-pointer\"\n                          >\n                            <img\n                              src=\"/images/code.png\"\n                              alt=\"\"\n                              className=\"w-full mx-auto block mb-2\"\n                              style={{\n                                maxWidth: \"103px\",\n                              }}\n                            />\n                            Using Code Editor\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        onClick={nextStep}\n                        className=\"button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 3 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 2.1:</strong> Add the data source code\n                      </h3>\n                      {renderSwitchCode()}\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        disabled={code.byteLength > 0 ? false : codeEditor === \"\"}\n                        onClick={nextStep}\n                        className=\"disabled:opacity-50 button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Next\n                      </button>\n                    </div>\n                  </div>\n                ) : step === 4 ? (\n                  <div className=\"form-container mb-5 step step-2\">\n                    <div className=\"form-wrapper mb-6\">\n                      <h3 className=\"mb-4\">\n                        <strong>Step 3:</strong> Review\n                      </h3>\n                    </div>\n                    <div className=\"form-buttons flex justify-between\">\n                      <button\n                        onClick={prevStep}\n                        className=\"button block  text-md text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Previous\n                      </button>\n                      <button\n                        onClick={submitCode()}\n                        className=\"button block text-md text-white bg-black hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none\"\n                      >\n                        Confirm and Deploy\n                      </button>\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import FormCreateDataSource from \"../components/FormCreateDataSource\";\n\nexport default function DataSource() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormCreateDataSource />\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nexport default function OracleScript() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <div className=\"services mt-8 max-w-screen-md mx-auto\">\n          <ul className=\"services--list flex gap-6 flex-wrap items-stretch\">\n            <li className=\"services--list-item flex-grow w-1/5\">\n              <Link\n                to=\"create\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/oracle.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-xl font-bold\">Create Oracle Script</h3>\n              </Link>\n            </li>\n            <li className=\"services--list-item flex-grow w-1/5\">\n              <Link\n                to=\"edit\"\n                className=\"h-full flex items-center flex-col justify-center border-4 border-solid border-gray-200 block p-5 hover:border-blue rounded-2xl text-center\"\n              >\n                <img\n                  src=\"/images/osedit.png\"\n                  className=\"block w-full h-auto\"\n                  style={{ maxWidth: \"200px\" }}\n                  alt=\"\"\n                />\n                <h3 className=\"text-xl font-bold\">Edit Oracle Script</h3>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nexport default function AccountWithBalanceCenter() {\n  const wallet = useSelector((state) => state.wallet);\n  const [fullAddress, setFullAddress] = useState(\"\");\n  const [copied, setcopied] = useState(false);\n  const [accountAddress, setaccountAddress] = useState(\"\");\n  const [accountBalance, setAccountBalance] = useState(0);\n\n  useEffect(() => {\n    if (wallet.address) {\n      const orgStr = wallet.address;\n      const subStr = orgStr.substr(0, 20) + \"...\" + orgStr.substr(orgStr.length - 4, orgStr.length);\n      setaccountAddress(subStr);\n      setFullAddress(orgStr);\n      setAccountBalance(wallet.balance);\n    } else {\n      setaccountAddress(\"\");\n      setFullAddress(\"\");\n    }\n  }, [wallet]);\n\n  return (\n    <div className=\"\">\n      <div className=\"card-balance card-top  p-6 w-full rounded-xl\">\n        <div className=\"account-avatar\">\n          <div className=\"avatar w-full\">\n            <img\n              src=\"/images/avatar-4.png\"\n              alt=\"\"\n              style={{ maxWidth: \"100px\" }}\n              className=\"block mx-auto mb-6\"\n            />\n          </div>\n          <div className=\"w-full block\">\n            <div className=\"flex justify-center\">\n              <h3 className=\"text-sm font-bold\">{accountAddress} </h3>\n              <div className=\"relative\">\n                <CopyToClipboard text={fullAddress} onCopy={() => setcopied(true)}>\n                  <button className=\"ml-3 hover:text-orange group relative inline-block align-baseline\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      style={{ width: \"16px\", height: \"16px\" }}\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"2\"\n                        d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                      />\n                    </svg>\n                    <div className=\"tooltip-content absolute opacity-0 group-hover:opacity-100 text-xs bg-black rounded-md py-1 px-2 text-white transform -translate-x-1/2 left-1/2\">\n                      {copied ? \"Copied\" : \"Copy\"}\n                    </div>\n                  </button>\n                </CopyToClipboard>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"account-balance mt-3 border-b-4 border-2 border-black p-3 rounded-xl bg-yellow-50 flex justify-between items-center\">\n          <div>\n            <p className=\"text-sm mb-1\">Balance:</p>\n            <h3 className=\"text-md font-bold\">{accountBalance ? accountBalance : \"0\"} BAND</h3>\n          </div>\n          <button className=\"button bg-white hover:bg-orange flex items-center justify-center w-10 h-10 rounded-full border-2 border-black\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-8 w-8\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nexport default function SidebarAccountMenu() {\n  const menus = [\n    {\n      title: \"Overview\",\n      path: \"/myaccount/\",\n      icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z\" />\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z\" />\n    </svg>`,\n    },\n    {\n      title: \"Validators\",\n      path: \"/myaccount/validators\",\n      icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n    </svg>`,\n    },\n    {\n      title: \"Delegations\",\n      path: \"/myaccount/delegations\",\n      icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\" />\n    </svg>`,\n    },\n    {\n      title: \"Transactions\",\n      path: \"/myaccount/transactions\",\n      icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n    </svg>`,\n    },\n    {\n      title: \"Converter\",\n      path: \"/myaccount/converter\",\n      icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" />\n    </svg>`,\n    },\n  ];\n  return (\n    <div className=\"sidebar-menu--vertical py-6 border-t-2 border-gray-200\">\n      <h4 className=\"text-gray-500 font-medium text-xs mb-3 px-6 uppercase \">Menu</h4>\n      <ul>\n        {menus.map((menu, ind) => {\n          return (\n            <li className=\"menu-item group\" key={ind}>\n              <Link\n                to={menu.path}\n                className=\"px-6 py-3 flex items-center gap-3 group-hover:bg-gray-100 group-hover:text-blue\"\n              >\n                <div className=\"menu-icon\" dangerouslySetInnerHTML={{ __html: menu.icon }}></div>\n                <span className=\"menu-text font-medium\">{menu.title}</span>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import AccountWithBalanceCenter from \"./AccountWithBalanceCenter\";\nimport SidebarAccountMenu from \"./SidebarAccountMenu\";\n\nexport default function AccountSidebar() {\n  return (\n    <div className=\"card bg-white rounded-2xl mt-5 lg:w-1/4 w-full\">\n      <AccountWithBalanceCenter />\n      <SidebarAccountMenu />\n    </div>\n  );\n}\n","export function SingleValidator({ validator, totalBonded }) {\n  return (\n    <div className=\"px-2  w-4/12 \">\n      <div className=\"card border-2 border-black rounded-xl p-5 my-2\">\n        <h3 className=\"mb-3\">\n          <strong>{validator.moniker}</strong>\n        </h3>\n        <p className=\"text-gray-500 text-xs mb-1\">Voting Power</p>\n        <h4 className=\"text-xl\">{((validator.tokens / totalBonded) * 100).toFixed(2)}%</h4>\n      </div>\n    </div>\n  );\n}\n","import { gql, useLazyQuery, useQuery } from \"@apollo/client\";\nimport { SingleValidator } from \"../components/SingleValidator\";\n\nexport default function Validators() {\n  const GET_VALIDATORS = gql`\n    query GetValidators {\n      validators {\n        moniker\n        operator_address\n        tokens\n        commission_rate\n        commission_max_change\n        commission_max_rate\n      }\n      validators_aggregate {\n        aggregate {\n          sum {\n            tokens\n          }\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_VALIDATORS);\n\n  return (\n    <div className=\"flex flex-wrap -mx-2\">\n      {loading\n        ? \"Loading...\"\n        : error\n        ? `Error! ${error.message}`\n        : data\n        ? data.validators.map((validator, ind) => {\n            return (\n              <SingleValidator\n                validator={validator}\n                key={ind}\n                totalBonded={\n                  data.validators_aggregate ? data.validators_aggregate.aggregate.sum.tokens : 0\n                }\n              />\n            );\n          })\n        : \"0 Validator\"}\n    </div>\n  );\n}\n","import { withdrawReward } from \"../band\";\nimport { useSelector } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\nexport function SingleDelegator({ delegator }) {\n  const wallet = useSelector((state) => state.wallet);\n  const validator = delegator.operator_address;\n  const rewards = delegator.reward / 1e6;\n  const claim = async (e) => {\n    e.preventDefault();\n    const response = await withdrawReward(wallet.address, validator, wallet);\n\n    //TODO: there's no handle fn to the response in UI\n    console.log(response);\n  };\n\n  return (\n    <div className=\"px-2 w-full lg:w-4/12 mb-5 block\">\n      <div className=\"card border-2 border-black rounded-xl p-5 h-full\">\n        <h3 className=\"mb-3\">\n          <Link to={validator} className=\"hover:text-blue\">\n            <strong>{delegator.moniker}</strong>\n          </Link>\n        </h3>\n        <div className=\"flex -mx-3 flex-wrap \">\n          <div className=\"px-3 w-1/2\">\n            <p className=\"text-xs text-gray-500 mb-1\">Staked (BAND)</p>\n            <p className=\"text-md text-black font-bold\">{(delegator.amount / 1e6).toFixed(4)}</p>\n          </div>\n          <div className=\"border-l border-gray-200  px-3 :w-1/2\">\n            <p className=\"text-xs text-gray-500 mb-1\">Rewards (BAND)</p>\n            <p className=\"text-md text-black font-bold\">{rewards.toFixed(4)}</p>\n          </div>\n        </div>\n        <button\n          onClick={(e) => claim(e)}\n          disabled={rewards.toFixed(4) <= 0.0001}\n          className=\"button disabled:opacity-50 disabled:border-b-2 px-4 py-2 w-full bg-yellow-400 border-2 shadow-insetBlack border-black rounded-xl mt-4 hover:border-b-2 hover:bg-yellow-500 hover:shadow-none disabled:bg-gray-300 disabled:shadow-none\"\n        >\n          Claim\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport { Message, Coin } from \"@bandprotocol/bandchain.js\";\nimport { undelegateCoin, broadCastTx } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport { ModalDelegateContext } from \"../app-context\";\n\nexport default function ModalDelegate({ title, operator }) {\n  const { isShowModal, setIsShowModal } = useContext(ModalDelegateContext);\n  const wallet = useSelector((state) => state.wallet);\n  const [loading, setloading] = useState(false);\n  const [txhash, settxhash] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const closeModalHandler = () => {\n    setloading(false);\n    setIsShowModal(false);\n  };\n\n  const confirm = async () => {\n    setloading(true);\n\n    const response =\n      title === \"delegate\"\n        ? await sendCoin(\n            operator,\n            amount,\n            wallet.privateKey,\n            wallet.pubkey,\n            wallet.address,\n            \"delegate\"\n          )\n        : await undelegateCoin(operator, amount, wallet);\n    if (response) {\n      settxhash(response.txhash);\n    }\n  };\n\n  const sendCoin = async () => {\n    const { MsgDelegate } = Message;\n\n    const sendAmount = new Coin();\n    sendAmount.setDenom(\"uband\");\n    sendAmount.setAmount((amount * 1e6).toString());\n\n    const msg = new MsgDelegate(wallet.address, operator, sendAmount);\n\n    // Step 5 send the transaction\n    const response = await broadCastTx(msg, wallet.mnemonic);\n\n    return response;\n  };\n\n  return (\n    <div\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      className={\n        isShowModal\n          ? \"fixed z-10 inset-0 overflow-y-auto block\"\n          : \" fixed z-10 inset-0 overflow-y-auto hidden\"\n      }\n    >\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n          &#8203;\n        </span>\n\n        <div className=\"inline-block align-bottom bg-white rounded-3xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-5\">\n            <div className=\"flex justify-between align-items-center mt-3 mb-5 text-center sm:mt-0 sm:text-left\">\n              <h2 className=\"mb-0 text-xl capitalize\">\n                <strong>{title}</strong>\n              </h2>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6 text-orange cursor-pointer hover:text-orange-dark\"\n                onClick={(e) => closeModalHandler(e)}\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </div>\n            {loading ? (\n              txhash ? (\n                <div>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-20 w-20 text-green-400 mx-auto mb-5\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                  </svg>\n                  <h4 className=\"text-md text-center\">\n                    <strong>Transaction Hash</strong>\n                  </h4>\n                  <a\n                    className=\"overflow-ellipsis overflow-hidden text-black mb-3 block hover:text-blue\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${txhash}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {txhash}\n                  </a>\n                </div>\n              ) : (\n                <div>\n                  <h2>Sending...</h2>\n                </div>\n              )\n            ) : (\n              <div className=\"modal-body\">\n                <div className=\"form-delegate-wrapper mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Delegate {title === \"delegate\" ? `To` : `From`}\n                    </label>\n                    <p>{operator}</p>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Amount\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"number\"\n                      id=\"input-amount\"\n                      value={amount}\n                      onChange={(e) => setAmount(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <button\n                  onClick={confirm}\n                  className=\"capitalize button block w-full bg-purple-600 text-white py-2 px-4 rounded-xl hover:bg-purple-700 focus:outline-none focus:ring-purple-600 focus:ring-opacity-50 transition duration-500 ease-in-out\"\n                >\n                  {title}\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport { reDelegateCoin } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport { ModalDelegateContext } from \"../app-context\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nexport default function ModalRedelegate({ title, operator }) {\n  const { isShowModalRedelegate, setIsShowModalRedelegate } = useContext(ModalDelegateContext);\n  const wallet = useSelector((state) => state.wallet);\n  const [modalloading, setmodalloading] = useState(false);\n  const [txhash, settxhash] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [destvalidator, setdestvalidator] = useState(\"\");\n\n  const closeModalHandler = () => {\n    setmodalloading(false);\n    setIsShowModalRedelegate(false);\n  };\n\n  const confirm = async () => {\n    setmodalloading(true);\n    console.log(operator);\n    console.log(destvalidator);\n\n    const response = await reDelegateCoin(operator, destvalidator, amount, wallet);\n    if (response) {\n      settxhash(response.txhash);\n    }\n  };\n\n  const GET_VALIDATORS = gql`\n    query GetValidators {\n      validators {\n        moniker\n        operator_address\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_VALIDATORS);\n\n  return (\n    <div\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      className={\n        isShowModalRedelegate\n          ? \"fixed z-10 inset-0 overflow-y-auto block\"\n          : \" fixed z-10 inset-0 overflow-y-auto hidden\"\n      }\n    >\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n          &#8203;\n        </span>\n\n        <div className=\"inline-block align-bottom bg-white rounded-3xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-5\">\n            <div className=\"flex justify-between align-items-center mt-3 mb-5 text-center sm:mt-0 sm:text-left\">\n              <h2 className=\"mb-0 text-xl capitalize\">\n                <strong>Redelegate</strong>\n              </h2>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6 text-orange cursor-pointer hover:text-orange-dark\"\n                onClick={(e) => closeModalHandler(e)}\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </div>\n            {modalloading ? (\n              txhash ? (\n                <div>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-20 w-20 text-green-400 mx-auto mb-5\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                  </svg>\n                  <h4 className=\"text-md text-center\">\n                    <strong>Transaction Hash</strong>\n                  </h4>\n                  <a\n                    className=\"overflow-ellipsis overflow-hidden text-black mb-3 block hover:text-blue\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${txhash}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {txhash}\n                  </a>\n                </div>\n              ) : (\n                <div>\n                  <h2>Sending...</h2>\n                </div>\n              )\n            ) : (\n              <div className=\"modal-body\">\n                <div className=\"form-delegate-wrapper mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Redelegate From\n                    </label>\n                    <p>{operator}</p>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-validator\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Redelegate To\n                    </label>\n                    <select\n                      className=\"border-2 border-gray-200 rounded-xl w-full px-3 py-2\"\n                      onChange={(e) => setdestvalidator(e.target.value)}\n                    >\n                      {data ? (\n                        data.validators.map((validator) => (\n                          <option value={validator.operator_address}>{validator.moniker}</option>\n                        ))\n                      ) : (\n                        <option value=\"\">Select Validator</option>\n                      )}\n                    </select>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Amount\n                    </label>\n                    <input\n                      className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-xl\"\n                      type=\"number\"\n                      id=\"input-amount\"\n                      value={amount}\n                      onChange={(e) => setAmount(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <button\n                  onClick={confirm}\n                  className=\"capitalize button block w-full bg-purple-600 text-white py-2 px-4 rounded-xl hover:bg-purple-700 focus:outline-none focus:ring-purple-600 focus:ring-opacity-50 transition duration-500 ease-in-out\"\n                >\n                  Redelegate\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useContext } from \"react\";\nimport { reinvestRewards } from \"../band\";\nimport { useSelector } from \"react-redux\";\nimport { ModalDelegateContext } from \"../app-context\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nexport default function ModalReinvest({ operator, rewardAmount }) {\n  const { isShowModalReinvest, setIsShowModalReInvest } = useContext(ModalDelegateContext);\n  const wallet = useSelector((state) => state.wallet);\n  const [modalloading, setmodalloading] = useState(false);\n  const [txhash, settxhash] = useState(\"\");\n\n  const closeModalHandler = () => {\n    setmodalloading(false);\n    setIsShowModalReInvest(false);\n  };\n\n  const confirm = async () => {\n    setmodalloading(true);\n\n    const response = await reinvestRewards(operator, wallet);\n    if (response) {\n      settxhash(response.txhash);\n    }\n  };\n\n  return (\n    <div\n      aria-labelledby=\"modal-title\"\n      role=\"dialog\"\n      aria-modal=\"true\"\n      className={\n        isShowModalReinvest\n          ? \"fixed z-10 inset-0 overflow-y-auto block\"\n          : \" fixed z-10 inset-0 overflow-y-auto hidden\"\n      }\n    >\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div\n          className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"\n          aria-hidden=\"true\"\n        ></div>\n\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n          &#8203;\n        </span>\n\n        <div className=\"inline-block align-bottom bg-white rounded-3xl text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-5\">\n            <div className=\"flex justify-between align-items-center mt-3 mb-5 text-center sm:mt-0 sm:text-left\">\n              <h2 className=\"mb-0 text-xl capitalize\">\n                <strong>Reinvest</strong>\n              </h2>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6 text-orange cursor-pointer hover:text-orange-dark\"\n                onClick={(e) => closeModalHandler(e)}\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </div>\n            {modalloading ? (\n              txhash ? (\n                <div>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-20 w-20 text-green-400 mx-auto mb-5\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                  </svg>\n                  <h4 className=\"text-md text-center\">\n                    <strong>Transaction Hash</strong>\n                  </h4>\n                  <a\n                    className=\"overflow-ellipsis overflow-hidden text-black mb-3 block hover:text-blue\"\n                    href={`https://laozi-testnet4.cosmoscan.io/tx/${txhash}`}\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    {txhash}\n                  </a>\n                </div>\n              ) : (\n                <div>\n                  <h2>Sending...</h2>\n                </div>\n              )\n            ) : (\n              <div className=\"modal-body\">\n                <div className=\"form-delegate-wrapper mb-5\">\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-address\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Reinvest To\n                    </label>\n                    <p>{operator}</p>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <label\n                      htmlFor=\"input-amount\"\n                      className=\"block text-sm font-medium text-gray-700 mb-1\"\n                    >\n                      Current Rewards\n                    </label>\n                    <p>{rewardAmount} BAND</p>\n                  </div>\n                </div>\n                <button\n                  onClick={confirm}\n                  className=\"capitalize button block w-full bg-purple-600 text-white py-2 px-4 rounded-xl hover:bg-purple-700 focus:outline-none focus:ring-purple-600 focus:ring-opacity-50 transition duration-500 ease-in-out\"\n                >\n                  Reinvest\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\nimport { getPairPrice, withdrawReward } from \"../band\";\nimport ModalDelegate from \"../components/ModalDelegate\";\nimport { ModalDelegateContext } from \"../app-context\";\nimport ModalRedelegate from \"../components/ModalRedelegate\";\nimport ModalReinvest from \"../components/ModalReinvest\";\n\nexport default function DelegatorDetails() {\n  const [isShowModal, setIsShowModal] = useState(false);\n  const [isShowModalRedelegate, setIsShowModalRedelegate] = useState(false);\n  const [isShowModalReinvest, setIsShowModalReInvest] = useState(false);\n  const [delegateType, setDelegateType] = useState(\"\");\n  const [reinvestReward, setreinvestReward] = useState(0);\n  // const [isShowModalDelegate, setIsShowModalDelegate] = useState(false);\n  // const [isShowModalUndelegate, setIsShowModalUndelegate] = useState(false);\n\n  const isModalDelegateActive = useMemo(() => ({ isShowModal, setIsShowModal }), [isShowModal]);\n  const isModalRedelegateActive = useMemo(\n    () => ({ isShowModalRedelegate, setIsShowModalRedelegate }),\n    [isShowModalRedelegate]\n  );\n  const isModalReinvestActive = useMemo(\n    () => ({ isShowModalReinvest, setIsShowModalReInvest }),\n    [isShowModalReinvest]\n  );\n\n  // const isModalDelegateActive = useMemo(\n  //   () => ({ isShowModalDelegate, setIsShowModalDelegate }),\n  //   [isShowModalDelegate]\n  // );\n  // const isModalUndelegateActive = useMemo(\n  //   () => ({ isShowModalUndelegate, setIsShowModalUndelegate }),\n  //   [isShowModalUndelegate]\n  // );\n\n  const wallet = useSelector((state) => state.wallet);\n  let { operator } = useParams();\n\n  // states\n  const [usdPrice, setUsdPrice] = useState([]);\n\n  async function getPrice() {\n    const response = await getPairPrice([\"BAND/USD\"], 10, 16);\n    if (response) setUsdPrice(response[0].rate);\n  }\n\n  // const GET_DELEGATIONS = gql`\n  //   subscription GetAccountDelegations($address: String!) {\n  //     delegations_view(\n  //       where: { delegator_address: { _eq: $address } }\n  //       order_by: { moniker: asc }\n  //     ) {\n  //       amount\n  //       moniker\n  //       reward\n  //       operator_address\n  //       delegator_address\n  //     }\n  //   }\n  // `;\n\n  const GET_VALIDATOR_DETAILS = gql`\n    query GetValidatorDetails($address: String!, $operator: String!) {\n      delegations_view(\n        where: { delegator_address: { _eq: $address }, operator_address: { _eq: $operator } }\n      ) {\n        amount\n        delegator_address\n        moniker\n        operator_address\n        reward\n      }\n      validators(where: { operator_address: { _eq: $operator } }) {\n        tokens\n        commission_rate\n        validator_report_count {\n          count\n        }\n      }\n      validators_aggregate {\n        aggregate {\n          sum {\n            tokens\n          }\n        }\n      }\n    }\n  `;\n\n  // const { loading, error, data } = useQuery(GET_DELEGATIONS);\n  // const [GetValidator, { loading, error, data }] = useSubscription(GET_VALIDATOR_DETAILS);\n  //\n  const [GetValidator, { loading, error, data }] = useLazyQuery(GET_VALIDATOR_DETAILS);\n\n  // const [getDelegationSub, { loading, error, data }] = useSubscription(GET_DELEGATIONS, {\n  //   variables: { address: wallet.address },\n  // });\n\n  // const { amount, moniker, delegator_address, operator_address, reward, share_percentage } = data.delegations_view\n\n  const openModalDelegate = (modalType) => {\n    // if (delegateType === \"delegate\") setIsShowModalDelegate(true);\n    // if (delegateType === \"undelegate\") setIsShowModalUndelegate(true);\n    setIsShowModal(true);\n    setDelegateType(modalType);\n  };\n\n  const openModalRedelegate = () => {\n    // if (delegateType === \"delegate\") setIsShowModalDelegate(true);\n    // if (delegateType === \"undelegate\") setIsShowModalUndelegate(true);\n    setIsShowModalRedelegate(true);\n  };\n\n  const openModalReInvest = (reward) => {\n    setreinvestReward(reward);\n    // if (delegateType === \"delegate\") setIsShowModalDelegate(true);\n    // if (delegateType === \"undelegate\") setIsShowModalUndelegate(true);\n    setIsShowModalReInvest(true);\n  };\n\n  const claim = async () => {\n    const response = await withdrawReward(\n      wallet.address,\n      operator,\n      wallet.address,\n      wallet.pubkey,\n      wallet.privateKey\n    );\n    console.log(response);\n  };\n\n  useEffect(() => {\n    getPrice();\n  }, []);\n\n  useEffect(() => {\n    GetValidator({ variables: { address: wallet.address, operator: operator } });\n  }, [wallet, operator, GetValidator]);\n\n  return (\n    <div>\n      <div className=\"flex flex-wrap -mx-2\">\n        {loading ? (\n          \"Loading...\"\n        ) : error ? (\n          `Error! ${error.message}`\n        ) : data ? (\n          <>\n            <h1 className=\"text-2xl mb-3\">\n              <strong>{data.delegations_view[0].moniker}</strong>\n            </h1>\n            <div className=\"flex w-full gap-3 flex-wrap mt-3\">\n              <div className=\"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-rose-400\">\n                <h3 className=\"mb-2 text-sm font-medium\">Voting Power</h3>\n                <h3 className=\"text-2xl text-right font-bold\">\n                  {(\n                    (data.validators[0].tokens / data.validators_aggregate.aggregate.sum.tokens) *\n                    100\n                  ).toFixed(2)}\n                  %\n                </h3>\n              </div>\n              <div className=\"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-indigo-400\">\n                <h3 className=\"mb-2 text-sm font-medium\">Commission</h3>\n                <h3 className=\"text-2xl text-right font-bold\">\n                  {(data.validators[0].commission_rate * 100).toFixed(2)}%\n                </h3>\n              </div>\n              <div className=\"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-warmGray-400\">\n                <h3 className=\"mb-2 text-sm font-medium\">Oracle Reports</h3>\n                <h3 className=\"text-2xl text-right font-bold\">\n                  {data.validators[0].validator_report_count.count}\n                </h3>\n              </div>\n            </div>\n            <div className=\"mt-8 block w-full\">\n              <h2 className=\"text-xl mb-3\">\n                <strong>Your Delegation</strong>\n              </h2>\n              <div className=\"flex w-full gap-3 flex-wrap mt-3\">\n                <div className=\"border-2 border-black p-5 w-full block rounded-xl flex-1 flex-grow bg-yellow-300\">\n                  <h3 className=\"mb-4 text-xl font-bold\">Assets</h3>\n                  <h3 className=\"mb-2 text-sm font-medium\">BAND Staked</h3>\n                  <h4 className=\"text-2xl font-bold text-right\">\n                    {(data.delegations_view[0].amount / 1e6).toFixed(4)}\n                  </h4>\n                  <h4 className=\"mb-2 text-sm font-medium text-right text-orange\">\n                    ~{((data.delegations_view[0].amount / 1e6) * usdPrice).toFixed(4)} USD\n                  </h4>\n                  <div className=\"action-group flex gap-3 mt-4\">\n                    <button\n                      onClick={() => openModalDelegate(\"delegate\")}\n                      className=\"flex-1 flex-grow button block ml-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 shadow-insetBlack hover:shadow-none\"\n                    >\n                      Delegate\n                    </button>\n                    <button\n                      onClick={() => openModalDelegate(\"undelegate\")}\n                      className=\"flex-1 flex-grow button block ml-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 shadow-insetBlack hover:shadow-none\"\n                    >\n                      Undelegate\n                    </button>\n                    <button\n                      onClick={openModalRedelegate}\n                      className=\"flex-1 flex-grow button block ml-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 shadow-insetBlack hover:shadow-none\"\n                    >\n                      Redelegate\n                    </button>\n                  </div>\n                </div>\n                <div className=\"border-2 border-black p-5 w-full block rounded-xl flex-1 flex-grow bg-teal-400\">\n                  <h3 className=\"mb-3 text-xl font-bold\">Rewards</h3>\n                  <h3 className=\"mb-2 text-sm font-medium\">Unclaim Rewards (BAND)</h3>\n                  <h4 className=\"text-2xl font-bold text-right\">\n                    {(data.delegations_view[0].reward / 1e6).toFixed(4)}\n                  </h4>\n                  <h4 className=\"mb-2 text-sm font-medium text-right text-orange\">\n                    ~{((data.delegations_view[0].reward / 1e6) * usdPrice).toFixed(4)} USD\n                  </h4>\n                  <div className=\"action-group flex gap-3 mt-4\">\n                    <button\n                      onClick={() => openModalReInvest(data.delegations_view[0].reward / 1e6)}\n                      className=\"flex-1 flex-grow button block ml-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 shadow-insetBlack hover:shadow-none\"\n                    >\n                      Reinvest\n                    </button>\n                    <button\n                      onClick={claim}\n                      className=\"flex-1 flex-grow button block ml-auto text-sm text-black hover:text-white bg-white hover:bg-black border-2 border-black focus:outline-none focus:ring-black focus:ring-opacity-50  py-2 px-10 rounded-xl focus:outline-none disabled:opacity-50 shadow-insetBlack hover:shadow-none\"\n                    >\n                      Claim\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          \"0 Validator\"\n        )}\n      </div>\n      <ModalDelegateContext.Provider value={isModalDelegateActive}>\n        <ModalDelegate operator={operator} title={delegateType} />\n      </ModalDelegateContext.Provider>\n      <ModalDelegateContext.Provider value={isModalRedelegateActive}>\n        <ModalRedelegate operator={operator} title={delegateType} />\n      </ModalDelegateContext.Provider>\n      <ModalDelegateContext.Provider value={isModalReinvestActive}>\n        <ModalReinvest operator={operator} rewardAmount={reinvestReward} />\n      </ModalDelegateContext.Provider>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\nimport { SingleDelegator } from \"../components/SingleDelegator\";\nimport DelegatorDetails from \"./DelegatorDetails\";\n\nexport default function Delegations() {\n  const wallet = useSelector((state) => state.wallet);\n  useEffect(() => {\n    // getDelegators({ variables: { address: wallet.address } });\n  }, []);\n\n  const GET_DELEGATIONS = gql`\n    subscription GetAccountDelegations($address: String!) {\n      delegations_view(\n        where: { delegator_address: { _eq: $address } }\n        order_by: { moniker: asc }\n      ) {\n        amount\n        moniker\n        reward\n        operator_address\n        delegator_address\n      }\n    }\n  `;\n\n  //   const { loading, error, data } = useQuery(GET_DELEGATIONS);\n  // const [getDelegators, { loading, error, data }] = useLazyQuery(GET_DELEGATIONS);\n  const { loading, error, data } = useSubscription(GET_DELEGATIONS, {\n    variables: { address: wallet.address },\n  });\n\n  return (\n    <div>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <div>\n              <h2 className=\"text-2xl mb-5\">\n                <strong>Delegations</strong>\n              </h2>\n              <div className=\"flex flex-wrap -mx-2\">\n                {loading\n                  ? \"Loading...\"\n                  : error\n                  ? `Error! ${error.message}`\n                  : data\n                  ? data.delegations_view.map((delegator, ind) => {\n                      return <SingleDelegator delegator={delegator} key={ind} />;\n                    })\n                  : \"0 Validator\"}\n              </div>\n            </div>\n          }\n        />\n        <Route path=\":operator\" element={<DelegatorDetails />} />\n      </Routes>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { getPairPrice } from \"../band\";\nexport default function Converter() {\n  const [inputSource, setinputSource] = useState(1);\n  const [symbolSource, setsymbolSource] = useState(\"BTC\");\n  const [inputDest, setinputDest] = useState(1);\n  const [symbolDest, setsymbolDest] = useState(\"USD\");\n  const [rate, setRate] = useState(0);\n\n  const symbols = [\n    \"USD\",\n    \"JPY\",\n    \"THB\",\n    \"AUD\",\n    \"EUR\",\n    \"BTC\",\n    \"ETH\",\n    \"BNB\",\n    \"USDT\",\n    \"SOL\",\n    \"LUNA\",\n    \"BAND\",\n  ];\n\n  const getPrice = async (pair) => {\n    const response = await getPairPrice(pair, 10, 16);\n    setRate(response[0].rate);\n  };\n\n  const handleSelectSourceChanged = (e) => {\n    setsymbolSource(e.target.value);\n    getPrice([`${e.target.value}/${symbolDest}`]);\n  };\n\n  const handleSelectDestChanged = (e) => {\n    setsymbolDest(e.target.value);\n    getPrice([`${symbolSource}/${e.target.value}`]);\n  };\n\n  const handleInputSourceChange = (val) => {\n    setinputSource(val);\n    setinputDest((val * rate).toFixed(2));\n  };\n\n  useEffect(() => {\n    if (symbolSource != \"\") getPrice([`${symbolSource}/${symbolDest}`]);\n  }, []);\n\n  useEffect(() => {\n    setinputDest((inputSource * rate).toFixed(2));\n  }, [rate]);\n\n  return (\n    <div>\n      <h1 className=\"text-2xl mb-5\">\n        <strong>Cryptocurrency Converter Calculator</strong>\n      </h1>\n      <div className=\"\">\n        <div className=\"form-converter-group md:flex gap-2 items-center\">\n          <div className=\"form flex-1 flex-grow\">\n            <label className=\"text-gray-400 font-medium\">From</label>\n            <div className=\"input-group mb-3\">\n              <select\n                className=\"bg-white border-2 border-gray-200 rounded-xl w-full px-3 py-2\"\n                onChange={(e) => handleSelectSourceChanged(e)}\n                value={symbolSource}\n              >\n                {symbols.map((symbol) => (\n                  <option value={symbol}>{symbol}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <input\n                className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 text-5xl border-solid border-2 border-gray-200 rounded-xl\"\n                type=\"text\"\n                id=\"input-srcPrice\"\n                value={inputSource}\n                onChange={(e) => handleInputSourceChange(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"mx-auto mt-3 w-10 h-10 border-2 border-black rounded-full flex items-center justify-center bg-orange\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\"\n              />\n            </svg>\n          </div>\n          <div className=\"form  flex-1 flex-grow\">\n            <label className=\"text-gray-400 font-medium\">To</label>\n            <div className=\"input-group mb-3\">\n              <select\n                className=\"bg-white border-2 border-gray-200 rounded-xl w-full px-3 py-2\"\n                onChange={(e) => handleSelectDestChanged(e)}\n                value={symbolDest}\n              >\n                {symbols.map((symbol) => (\n                  <option value={symbol}>{symbol}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"input-group\">\n              <input\n                className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 text-5xl border-solid border-2 border-gray-200 rounded-xl\"\n                type=\"text\"\n                id=\"input-desc\"\n                value={inputDest}\n                onChange={(e) => setinputDest(e.target.value)}\n                disabled=\"disabled\"\n              />\n            </div>\n          </div>\n          <div className=\"flex\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { gql, useSubscription } from \"@apollo/client\";\nimport { useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nexport default function Transactions() {\n  const wallet = useSelector((state) => state.wallet);\n\n  const GET_ACCOUNT_TRANSACTIONS_BY_PK = gql`\n    subscription GetAccountTransactionByPK($address: String!) {\n      accounts_by_pk(address: $address) {\n        account_transactions(order_by: { transaction_id: desc }, limit: 10) {\n          transaction {\n            block_height\n            err_msg\n            gas_fee\n            gas_limit\n            hash\n            gas_used\n            id\n            messages\n            sender\n            success\n          }\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useSubscription(GET_ACCOUNT_TRANSACTIONS_BY_PK, {\n    variables: { address: wallet.address },\n  });\n\n  useEffect(() => {}, []);\n\n  return (\n    <div>\n      <h1 className=\"text-2xl mb-5\">\n        <strong>My Transactions</strong>\n      </h1>\n      <div className=\"\">\n        {loading ? (\n          \"Loading...\"\n        ) : error ? (\n          `Error! ${error.message}`\n        ) : data ? (\n          <div className=\"tx-table border-black border-2 rounded-xl\">\n            <div>\n              <div className=\"row flex text-left\">\n                <th className=\"w-4/12 col p-2\">Hash</th>\n                <th className=\"col w-2/12 p-2\">Block</th>\n                <th className=\"col w-2/12 p-2\">Status</th>\n                <th className=\"w-4/12 col p-2\">Actions</th>\n              </div>\n            </div>\n            <tbody>\n              {data.accounts_by_pk.account_transactions.map((tx, ind) => {\n                return (\n                  <div className=\"row flex\">\n                    <div className=\"p-2 w-4/12 overflow-hidden overflow-ellipsis\">\n                      <span>{tx.transaction.hash.replace(\"\\\\x\", \"\")}</span>\n                    </div>\n                    <div className=\"p-2 w-2/12\">{tx.transaction.block_height}</div>\n                    <div className=\"p-2 w-2/12\">\n                      {tx.transaction.success ? (\n                        <span className=\"text-green-400\">Success</span>\n                      ) : (\n                        <span className=\"text-orange\">Failed</span>\n                      )}\n                    </div>\n                    <div className=\"p-2 w-4/12  overflow-hidden overflow-ellipsis\">\n                      {tx.transaction.messages.map((msg) => (\n                        <span>{msg.type.split(\"1.\")[1]}</span>\n                      ))}\n                    </div>\n                  </div>\n                );\n              })}\n            </tbody>\n          </div>\n        ) : (\n          \"You haven't made any transaction in this account.\"\n        )}\n      </div>\n    </div>\n  );\n}\n","import AccountSidebar from \"../components/AccountSidebar\";\nimport { useState } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Validators from \"./Validators\";\nimport Delegations from \"./Delegations\";\nimport DelegatorDetails from \"./DelegatorDetails\";\nimport Converter from \"./Converter\";\nimport Transactions from \"./Transactions\";\n\nexport default function AccountPage() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"md:flex gap-6\">\n        <AccountSidebar />\n        <div className=\"card bg-white md:p-10 p-5 rounded-2xl mt-5 lg:w-3/4 w-full\">\n          <Routes>\n            <Route path=\"validators\" element={<Validators />} />\n            <Route path=\"delegations\" element={<Delegations />}>\n              <Route path=\":operator\" element={<DelegatorDetails />} />\n            </Route>\n            <Route path=\"converter\" element={<Converter />} />\n            <Route path=\"transactions\" element={<Transactions />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import FormOracleScript from \"../components/FormOracleScript\";\nexport default function CreateOracleScript() {\n  return (\n    <div className=\"container mx-auto max-w-full\">\n      <div className=\"card bg-white md:p-10 p-5 rounded-t-2xl mt-5\">\n        <FormOracleScript />\n      </div>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport { React, useState, useEffect } from \"react\";\nimport { Link, BrowserRouter, Routes, Route, useLocation, Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\n// components\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Header/Navbar\";\nimport BackButton from \"./components/BackButton\";\nimport Footer from \"./components/Footer\";\n\n// routes\nimport GetPrice from \"./routes/GetPrice\";\nimport Delegate from \"./routes/Delegate\";\nimport SendToken from \"./routes/SendToken\";\nimport SendRequest from \"./routes/SendRequest\";\nimport IBCTransfer from \"./routes/IBCTransfer\";\nimport DataSource from \"./routes/DataSource\";\nimport OracleScript from \"./routes/OracleScript\";\nimport AccountPage from \"./routes/AccountPage\";\nimport Validators from \"./routes/Validators\";\nimport Delegations from \"./routes/Delegations\";\nimport DelegatorDetails from \"./routes/DelegatorDetails\";\nimport CreateOracleScript from \"./routes/CreateOracleScript\";\nimport EditOracleScript from \"./routes/EditOracleScript\";\nimport Converter from \"./routes/Converter\";\nimport Transactions from \"./routes/Transactions\";\n\nconst BackRoute = () => {\n  const location = useLocation();\n  if (location.pathname !== \"/\" && !location.pathname.includes(\"/myaccount\")) {\n    return <BackButton />;\n  }\n  return null;\n};\n\nfunction App() {\n  const wallet = useSelector((state) => state.wallet);\n  const [code, setCode] = useState(null);\n\n  useEffect(() => {\n    // fetch(\"/compile\")\n    //   .then((res) => res.json())\n    //   .then((data) => {\n    //     setCode(data.message);\n    //     if (code) console.log(code);\n    //   });\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App md:p-6 p-3\">\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          <Route exact path=\"/sendToken\" element={<SendToken />} />\n          <Route exact path=\"/request\" element={<SendRequest />} />\n          <Route exact path=\"/getprice\" element={<GetPrice />} />\n          <Route exact path=\"/delegate\" element={<Delegate />} />\n          <Route exact path=\"/transfer\" element={<IBCTransfer />} />\n          <Route exact path=\"/datasource\" element={<DataSource />} />\n          <Route exact path=\"/oraclescript\" element={<OracleScript />} />\n          <Route exact path=\"/oraclescript/create\" element={<CreateOracleScript />} />\n          <Route exact path=\"/oraclescript/edit\" element={<CreateOracleScript />} />\n          <Route\n            exact\n            path=\"/myaccount\"\n            element={wallet.address ? <AccountPage /> : <Navigate to=\"/\" />}\n          >\n            <Route path=\"validators\" element={<Validators />} />\n            <Route path=\"delegations\" element={<Delegations />}>\n              <Route path=\":operator\" element={<DelegatorDetails />} />\n            </Route>\n            <Route path=\"converter\" element={<Converter />} />\n            <Route path=\"transactions\" element={<Transactions />} />\n          </Route>\n        </Routes>\n        <BackRoute />\n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport walletReducer from \"./walletSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    wallet: walletReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./redux/store\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { split, HttpLink } from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\n\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst httpLink = new HttpLink({\n  uri: \"https://graphql-lt4.bandchain.org/v1/graphql\",\n});\n\nconst wsLink = new WebSocketLink({\n  uri: \"wss://graphql-lt4.bandchain.org/v1/graphql\",\n  options: {\n    reconnect: true,\n  },\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const baseUrl = \"https://graphql-lt4.bandchain.org/v1/graphql\";\nexport const grpcUrl = \"https://laozi1.bandchain.org/grpc-web\";\n"],"sourceRoot":""}