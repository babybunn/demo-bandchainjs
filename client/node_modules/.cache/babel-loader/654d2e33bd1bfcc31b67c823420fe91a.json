{"ast":null,"code":"// package: cosmos.base.tendermint.v1beta1\n// file: cosmos/base/tendermint/v1beta1/query.proto\nvar cosmos_base_tendermint_v1beta1_query_pb = require(\"../../../../cosmos/base/tendermint/v1beta1/query_pb\");\n\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar Service = function () {\n  function Service() {}\n\n  Service.serviceName = \"cosmos.base.tendermint.v1beta1.Service\";\n  return Service;\n}();\n\nService.GetNodeInfo = {\n  methodName: \"GetNodeInfo\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetNodeInfoRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetNodeInfoResponse\n};\nService.GetSyncing = {\n  methodName: \"GetSyncing\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetSyncingRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetSyncingResponse\n};\nService.GetLatestBlock = {\n  methodName: \"GetLatestBlock\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetLatestBlockRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetLatestBlockResponse\n};\nService.GetBlockByHeight = {\n  methodName: \"GetBlockByHeight\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetBlockByHeightRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetBlockByHeightResponse\n};\nService.GetLatestValidatorSet = {\n  methodName: \"GetLatestValidatorSet\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetLatestValidatorSetRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetLatestValidatorSetResponse\n};\nService.GetValidatorSetByHeight = {\n  methodName: \"GetValidatorSetByHeight\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetValidatorSetByHeightRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetValidatorSetByHeightResponse\n};\nexports.Service = Service;\n\nfunction ServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nServiceClient.prototype.getNodeInfo = function getNodeInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Service.GetNodeInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getSyncing = function getSyncing(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Service.GetSyncing, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getLatestBlock = function getLatestBlock(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Service.GetLatestBlock, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getBlockByHeight = function getBlockByHeight(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Service.GetBlockByHeight, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getLatestValidatorSet = function getLatestValidatorSet(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Service.GetLatestValidatorSet, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getValidatorSetByHeight = function getValidatorSetByHeight(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Service.GetValidatorSetByHeight, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.ServiceClient = ServiceClient;","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/client/node_modules/@bandprotocol/bandchain.js/proto/cosmos/base/tendermint/v1beta1/query_pb_service.js"],"names":["cosmos_base_tendermint_v1beta1_query_pb","require","grpc","Service","serviceName","GetNodeInfo","methodName","service","requestStream","responseStream","requestType","GetNodeInfoRequest","responseType","GetNodeInfoResponse","GetSyncing","GetSyncingRequest","GetSyncingResponse","GetLatestBlock","GetLatestBlockRequest","GetLatestBlockResponse","GetBlockByHeight","GetBlockByHeightRequest","GetBlockByHeightResponse","GetLatestValidatorSet","GetLatestValidatorSetRequest","GetLatestValidatorSetResponse","GetValidatorSetByHeight","GetValidatorSetByHeightRequest","GetValidatorSetByHeightResponse","exports","ServiceClient","serviceHost","options","prototype","getNodeInfo","requestMessage","metadata","callback","arguments","length","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","message","cancel","close","getSyncing","getLatestBlock","getBlockByHeight","getLatestValidatorSet","getValidatorSetByHeight"],"mappings":"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","sourcesContent":["// package: cosmos.base.tendermint.v1beta1\n// file: cosmos/base/tendermint/v1beta1/query.proto\n\nvar cosmos_base_tendermint_v1beta1_query_pb = require(\"../../../../cosmos/base/tendermint/v1beta1/query_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar Service = (function () {\n  function Service() {}\n  Service.serviceName = \"cosmos.base.tendermint.v1beta1.Service\";\n  return Service;\n}());\n\nService.GetNodeInfo = {\n  methodName: \"GetNodeInfo\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetNodeInfoRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetNodeInfoResponse\n};\n\nService.GetSyncing = {\n  methodName: \"GetSyncing\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetSyncingRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetSyncingResponse\n};\n\nService.GetLatestBlock = {\n  methodName: \"GetLatestBlock\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetLatestBlockRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetLatestBlockResponse\n};\n\nService.GetBlockByHeight = {\n  methodName: \"GetBlockByHeight\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetBlockByHeightRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetBlockByHeightResponse\n};\n\nService.GetLatestValidatorSet = {\n  methodName: \"GetLatestValidatorSet\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetLatestValidatorSetRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetLatestValidatorSetResponse\n};\n\nService.GetValidatorSetByHeight = {\n  methodName: \"GetValidatorSetByHeight\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_base_tendermint_v1beta1_query_pb.GetValidatorSetByHeightRequest,\n  responseType: cosmos_base_tendermint_v1beta1_query_pb.GetValidatorSetByHeightResponse\n};\n\nexports.Service = Service;\n\nfunction ServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nServiceClient.prototype.getNodeInfo = function getNodeInfo(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.GetNodeInfo, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getSyncing = function getSyncing(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.GetSyncing, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getLatestBlock = function getLatestBlock(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.GetLatestBlock, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getBlockByHeight = function getBlockByHeight(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.GetBlockByHeight, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getLatestValidatorSet = function getLatestValidatorSet(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.GetLatestValidatorSet, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getValidatorSetByHeight = function getValidatorSetByHeight(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.GetValidatorSetByHeight, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.ServiceClient = ServiceClient;\n\n"]},"metadata":{},"sourceType":"script"}