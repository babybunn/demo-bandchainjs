{"ast":null,"code":"// source: tendermint/types/evidence.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');\n\ngoog.object.extend(proto, gogoproto_gogo_pb);\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\n\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\n\nvar tendermint_types_types_pb = require('../../tendermint/types/types_pb.js');\n\ngoog.object.extend(proto, tendermint_types_types_pb);\n\nvar tendermint_types_validator_pb = require('../../tendermint/types/validator_pb.js');\n\ngoog.object.extend(proto, tendermint_types_validator_pb);\ngoog.exportSymbol('proto.tendermint.types.DuplicateVoteEvidence', null, global);\ngoog.exportSymbol('proto.tendermint.types.Evidence', null, global);\ngoog.exportSymbol('proto.tendermint.types.Evidence.SumCase', null, global);\ngoog.exportSymbol('proto.tendermint.types.EvidenceList', null, global);\ngoog.exportSymbol('proto.tendermint.types.LightClientAttackEvidence', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.tendermint.types.Evidence = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tendermint.types.Evidence.oneofGroups_);\n};\n\ngoog.inherits(proto.tendermint.types.Evidence, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.Evidence.displayName = 'proto.tendermint.types.Evidence';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.tendermint.types.DuplicateVoteEvidence, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.DuplicateVoteEvidence.displayName = 'proto.tendermint.types.DuplicateVoteEvidence';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.types.LightClientAttackEvidence.repeatedFields_, null);\n};\n\ngoog.inherits(proto.tendermint.types.LightClientAttackEvidence, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.LightClientAttackEvidence.displayName = 'proto.tendermint.types.LightClientAttackEvidence';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tendermint.types.EvidenceList = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.types.EvidenceList.repeatedFields_, null);\n};\n\ngoog.inherits(proto.tendermint.types.EvidenceList, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.EvidenceList.displayName = 'proto.tendermint.types.EvidenceList';\n}\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.tendermint.types.Evidence.oneofGroups_ = [[1, 2]];\n/**\n * @enum {number}\n */\n\nproto.tendermint.types.Evidence.SumCase = {\n  SUM_NOT_SET: 0,\n  DUPLICATE_VOTE_EVIDENCE: 1,\n  LIGHT_CLIENT_ATTACK_EVIDENCE: 2\n};\n/**\n * @return {proto.tendermint.types.Evidence.SumCase}\n */\n\nproto.tendermint.types.Evidence.prototype.getSumCase = function () {\n  return (\n    /** @type {proto.tendermint.types.Evidence.SumCase} */\n    jspb.Message.computeOneofCase(this, proto.tendermint.types.Evidence.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tendermint.types.Evidence.prototype.toObject = function (opt_includeInstance) {\n    return proto.tendermint.types.Evidence.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tendermint.types.Evidence} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tendermint.types.Evidence.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      duplicateVoteEvidence: (f = msg.getDuplicateVoteEvidence()) && proto.tendermint.types.DuplicateVoteEvidence.toObject(includeInstance, f),\n      lightClientAttackEvidence: (f = msg.getLightClientAttackEvidence()) && proto.tendermint.types.LightClientAttackEvidence.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.Evidence}\n */\n\n\nproto.tendermint.types.Evidence.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.Evidence();\n  return proto.tendermint.types.Evidence.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.Evidence} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.Evidence}\n */\n\n\nproto.tendermint.types.Evidence.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.tendermint.types.DuplicateVoteEvidence();\n        reader.readMessage(value, proto.tendermint.types.DuplicateVoteEvidence.deserializeBinaryFromReader);\n        msg.setDuplicateVoteEvidence(value);\n        break;\n\n      case 2:\n        var value = new proto.tendermint.types.LightClientAttackEvidence();\n        reader.readMessage(value, proto.tendermint.types.LightClientAttackEvidence.deserializeBinaryFromReader);\n        msg.setLightClientAttackEvidence(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.types.Evidence.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.Evidence.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.Evidence} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tendermint.types.Evidence.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDuplicateVoteEvidence();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.tendermint.types.DuplicateVoteEvidence.serializeBinaryToWriter);\n  }\n\n  f = message.getLightClientAttackEvidence();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.tendermint.types.LightClientAttackEvidence.serializeBinaryToWriter);\n  }\n};\n/**\n * optional DuplicateVoteEvidence duplicate_vote_evidence = 1;\n * @return {?proto.tendermint.types.DuplicateVoteEvidence}\n */\n\n\nproto.tendermint.types.Evidence.prototype.getDuplicateVoteEvidence = function () {\n  return (\n    /** @type{?proto.tendermint.types.DuplicateVoteEvidence} */\n    jspb.Message.getWrapperField(this, proto.tendermint.types.DuplicateVoteEvidence, 1)\n  );\n};\n/**\n * @param {?proto.tendermint.types.DuplicateVoteEvidence|undefined} value\n * @return {!proto.tendermint.types.Evidence} returns this\n*/\n\n\nproto.tendermint.types.Evidence.prototype.setDuplicateVoteEvidence = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.tendermint.types.Evidence.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.Evidence} returns this\n */\n\n\nproto.tendermint.types.Evidence.prototype.clearDuplicateVoteEvidence = function () {\n  return this.setDuplicateVoteEvidence(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.types.Evidence.prototype.hasDuplicateVoteEvidence = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional LightClientAttackEvidence light_client_attack_evidence = 2;\n * @return {?proto.tendermint.types.LightClientAttackEvidence}\n */\n\n\nproto.tendermint.types.Evidence.prototype.getLightClientAttackEvidence = function () {\n  return (\n    /** @type{?proto.tendermint.types.LightClientAttackEvidence} */\n    jspb.Message.getWrapperField(this, proto.tendermint.types.LightClientAttackEvidence, 2)\n  );\n};\n/**\n * @param {?proto.tendermint.types.LightClientAttackEvidence|undefined} value\n * @return {!proto.tendermint.types.Evidence} returns this\n*/\n\n\nproto.tendermint.types.Evidence.prototype.setLightClientAttackEvidence = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.tendermint.types.Evidence.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.Evidence} returns this\n */\n\n\nproto.tendermint.types.Evidence.prototype.clearLightClientAttackEvidence = function () {\n  return this.setLightClientAttackEvidence(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.types.Evidence.prototype.hasLightClientAttackEvidence = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tendermint.types.DuplicateVoteEvidence.prototype.toObject = function (opt_includeInstance) {\n    return proto.tendermint.types.DuplicateVoteEvidence.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tendermint.types.DuplicateVoteEvidence} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tendermint.types.DuplicateVoteEvidence.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      voteA: (f = msg.getVoteA()) && tendermint_types_types_pb.Vote.toObject(includeInstance, f),\n      voteB: (f = msg.getVoteB()) && tendermint_types_types_pb.Vote.toObject(includeInstance, f),\n      totalVotingPower: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      validatorPower: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.DuplicateVoteEvidence}\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.DuplicateVoteEvidence();\n  return proto.tendermint.types.DuplicateVoteEvidence.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.DuplicateVoteEvidence} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.DuplicateVoteEvidence}\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new tendermint_types_types_pb.Vote();\n        reader.readMessage(value, tendermint_types_types_pb.Vote.deserializeBinaryFromReader);\n        msg.setVoteA(value);\n        break;\n\n      case 2:\n        var value = new tendermint_types_types_pb.Vote();\n        reader.readMessage(value, tendermint_types_types_pb.Vote.deserializeBinaryFromReader);\n        msg.setVoteB(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setTotalVotingPower(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setValidatorPower(value);\n        break;\n\n      case 5:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setTimestamp(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.DuplicateVoteEvidence.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.DuplicateVoteEvidence} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getVoteA();\n\n  if (f != null) {\n    writer.writeMessage(1, f, tendermint_types_types_pb.Vote.serializeBinaryToWriter);\n  }\n\n  f = message.getVoteB();\n\n  if (f != null) {\n    writer.writeMessage(2, f, tendermint_types_types_pb.Vote.serializeBinaryToWriter);\n  }\n\n  f = message.getTotalVotingPower();\n\n  if (f !== 0) {\n    writer.writeInt64(3, f);\n  }\n\n  f = message.getValidatorPower();\n\n  if (f !== 0) {\n    writer.writeInt64(4, f);\n  }\n\n  f = message.getTimestamp();\n\n  if (f != null) {\n    writer.writeMessage(5, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n};\n/**\n * optional Vote vote_a = 1;\n * @return {?proto.tendermint.types.Vote}\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.getVoteA = function () {\n  return (\n    /** @type{?proto.tendermint.types.Vote} */\n    jspb.Message.getWrapperField(this, tendermint_types_types_pb.Vote, 1)\n  );\n};\n/**\n * @param {?proto.tendermint.types.Vote|undefined} value\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n*/\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.setVoteA = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.clearVoteA = function () {\n  return this.setVoteA(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.hasVoteA = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Vote vote_b = 2;\n * @return {?proto.tendermint.types.Vote}\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.getVoteB = function () {\n  return (\n    /** @type{?proto.tendermint.types.Vote} */\n    jspb.Message.getWrapperField(this, tendermint_types_types_pb.Vote, 2)\n  );\n};\n/**\n * @param {?proto.tendermint.types.Vote|undefined} value\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n*/\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.setVoteB = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.clearVoteB = function () {\n  return this.setVoteB(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.hasVoteB = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional int64 total_voting_power = 3;\n * @return {number}\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.getTotalVotingPower = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.setTotalVotingPower = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional int64 validator_power = 4;\n * @return {number}\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.getValidatorPower = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.setValidatorPower = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional google.protobuf.Timestamp timestamp = 5;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.getTimestamp = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5)\n  );\n};\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n*/\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.setTimestamp = function (value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.clearTimestamp = function () {\n  return this.setTimestamp(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.types.DuplicateVoteEvidence.prototype.hasTimestamp = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tendermint.types.LightClientAttackEvidence.prototype.toObject = function (opt_includeInstance) {\n    return proto.tendermint.types.LightClientAttackEvidence.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tendermint.types.LightClientAttackEvidence} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tendermint.types.LightClientAttackEvidence.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      conflictingBlock: (f = msg.getConflictingBlock()) && tendermint_types_types_pb.LightBlock.toObject(includeInstance, f),\n      commonHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      byzantineValidatorsList: jspb.Message.toObjectList(msg.getByzantineValidatorsList(), tendermint_types_validator_pb.Validator.toObject, includeInstance),\n      totalVotingPower: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.LightClientAttackEvidence}\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.LightClientAttackEvidence();\n  return proto.tendermint.types.LightClientAttackEvidence.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.LightClientAttackEvidence} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.LightClientAttackEvidence}\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new tendermint_types_types_pb.LightBlock();\n        reader.readMessage(value, tendermint_types_types_pb.LightBlock.deserializeBinaryFromReader);\n        msg.setConflictingBlock(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setCommonHeight(value);\n        break;\n\n      case 3:\n        var value = new tendermint_types_validator_pb.Validator();\n        reader.readMessage(value, tendermint_types_validator_pb.Validator.deserializeBinaryFromReader);\n        msg.addByzantineValidators(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setTotalVotingPower(value);\n        break;\n\n      case 5:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setTimestamp(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.LightClientAttackEvidence.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.LightClientAttackEvidence} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getConflictingBlock();\n\n  if (f != null) {\n    writer.writeMessage(1, f, tendermint_types_types_pb.LightBlock.serializeBinaryToWriter);\n  }\n\n  f = message.getCommonHeight();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n\n  f = message.getByzantineValidatorsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, tendermint_types_validator_pb.Validator.serializeBinaryToWriter);\n  }\n\n  f = message.getTotalVotingPower();\n\n  if (f !== 0) {\n    writer.writeInt64(4, f);\n  }\n\n  f = message.getTimestamp();\n\n  if (f != null) {\n    writer.writeMessage(5, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n};\n/**\n * optional LightBlock conflicting_block = 1;\n * @return {?proto.tendermint.types.LightBlock}\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.getConflictingBlock = function () {\n  return (\n    /** @type{?proto.tendermint.types.LightBlock} */\n    jspb.Message.getWrapperField(this, tendermint_types_types_pb.LightBlock, 1)\n  );\n};\n/**\n * @param {?proto.tendermint.types.LightBlock|undefined} value\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n*/\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.setConflictingBlock = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.clearConflictingBlock = function () {\n  return this.setConflictingBlock(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.hasConflictingBlock = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional int64 common_height = 2;\n * @return {number}\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.getCommonHeight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.setCommonHeight = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * repeated Validator byzantine_validators = 3;\n * @return {!Array<!proto.tendermint.types.Validator>}\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.getByzantineValidatorsList = function () {\n  return (\n    /** @type{!Array<!proto.tendermint.types.Validator>} */\n    jspb.Message.getRepeatedWrapperField(this, tendermint_types_validator_pb.Validator, 3)\n  );\n};\n/**\n * @param {!Array<!proto.tendermint.types.Validator>} value\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n*/\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.setByzantineValidatorsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.tendermint.types.Validator=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.types.Validator}\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.addByzantineValidators = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tendermint.types.Validator, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.clearByzantineValidatorsList = function () {\n  return this.setByzantineValidatorsList([]);\n};\n/**\n * optional int64 total_voting_power = 4;\n * @return {number}\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.getTotalVotingPower = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.setTotalVotingPower = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional google.protobuf.Timestamp timestamp = 5;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.getTimestamp = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5)\n  );\n};\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n*/\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.setTimestamp = function (value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.clearTimestamp = function () {\n  return this.setTimestamp(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.types.LightClientAttackEvidence.prototype.hasTimestamp = function () {\n  return jspb.Message.getField(this, 5) != null;\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.tendermint.types.EvidenceList.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tendermint.types.EvidenceList.prototype.toObject = function (opt_includeInstance) {\n    return proto.tendermint.types.EvidenceList.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tendermint.types.EvidenceList} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tendermint.types.EvidenceList.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      evidenceList: jspb.Message.toObjectList(msg.getEvidenceList(), proto.tendermint.types.Evidence.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.EvidenceList}\n */\n\n\nproto.tendermint.types.EvidenceList.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.EvidenceList();\n  return proto.tendermint.types.EvidenceList.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.EvidenceList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.EvidenceList}\n */\n\n\nproto.tendermint.types.EvidenceList.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.tendermint.types.Evidence();\n        reader.readMessage(value, proto.tendermint.types.Evidence.deserializeBinaryFromReader);\n        msg.addEvidence(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.types.EvidenceList.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.EvidenceList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.EvidenceList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tendermint.types.EvidenceList.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEvidenceList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.tendermint.types.Evidence.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated Evidence evidence = 1;\n * @return {!Array<!proto.tendermint.types.Evidence>}\n */\n\n\nproto.tendermint.types.EvidenceList.prototype.getEvidenceList = function () {\n  return (\n    /** @type{!Array<!proto.tendermint.types.Evidence>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.types.Evidence, 1)\n  );\n};\n/**\n * @param {!Array<!proto.tendermint.types.Evidence>} value\n * @return {!proto.tendermint.types.EvidenceList} returns this\n*/\n\n\nproto.tendermint.types.EvidenceList.prototype.setEvidenceList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.tendermint.types.Evidence=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.types.Evidence}\n */\n\n\nproto.tendermint.types.EvidenceList.prototype.addEvidence = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tendermint.types.Evidence, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.types.EvidenceList} returns this\n */\n\n\nproto.tendermint.types.EvidenceList.prototype.clearEvidenceList = function () {\n  return this.setEvidenceList([]);\n};\n\ngoog.object.extend(exports, proto.tendermint.types);","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/client/node_modules/@bandprotocol/bandchain.js/proto/tendermint/types/evidence_pb.js"],"names":["jspb","require","goog","global","Function","gogoproto_gogo_pb","object","extend","proto","google_protobuf_timestamp_pb","tendermint_types_types_pb","tendermint_types_validator_pb","exportSymbol","tendermint","types","Evidence","opt_data","Message","initialize","oneofGroups_","inherits","DEBUG","COMPILED","displayName","DuplicateVoteEvidence","LightClientAttackEvidence","repeatedFields_","EvidenceList","SumCase","SUM_NOT_SET","DUPLICATE_VOTE_EVIDENCE","LIGHT_CLIENT_ATTACK_EVIDENCE","prototype","getSumCase","computeOneofCase","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","msg","f","obj","duplicateVoteEvidence","getDuplicateVoteEvidence","lightClientAttackEvidence","getLightClientAttackEvidence","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readMessage","setDuplicateVoteEvidence","setLightClientAttackEvidence","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","writeMessage","getWrapperField","setOneofWrapperField","clearDuplicateVoteEvidence","hasDuplicateVoteEvidence","getField","clearLightClientAttackEvidence","hasLightClientAttackEvidence","voteA","getVoteA","Vote","voteB","getVoteB","totalVotingPower","getFieldWithDefault","validatorPower","timestamp","getTimestamp","Timestamp","setVoteA","setVoteB","readInt64","setTotalVotingPower","setValidatorPower","setTimestamp","getTotalVotingPower","writeInt64","getValidatorPower","setWrapperField","clearVoteA","hasVoteA","clearVoteB","hasVoteB","setProto3IntField","clearTimestamp","hasTimestamp","conflictingBlock","getConflictingBlock","LightBlock","commonHeight","byzantineValidatorsList","toObjectList","getByzantineValidatorsList","Validator","setConflictingBlock","setCommonHeight","addByzantineValidators","getCommonHeight","length","writeRepeatedMessage","clearConflictingBlock","hasConflictingBlock","getRepeatedWrapperField","setByzantineValidatorsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearByzantineValidatorsList","evidenceList","getEvidenceList","addEvidence","setEvidenceList","clearEvidenceList","exports"],"mappings":"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","sourcesContent":["// source: tendermint/types/evidence.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');\ngoog.object.extend(proto, gogoproto_gogo_pb);\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\nvar tendermint_types_types_pb = require('../../tendermint/types/types_pb.js');\ngoog.object.extend(proto, tendermint_types_types_pb);\nvar tendermint_types_validator_pb = require('../../tendermint/types/validator_pb.js');\ngoog.object.extend(proto, tendermint_types_validator_pb);\ngoog.exportSymbol('proto.tendermint.types.DuplicateVoteEvidence', null, global);\ngoog.exportSymbol('proto.tendermint.types.Evidence', null, global);\ngoog.exportSymbol('proto.tendermint.types.Evidence.SumCase', null, global);\ngoog.exportSymbol('proto.tendermint.types.EvidenceList', null, global);\ngoog.exportSymbol('proto.tendermint.types.LightClientAttackEvidence', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.types.Evidence = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.tendermint.types.Evidence.oneofGroups_);\n};\ngoog.inherits(proto.tendermint.types.Evidence, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.Evidence.displayName = 'proto.tendermint.types.Evidence';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.types.DuplicateVoteEvidence = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.types.DuplicateVoteEvidence, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.DuplicateVoteEvidence.displayName = 'proto.tendermint.types.DuplicateVoteEvidence';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.types.LightClientAttackEvidence = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.types.LightClientAttackEvidence.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.types.LightClientAttackEvidence, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.LightClientAttackEvidence.displayName = 'proto.tendermint.types.LightClientAttackEvidence';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.types.EvidenceList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.types.EvidenceList.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.types.EvidenceList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.EvidenceList.displayName = 'proto.tendermint.types.EvidenceList';\n}\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.tendermint.types.Evidence.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.tendermint.types.Evidence.SumCase = {\n  SUM_NOT_SET: 0,\n  DUPLICATE_VOTE_EVIDENCE: 1,\n  LIGHT_CLIENT_ATTACK_EVIDENCE: 2\n};\n\n/**\n * @return {proto.tendermint.types.Evidence.SumCase}\n */\nproto.tendermint.types.Evidence.prototype.getSumCase = function() {\n  return /** @type {proto.tendermint.types.Evidence.SumCase} */(jspb.Message.computeOneofCase(this, proto.tendermint.types.Evidence.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.types.Evidence.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.types.Evidence.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.types.Evidence} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.Evidence.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    duplicateVoteEvidence: (f = msg.getDuplicateVoteEvidence()) && proto.tendermint.types.DuplicateVoteEvidence.toObject(includeInstance, f),\n    lightClientAttackEvidence: (f = msg.getLightClientAttackEvidence()) && proto.tendermint.types.LightClientAttackEvidence.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.Evidence}\n */\nproto.tendermint.types.Evidence.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.Evidence;\n  return proto.tendermint.types.Evidence.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.Evidence} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.Evidence}\n */\nproto.tendermint.types.Evidence.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.types.DuplicateVoteEvidence;\n      reader.readMessage(value,proto.tendermint.types.DuplicateVoteEvidence.deserializeBinaryFromReader);\n      msg.setDuplicateVoteEvidence(value);\n      break;\n    case 2:\n      var value = new proto.tendermint.types.LightClientAttackEvidence;\n      reader.readMessage(value,proto.tendermint.types.LightClientAttackEvidence.deserializeBinaryFromReader);\n      msg.setLightClientAttackEvidence(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.types.Evidence.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.Evidence.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.Evidence} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.Evidence.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDuplicateVoteEvidence();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.tendermint.types.DuplicateVoteEvidence.serializeBinaryToWriter\n    );\n  }\n  f = message.getLightClientAttackEvidence();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.tendermint.types.LightClientAttackEvidence.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional DuplicateVoteEvidence duplicate_vote_evidence = 1;\n * @return {?proto.tendermint.types.DuplicateVoteEvidence}\n */\nproto.tendermint.types.Evidence.prototype.getDuplicateVoteEvidence = function() {\n  return /** @type{?proto.tendermint.types.DuplicateVoteEvidence} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.types.DuplicateVoteEvidence, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.types.DuplicateVoteEvidence|undefined} value\n * @return {!proto.tendermint.types.Evidence} returns this\n*/\nproto.tendermint.types.Evidence.prototype.setDuplicateVoteEvidence = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.tendermint.types.Evidence.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.Evidence} returns this\n */\nproto.tendermint.types.Evidence.prototype.clearDuplicateVoteEvidence = function() {\n  return this.setDuplicateVoteEvidence(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.types.Evidence.prototype.hasDuplicateVoteEvidence = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional LightClientAttackEvidence light_client_attack_evidence = 2;\n * @return {?proto.tendermint.types.LightClientAttackEvidence}\n */\nproto.tendermint.types.Evidence.prototype.getLightClientAttackEvidence = function() {\n  return /** @type{?proto.tendermint.types.LightClientAttackEvidence} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.types.LightClientAttackEvidence, 2));\n};\n\n\n/**\n * @param {?proto.tendermint.types.LightClientAttackEvidence|undefined} value\n * @return {!proto.tendermint.types.Evidence} returns this\n*/\nproto.tendermint.types.Evidence.prototype.setLightClientAttackEvidence = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.tendermint.types.Evidence.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.Evidence} returns this\n */\nproto.tendermint.types.Evidence.prototype.clearLightClientAttackEvidence = function() {\n  return this.setLightClientAttackEvidence(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.types.Evidence.prototype.hasLightClientAttackEvidence = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.types.DuplicateVoteEvidence.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.types.DuplicateVoteEvidence} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.DuplicateVoteEvidence.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    voteA: (f = msg.getVoteA()) && tendermint_types_types_pb.Vote.toObject(includeInstance, f),\n    voteB: (f = msg.getVoteB()) && tendermint_types_types_pb.Vote.toObject(includeInstance, f),\n    totalVotingPower: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    validatorPower: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.DuplicateVoteEvidence}\n */\nproto.tendermint.types.DuplicateVoteEvidence.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.DuplicateVoteEvidence;\n  return proto.tendermint.types.DuplicateVoteEvidence.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.DuplicateVoteEvidence} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.DuplicateVoteEvidence}\n */\nproto.tendermint.types.DuplicateVoteEvidence.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new tendermint_types_types_pb.Vote;\n      reader.readMessage(value,tendermint_types_types_pb.Vote.deserializeBinaryFromReader);\n      msg.setVoteA(value);\n      break;\n    case 2:\n      var value = new tendermint_types_types_pb.Vote;\n      reader.readMessage(value,tendermint_types_types_pb.Vote.deserializeBinaryFromReader);\n      msg.setVoteB(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalVotingPower(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValidatorPower(value);\n      break;\n    case 5:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.DuplicateVoteEvidence.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.DuplicateVoteEvidence} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.DuplicateVoteEvidence.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVoteA();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      tendermint_types_types_pb.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getVoteB();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      tendermint_types_types_pb.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotalVotingPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getValidatorPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Vote vote_a = 1;\n * @return {?proto.tendermint.types.Vote}\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.getVoteA = function() {\n  return /** @type{?proto.tendermint.types.Vote} */ (\n    jspb.Message.getWrapperField(this, tendermint_types_types_pb.Vote, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.types.Vote|undefined} value\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n*/\nproto.tendermint.types.DuplicateVoteEvidence.prototype.setVoteA = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.clearVoteA = function() {\n  return this.setVoteA(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.hasVoteA = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Vote vote_b = 2;\n * @return {?proto.tendermint.types.Vote}\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.getVoteB = function() {\n  return /** @type{?proto.tendermint.types.Vote} */ (\n    jspb.Message.getWrapperField(this, tendermint_types_types_pb.Vote, 2));\n};\n\n\n/**\n * @param {?proto.tendermint.types.Vote|undefined} value\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n*/\nproto.tendermint.types.DuplicateVoteEvidence.prototype.setVoteB = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.clearVoteB = function() {\n  return this.setVoteB(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.hasVoteB = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 total_voting_power = 3;\n * @return {number}\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.getTotalVotingPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.setTotalVotingPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 validator_power = 4;\n * @return {number}\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.getValidatorPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.setValidatorPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp timestamp = 5;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.getTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));\n};\n\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n*/\nproto.tendermint.types.DuplicateVoteEvidence.prototype.setTimestamp = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.DuplicateVoteEvidence} returns this\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.clearTimestamp = function() {\n  return this.setTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.types.DuplicateVoteEvidence.prototype.hasTimestamp = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.types.LightClientAttackEvidence.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.types.LightClientAttackEvidence.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.types.LightClientAttackEvidence} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.LightClientAttackEvidence.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    conflictingBlock: (f = msg.getConflictingBlock()) && tendermint_types_types_pb.LightBlock.toObject(includeInstance, f),\n    commonHeight: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    byzantineValidatorsList: jspb.Message.toObjectList(msg.getByzantineValidatorsList(),\n    tendermint_types_validator_pb.Validator.toObject, includeInstance),\n    totalVotingPower: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.LightClientAttackEvidence}\n */\nproto.tendermint.types.LightClientAttackEvidence.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.LightClientAttackEvidence;\n  return proto.tendermint.types.LightClientAttackEvidence.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.LightClientAttackEvidence} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.LightClientAttackEvidence}\n */\nproto.tendermint.types.LightClientAttackEvidence.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new tendermint_types_types_pb.LightBlock;\n      reader.readMessage(value,tendermint_types_types_pb.LightBlock.deserializeBinaryFromReader);\n      msg.setConflictingBlock(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCommonHeight(value);\n      break;\n    case 3:\n      var value = new tendermint_types_validator_pb.Validator;\n      reader.readMessage(value,tendermint_types_validator_pb.Validator.deserializeBinaryFromReader);\n      msg.addByzantineValidators(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalVotingPower(value);\n      break;\n    case 5:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.LightClientAttackEvidence.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.LightClientAttackEvidence} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.LightClientAttackEvidence.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getConflictingBlock();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      tendermint_types_types_pb.LightBlock.serializeBinaryToWriter\n    );\n  }\n  f = message.getCommonHeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getByzantineValidatorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      tendermint_types_validator_pb.Validator.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotalVotingPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional LightBlock conflicting_block = 1;\n * @return {?proto.tendermint.types.LightBlock}\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.getConflictingBlock = function() {\n  return /** @type{?proto.tendermint.types.LightBlock} */ (\n    jspb.Message.getWrapperField(this, tendermint_types_types_pb.LightBlock, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.types.LightBlock|undefined} value\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n*/\nproto.tendermint.types.LightClientAttackEvidence.prototype.setConflictingBlock = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.clearConflictingBlock = function() {\n  return this.setConflictingBlock(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.hasConflictingBlock = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 common_height = 2;\n * @return {number}\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.getCommonHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.setCommonHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * repeated Validator byzantine_validators = 3;\n * @return {!Array<!proto.tendermint.types.Validator>}\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.getByzantineValidatorsList = function() {\n  return /** @type{!Array<!proto.tendermint.types.Validator>} */ (\n    jspb.Message.getRepeatedWrapperField(this, tendermint_types_validator_pb.Validator, 3));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.types.Validator>} value\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n*/\nproto.tendermint.types.LightClientAttackEvidence.prototype.setByzantineValidatorsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.tendermint.types.Validator=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.types.Validator}\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.addByzantineValidators = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tendermint.types.Validator, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.clearByzantineValidatorsList = function() {\n  return this.setByzantineValidatorsList([]);\n};\n\n\n/**\n * optional int64 total_voting_power = 4;\n * @return {number}\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.getTotalVotingPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.setTotalVotingPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp timestamp = 5;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.getTimestamp = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));\n};\n\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n*/\nproto.tendermint.types.LightClientAttackEvidence.prototype.setTimestamp = function(value) {\n  return jspb.Message.setWrapperField(this, 5, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.LightClientAttackEvidence} returns this\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.clearTimestamp = function() {\n  return this.setTimestamp(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.types.LightClientAttackEvidence.prototype.hasTimestamp = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.types.EvidenceList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.types.EvidenceList.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.types.EvidenceList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.types.EvidenceList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.EvidenceList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    evidenceList: jspb.Message.toObjectList(msg.getEvidenceList(),\n    proto.tendermint.types.Evidence.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.EvidenceList}\n */\nproto.tendermint.types.EvidenceList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.EvidenceList;\n  return proto.tendermint.types.EvidenceList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.EvidenceList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.EvidenceList}\n */\nproto.tendermint.types.EvidenceList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.types.Evidence;\n      reader.readMessage(value,proto.tendermint.types.Evidence.deserializeBinaryFromReader);\n      msg.addEvidence(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.types.EvidenceList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.EvidenceList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.EvidenceList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.EvidenceList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEvidenceList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.tendermint.types.Evidence.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Evidence evidence = 1;\n * @return {!Array<!proto.tendermint.types.Evidence>}\n */\nproto.tendermint.types.EvidenceList.prototype.getEvidenceList = function() {\n  return /** @type{!Array<!proto.tendermint.types.Evidence>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.types.Evidence, 1));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.types.Evidence>} value\n * @return {!proto.tendermint.types.EvidenceList} returns this\n*/\nproto.tendermint.types.EvidenceList.prototype.setEvidenceList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.tendermint.types.Evidence=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.types.Evidence}\n */\nproto.tendermint.types.EvidenceList.prototype.addEvidence = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tendermint.types.Evidence, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.types.EvidenceList} returns this\n */\nproto.tendermint.types.EvidenceList.prototype.clearEvidenceList = function() {\n  return this.setEvidenceList([]);\n};\n\n\ngoog.object.extend(exports, proto.tendermint.types);\n"]},"metadata":{},"sourceType":"script"}