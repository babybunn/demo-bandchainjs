{"ast":null,"code":"var _jsxFileName = \"/Users/pangp/Band/demo-bandchainjs/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./redux/store\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { split, HttpLink } from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = new HttpLink({\n  uri: \"https://graphql-lt4.bandchain.org/v1/graphql\"\n});\nconst wsLink = new WebSocketLink({\n  uri: \"wss://graphql-lt4.bandchain.org/v1/graphql\",\n  options: {\n    reconnect: true\n  }\n});\nconst splitLink = split(({\n  query\n}) => {\n  const definition = getMainDefinition(query);\n  return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n}, wsLink, httpLink);\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache()\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/src/index.js"],"names":["React","ReactDOM","Provider","App","reportWebVitals","store","WebSocketLink","split","HttpLink","getMainDefinition","ApolloClient","InMemoryCache","ApolloProvider","httpLink","uri","wsLink","options","reconnect","splitLink","query","definition","kind","operation","client","link","cache","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,gBAAhC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AAEA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,cAAtC,QAA4D,gBAA5D;;AAEA,MAAMC,QAAQ,GAAG,IAAIL,QAAJ,CAAa;AAC5BM,EAAAA,GAAG,EAAE;AADuB,CAAb,CAAjB;AAIA,MAAMC,MAAM,GAAG,IAAIT,aAAJ,CAAkB;AAC/BQ,EAAAA,GAAG,EAAE,4CAD0B;AAE/BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ;AAFsB,CAAlB,CAAf;AAOA,MAAMC,SAAS,GAAGX,KAAK,CACrB,CAAC;AAAEY,EAAAA;AAAF,CAAD,KAAe;AACb,QAAMC,UAAU,GAAGX,iBAAiB,CAACU,KAAD,CAApC;AACA,SAAOC,UAAU,CAACC,IAAX,KAAoB,qBAApB,IAA6CD,UAAU,CAACE,SAAX,KAAyB,cAA7E;AACD,CAJoB,EAKrBP,MALqB,EAMrBF,QANqB,CAAvB;AASA,MAAMU,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,EAAAA,IAAI,EAAEN,SADwB;AAE9BO,EAAAA,KAAK,EAAE,IAAId,aAAJ;AAFuB,CAAjB,CAAf;AAKAV,QAAQ,CAACyB,MAAT,eACE,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEH,MAAxB;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAElB,KAAjB;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEsB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAxB,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./redux/store\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\nimport { split, HttpLink } from \"@apollo/client\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\n\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst httpLink = new HttpLink({\n  uri: \"https://graphql-lt4.bandchain.org/v1/graphql\",\n});\n\nconst wsLink = new WebSocketLink({\n  uri: \"wss://graphql-lt4.bandchain.org/v1/graphql\",\n  options: {\n    reconnect: true,\n  },\n});\n\nconst splitLink = split(\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return definition.kind === \"OperationDefinition\" && definition.operation === \"subscription\";\n  },\n  wsLink,\n  httpLink\n);\n\nconst client = new ApolloClient({\n  link: splitLink,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}