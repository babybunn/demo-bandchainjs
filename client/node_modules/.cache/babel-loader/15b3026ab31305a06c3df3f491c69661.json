{"ast":null,"code":"// source: cosmos/base/query/v1beta1/pagination.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.cosmos.base.query.v1beta1.PageRequest', null, global);\ngoog.exportSymbol('proto.cosmos.base.query.v1beta1.PageResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.cosmos.base.query.v1beta1.PageRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.cosmos.base.query.v1beta1.PageRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.query.v1beta1.PageRequest.displayName = 'proto.cosmos.base.query.v1beta1.PageRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.cosmos.base.query.v1beta1.PageResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.cosmos.base.query.v1beta1.PageResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.query.v1beta1.PageResponse.displayName = 'proto.cosmos.base.query.v1beta1.PageResponse';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.cosmos.base.query.v1beta1.PageRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.cosmos.base.query.v1beta1.PageRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.cosmos.base.query.v1beta1.PageRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.cosmos.base.query.v1beta1.PageRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      key: msg.getKey_asB64(),\n      offset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      limit: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      countTotal: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n      reverse: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.query.v1beta1.PageRequest();\n  return proto.cosmos.base.query.v1beta1.PageRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.query.v1beta1.PageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setKey(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setOffset(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setLimit(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setCountTotal(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setReverse(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.query.v1beta1.PageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.query.v1beta1.PageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getKey_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getOffset();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getLimit();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getCountTotal();\n\n  if (f) {\n    writer.writeBool(4, f);\n  }\n\n  f = message.getReverse();\n\n  if (f) {\n    writer.writeBool(5, f);\n  }\n};\n/**\n * optional bytes key = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getKey = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes key = 1;\n * This is a type-conversion wrapper around `getKey()`\n * @return {string}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getKey_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getKey())\n  );\n};\n/**\n * optional bytes key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getKey()`\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getKey_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getKey())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest} returns this\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.setKey = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional uint64 offset = 2;\n * @return {number}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getOffset = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest} returns this\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.setOffset = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 limit = 3;\n * @return {number}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getLimit = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest} returns this\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.setLimit = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional bool count_total = 4;\n * @return {boolean}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getCountTotal = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 4, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest} returns this\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.setCountTotal = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n/**\n * optional bool reverse = 5;\n * @return {boolean}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getReverse = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 5, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest} returns this\n */\n\n\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.setReverse = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.cosmos.base.query.v1beta1.PageResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.cosmos.base.query.v1beta1.PageResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.cosmos.base.query.v1beta1.PageResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.cosmos.base.query.v1beta1.PageResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      nextKey: msg.getNextKey_asB64(),\n      total: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.query.v1beta1.PageResponse}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.query.v1beta1.PageResponse();\n  return proto.cosmos.base.query.v1beta1.PageResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.query.v1beta1.PageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.query.v1beta1.PageResponse}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setNextKey(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setTotal(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.query.v1beta1.PageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.query.v1beta1.PageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.cosmos.base.query.v1beta1.PageResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getNextKey_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getTotal();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n};\n/**\n * optional bytes next_key = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.getNextKey = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes next_key = 1;\n * This is a type-conversion wrapper around `getNextKey()`\n * @return {string}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.getNextKey_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getNextKey())\n  );\n};\n/**\n * optional bytes next_key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNextKey()`\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.getNextKey_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getNextKey())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.cosmos.base.query.v1beta1.PageResponse} returns this\n */\n\n\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.setNextKey = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional uint64 total = 2;\n * @return {number}\n */\n\n\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.getTotal = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.cosmos.base.query.v1beta1.PageResponse} returns this\n */\n\n\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.setTotal = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\ngoog.object.extend(exports, proto.cosmos.base.query.v1beta1);","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/client/node_modules/@bandprotocol/bandchain.js/proto/cosmos/base/query/v1beta1/pagination_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","cosmos","base","query","v1beta1","PageRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","PageResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","key","getKey_asB64","offset","getFieldWithDefault","limit","countTotal","getBooleanFieldWithDefault","reverse","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readBytes","setKey","readUint64","setOffset","setLimit","readBool","setCountTotal","setReverse","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getKey_asU8","length","writeBytes","getOffset","writeUint64","getLimit","getCountTotal","writeBool","getReverse","getKey","bytesAsB64","bytesAsU8","setProto3BytesField","setProto3IntField","setProto3BooleanField","nextKey","getNextKey_asB64","total","setNextKey","setTotal","getNextKey_asU8","getTotal","getNextKey","object","extend","exports"],"mappings":"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","sourcesContent":["// source: cosmos/base/query/v1beta1/pagination.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.cosmos.base.query.v1beta1.PageRequest', null, global);\ngoog.exportSymbol('proto.cosmos.base.query.v1beta1.PageResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.cosmos.base.query.v1beta1.PageRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.cosmos.base.query.v1beta1.PageRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.query.v1beta1.PageRequest.displayName = 'proto.cosmos.base.query.v1beta1.PageRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.cosmos.base.query.v1beta1.PageResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.cosmos.base.query.v1beta1.PageResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.query.v1beta1.PageResponse.displayName = 'proto.cosmos.base.query.v1beta1.PageResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.cosmos.base.query.v1beta1.PageRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.cosmos.base.query.v1beta1.PageRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.query.v1beta1.PageRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    key: msg.getKey_asB64(),\n    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    countTotal: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),\n    reverse: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest}\n */\nproto.cosmos.base.query.v1beta1.PageRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.query.v1beta1.PageRequest;\n  return proto.cosmos.base.query.v1beta1.PageRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.query.v1beta1.PageRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest}\n */\nproto.cosmos.base.query.v1beta1.PageRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setKey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setLimit(value);\n      break;\n    case 4:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setCountTotal(value);\n      break;\n    case 5:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setReverse(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.query.v1beta1.PageRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.query.v1beta1.PageRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.query.v1beta1.PageRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOffset();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getCountTotal();\n  if (f) {\n    writer.writeBool(\n      4,\n      f\n    );\n  }\n  f = message.getReverse();\n  if (f) {\n    writer.writeBool(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes key = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes key = 1;\n * This is a type-conversion wrapper around `getKey()`\n * @return {string}\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getKey()));\n};\n\n\n/**\n * optional bytes key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getKey()`\n * @return {!Uint8Array}\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest} returns this\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.setKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 offset = 2;\n * @return {number}\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest} returns this\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.setOffset = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 limit = 3;\n * @return {number}\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest} returns this\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.setLimit = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bool count_total = 4;\n * @return {boolean}\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getCountTotal = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest} returns this\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.setCountTotal = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 4, value);\n};\n\n\n/**\n * optional bool reverse = 5;\n * @return {boolean}\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.getReverse = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.cosmos.base.query.v1beta1.PageRequest} returns this\n */\nproto.cosmos.base.query.v1beta1.PageRequest.prototype.setReverse = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.cosmos.base.query.v1beta1.PageResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.cosmos.base.query.v1beta1.PageResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.query.v1beta1.PageResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nextKey: msg.getNextKey_asB64(),\n    total: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.query.v1beta1.PageResponse}\n */\nproto.cosmos.base.query.v1beta1.PageResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.query.v1beta1.PageResponse;\n  return proto.cosmos.base.query.v1beta1.PageResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.query.v1beta1.PageResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.query.v1beta1.PageResponse}\n */\nproto.cosmos.base.query.v1beta1.PageResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNextKey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setTotal(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.query.v1beta1.PageResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.query.v1beta1.PageResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.query.v1beta1.PageResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNextKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getTotal();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes next_key = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.getNextKey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes next_key = 1;\n * This is a type-conversion wrapper around `getNextKey()`\n * @return {string}\n */\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.getNextKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNextKey()));\n};\n\n\n/**\n * optional bytes next_key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNextKey()`\n * @return {!Uint8Array}\n */\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.getNextKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNextKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.cosmos.base.query.v1beta1.PageResponse} returns this\n */\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.setNextKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional uint64 total = 2;\n * @return {number}\n */\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.getTotal = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.cosmos.base.query.v1beta1.PageResponse} returns this\n */\nproto.cosmos.base.query.v1beta1.PageResponse.prototype.setTotal = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto.cosmos.base.query.v1beta1);\n"]},"metadata":{},"sourceType":"script"}