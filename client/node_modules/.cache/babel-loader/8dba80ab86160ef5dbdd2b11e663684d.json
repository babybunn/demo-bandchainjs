{"ast":null,"code":"// source: oracle/v1/oracle.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');\n\ngoog.object.extend(proto, gogoproto_gogo_pb);\n\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\n\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\n\nvar google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');\n\ngoog.object.extend(proto, google_protobuf_any_pb);\n\nvar cosmos_base_v1beta1_coin_pb = require('../../cosmos/base/v1beta1/coin_pb.js');\n\ngoog.object.extend(proto, cosmos_base_v1beta1_coin_pb);\ngoog.exportSymbol('proto.oracle.v1.ActiveValidator', null, global);\ngoog.exportSymbol('proto.oracle.v1.DataSource', null, global);\ngoog.exportSymbol('proto.oracle.v1.IBCChannel', null, global);\ngoog.exportSymbol('proto.oracle.v1.OracleRequestPacketAcknowledgement', null, global);\ngoog.exportSymbol('proto.oracle.v1.OracleRequestPacketData', null, global);\ngoog.exportSymbol('proto.oracle.v1.OracleResponsePacketData', null, global);\ngoog.exportSymbol('proto.oracle.v1.OracleScript', null, global);\ngoog.exportSymbol('proto.oracle.v1.Params', null, global);\ngoog.exportSymbol('proto.oracle.v1.PendingResolveList', null, global);\ngoog.exportSymbol('proto.oracle.v1.PriceResult', null, global);\ngoog.exportSymbol('proto.oracle.v1.RawReport', null, global);\ngoog.exportSymbol('proto.oracle.v1.RawRequest', null, global);\ngoog.exportSymbol('proto.oracle.v1.Report', null, global);\ngoog.exportSymbol('proto.oracle.v1.Request', null, global);\ngoog.exportSymbol('proto.oracle.v1.RequestVerification', null, global);\ngoog.exportSymbol('proto.oracle.v1.ResolveStatus', null, global);\ngoog.exportSymbol('proto.oracle.v1.Result', null, global);\ngoog.exportSymbol('proto.oracle.v1.ValidatorStatus', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.oracle.v1.DataSource = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.oracle.v1.DataSource.repeatedFields_, null);\n};\n\ngoog.inherits(proto.oracle.v1.DataSource, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.DataSource.displayName = 'proto.oracle.v1.DataSource';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.OracleScript = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.OracleScript, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.OracleScript.displayName = 'proto.oracle.v1.OracleScript';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.RawRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.RawRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.RawRequest.displayName = 'proto.oracle.v1.RawRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.RawReport = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.RawReport, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.RawReport.displayName = 'proto.oracle.v1.RawReport';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.Request = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.oracle.v1.Request.repeatedFields_, null);\n};\n\ngoog.inherits(proto.oracle.v1.Request, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.Request.displayName = 'proto.oracle.v1.Request';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.Report = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.oracle.v1.Report.repeatedFields_, null);\n};\n\ngoog.inherits(proto.oracle.v1.Report, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.Report.displayName = 'proto.oracle.v1.Report';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.OracleRequestPacketData = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.oracle.v1.OracleRequestPacketData.repeatedFields_, null);\n};\n\ngoog.inherits(proto.oracle.v1.OracleRequestPacketData, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.OracleRequestPacketData.displayName = 'proto.oracle.v1.OracleRequestPacketData';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.OracleRequestPacketAcknowledgement = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.OracleRequestPacketAcknowledgement, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.OracleRequestPacketAcknowledgement.displayName = 'proto.oracle.v1.OracleRequestPacketAcknowledgement';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.OracleResponsePacketData = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.OracleResponsePacketData, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.OracleResponsePacketData.displayName = 'proto.oracle.v1.OracleResponsePacketData';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.Result = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.Result, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.Result.displayName = 'proto.oracle.v1.Result';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.ValidatorStatus = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.ValidatorStatus, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.ValidatorStatus.displayName = 'proto.oracle.v1.ValidatorStatus';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.ActiveValidator = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.ActiveValidator, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.ActiveValidator.displayName = 'proto.oracle.v1.ActiveValidator';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.Params = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.Params, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.Params.displayName = 'proto.oracle.v1.Params';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.PendingResolveList = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.oracle.v1.PendingResolveList.repeatedFields_, null);\n};\n\ngoog.inherits(proto.oracle.v1.PendingResolveList, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.PendingResolveList.displayName = 'proto.oracle.v1.PendingResolveList';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.IBCChannel = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.IBCChannel, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.IBCChannel.displayName = 'proto.oracle.v1.IBCChannel';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.RequestVerification = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.RequestVerification, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.RequestVerification.displayName = 'proto.oracle.v1.RequestVerification';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.oracle.v1.PriceResult = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.oracle.v1.PriceResult, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.PriceResult.displayName = 'proto.oracle.v1.PriceResult';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.oracle.v1.DataSource.repeatedFields_ = [6];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.DataSource.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.DataSource.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.DataSource} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.DataSource.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      owner: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      description: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      filename: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      treasury: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      feeList: jspb.Message.toObjectList(msg.getFeeList(), cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.DataSource}\n */\n\n\nproto.oracle.v1.DataSource.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.DataSource();\n  return proto.oracle.v1.DataSource.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.DataSource} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.DataSource}\n */\n\n\nproto.oracle.v1.DataSource.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setOwner(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDescription(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFilename(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTreasury(value);\n        break;\n\n      case 6:\n        var value = new cosmos_base_v1beta1_coin_pb.Coin();\n        reader.readMessage(value, cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);\n        msg.addFee(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.DataSource.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.DataSource.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.DataSource} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.DataSource.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOwner();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getDescription();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getFilename();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getTreasury();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getFeeList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(6, f, cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string owner = 1;\n * @return {string}\n */\n\n\nproto.oracle.v1.DataSource.prototype.getOwner = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.DataSource} returns this\n */\n\n\nproto.oracle.v1.DataSource.prototype.setOwner = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string name = 2;\n * @return {string}\n */\n\n\nproto.oracle.v1.DataSource.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.DataSource} returns this\n */\n\n\nproto.oracle.v1.DataSource.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string description = 3;\n * @return {string}\n */\n\n\nproto.oracle.v1.DataSource.prototype.getDescription = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.DataSource} returns this\n */\n\n\nproto.oracle.v1.DataSource.prototype.setDescription = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string filename = 4;\n * @return {string}\n */\n\n\nproto.oracle.v1.DataSource.prototype.getFilename = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.DataSource} returns this\n */\n\n\nproto.oracle.v1.DataSource.prototype.setFilename = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string treasury = 5;\n * @return {string}\n */\n\n\nproto.oracle.v1.DataSource.prototype.getTreasury = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.DataSource} returns this\n */\n\n\nproto.oracle.v1.DataSource.prototype.setTreasury = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * repeated cosmos.base.v1beta1.Coin fee = 6;\n * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}\n */\n\n\nproto.oracle.v1.DataSource.prototype.getFeeList = function () {\n  return (\n    /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */\n    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 6)\n  );\n};\n/**\n * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value\n * @return {!proto.oracle.v1.DataSource} returns this\n*/\n\n\nproto.oracle.v1.DataSource.prototype.setFeeList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n/**\n * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value\n * @param {number=} opt_index\n * @return {!proto.cosmos.base.v1beta1.Coin}\n */\n\n\nproto.oracle.v1.DataSource.prototype.addFee = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.DataSource} returns this\n */\n\n\nproto.oracle.v1.DataSource.prototype.clearFeeList = function () {\n  return this.setFeeList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.OracleScript.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.OracleScript.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.OracleScript} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.OracleScript.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      owner: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      description: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      filename: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      schema: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      sourceCodeUrl: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.OracleScript}\n */\n\n\nproto.oracle.v1.OracleScript.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.OracleScript();\n  return proto.oracle.v1.OracleScript.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.OracleScript} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.OracleScript}\n */\n\n\nproto.oracle.v1.OracleScript.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setOwner(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setName(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDescription(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFilename(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSchema(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSourceCodeUrl(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.OracleScript.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.OracleScript.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.OracleScript} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.OracleScript.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOwner();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getName();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getDescription();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getFilename();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getSchema();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getSourceCodeUrl();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n};\n/**\n * optional string owner = 1;\n * @return {string}\n */\n\n\nproto.oracle.v1.OracleScript.prototype.getOwner = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\n\n\nproto.oracle.v1.OracleScript.prototype.setOwner = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string name = 2;\n * @return {string}\n */\n\n\nproto.oracle.v1.OracleScript.prototype.getName = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\n\n\nproto.oracle.v1.OracleScript.prototype.setName = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string description = 3;\n * @return {string}\n */\n\n\nproto.oracle.v1.OracleScript.prototype.getDescription = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\n\n\nproto.oracle.v1.OracleScript.prototype.setDescription = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string filename = 4;\n * @return {string}\n */\n\n\nproto.oracle.v1.OracleScript.prototype.getFilename = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\n\n\nproto.oracle.v1.OracleScript.prototype.setFilename = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string schema = 5;\n * @return {string}\n */\n\n\nproto.oracle.v1.OracleScript.prototype.getSchema = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\n\n\nproto.oracle.v1.OracleScript.prototype.setSchema = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string source_code_url = 6;\n * @return {string}\n */\n\n\nproto.oracle.v1.OracleScript.prototype.getSourceCodeUrl = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\n\n\nproto.oracle.v1.OracleScript.prototype.setSourceCodeUrl = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.RawRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.RawRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.RawRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.RawRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      externalId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      dataSourceId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      calldata: msg.getCalldata_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.RawRequest}\n */\n\n\nproto.oracle.v1.RawRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.RawRequest();\n  return proto.oracle.v1.RawRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.RawRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.RawRequest}\n */\n\n\nproto.oracle.v1.RawRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setExternalId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setDataSourceId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setCalldata(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.RawRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.RawRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.RawRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.RawRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getExternalId();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getDataSourceId();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getCalldata_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional uint64 external_id = 1;\n * @return {number}\n */\n\n\nproto.oracle.v1.RawRequest.prototype.getExternalId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RawRequest} returns this\n */\n\n\nproto.oracle.v1.RawRequest.prototype.setExternalId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 data_source_id = 2;\n * @return {number}\n */\n\n\nproto.oracle.v1.RawRequest.prototype.getDataSourceId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RawRequest} returns this\n */\n\n\nproto.oracle.v1.RawRequest.prototype.setDataSourceId = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional bytes calldata = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.oracle.v1.RawRequest.prototype.getCalldata = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes calldata = 3;\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {string}\n */\n\n\nproto.oracle.v1.RawRequest.prototype.getCalldata_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getCalldata())\n  );\n};\n/**\n * optional bytes calldata = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.RawRequest.prototype.getCalldata_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getCalldata())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.RawRequest} returns this\n */\n\n\nproto.oracle.v1.RawRequest.prototype.setCalldata = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.RawReport.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.RawReport.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.RawReport} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.RawReport.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      externalId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      exitCode: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      data: msg.getData_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.RawReport}\n */\n\n\nproto.oracle.v1.RawReport.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.RawReport();\n  return proto.oracle.v1.RawReport.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.RawReport} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.RawReport}\n */\n\n\nproto.oracle.v1.RawReport.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setExternalId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setExitCode(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setData(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.RawReport.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.RawReport.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.RawReport} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.RawReport.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getExternalId();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getExitCode();\n\n  if (f !== 0) {\n    writer.writeUint32(2, f);\n  }\n\n  f = message.getData_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n};\n/**\n * optional uint64 external_id = 1;\n * @return {number}\n */\n\n\nproto.oracle.v1.RawReport.prototype.getExternalId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RawReport} returns this\n */\n\n\nproto.oracle.v1.RawReport.prototype.setExternalId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint32 exit_code = 2;\n * @return {number}\n */\n\n\nproto.oracle.v1.RawReport.prototype.getExitCode = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RawReport} returns this\n */\n\n\nproto.oracle.v1.RawReport.prototype.setExitCode = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional bytes data = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.oracle.v1.RawReport.prototype.getData = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes data = 3;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\n\n\nproto.oracle.v1.RawReport.prototype.getData_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getData())\n  );\n};\n/**\n * optional bytes data = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.RawReport.prototype.getData_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getData())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.RawReport} returns this\n */\n\n\nproto.oracle.v1.RawReport.prototype.setData = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.oracle.v1.Request.repeatedFields_ = [3, 8];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.Request.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.Request.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.Request} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.Request.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      oracleScriptId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      calldata: msg.getCalldata_asB64(),\n      requestedValidatorsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,\n      minCount: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      requestHeight: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      requestTime: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      clientId: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n      rawRequestsList: jspb.Message.toObjectList(msg.getRawRequestsList(), proto.oracle.v1.RawRequest.toObject, includeInstance),\n      ibcChannel: (f = msg.getIbcChannel()) && proto.oracle.v1.IBCChannel.toObject(includeInstance, f),\n      executeGas: jspb.Message.getFieldWithDefault(msg, 10, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.Request}\n */\n\n\nproto.oracle.v1.Request.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.Request();\n  return proto.oracle.v1.Request.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.Request} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.Request}\n */\n\n\nproto.oracle.v1.Request.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setOracleScriptId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setCalldata(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addRequestedValidators(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setMinCount(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setRequestHeight(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setRequestTime(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setClientId(value);\n        break;\n\n      case 8:\n        var value = new proto.oracle.v1.RawRequest();\n        reader.readMessage(value, proto.oracle.v1.RawRequest.deserializeBinaryFromReader);\n        msg.addRawRequests(value);\n        break;\n\n      case 9:\n        var value = new proto.oracle.v1.IBCChannel();\n        reader.readMessage(value, proto.oracle.v1.IBCChannel.deserializeBinaryFromReader);\n        msg.setIbcChannel(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setExecuteGas(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.Request.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.Request.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.Request} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.Request.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getOracleScriptId();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getCalldata_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n\n  f = message.getRequestedValidatorsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(3, f);\n  }\n\n  f = message.getMinCount();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getRequestHeight();\n\n  if (f !== 0) {\n    writer.writeInt64(5, f);\n  }\n\n  f = message.getRequestTime();\n\n  if (f !== 0) {\n    writer.writeInt64(6, f);\n  }\n\n  f = message.getClientId();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n\n  f = message.getRawRequestsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(8, f, proto.oracle.v1.RawRequest.serializeBinaryToWriter);\n  }\n\n  f = message.getIbcChannel();\n\n  if (f != null) {\n    writer.writeMessage(9, f, proto.oracle.v1.IBCChannel.serializeBinaryToWriter);\n  }\n\n  f = message.getExecuteGas();\n\n  if (f !== 0) {\n    writer.writeUint64(10, f);\n  }\n};\n/**\n * optional uint64 oracle_script_id = 1;\n * @return {number}\n */\n\n\nproto.oracle.v1.Request.prototype.getOracleScriptId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.setOracleScriptId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional bytes calldata = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.oracle.v1.Request.prototype.getCalldata = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes calldata = 2;\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {string}\n */\n\n\nproto.oracle.v1.Request.prototype.getCalldata_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getCalldata())\n  );\n};\n/**\n * optional bytes calldata = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.Request.prototype.getCalldata_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getCalldata())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.setCalldata = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * repeated string requested_validators = 3;\n * @return {!Array<string>}\n */\n\n\nproto.oracle.v1.Request.prototype.getRequestedValidatorsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 3)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.setRequestedValidatorsList = function (value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.addRequestedValidators = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.clearRequestedValidatorsList = function () {\n  return this.setRequestedValidatorsList([]);\n};\n/**\n * optional uint64 min_count = 4;\n * @return {number}\n */\n\n\nproto.oracle.v1.Request.prototype.getMinCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.setMinCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional int64 request_height = 5;\n * @return {number}\n */\n\n\nproto.oracle.v1.Request.prototype.getRequestHeight = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.setRequestHeight = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional int64 request_time = 6;\n * @return {number}\n */\n\n\nproto.oracle.v1.Request.prototype.getRequestTime = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.setRequestTime = function (value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n/**\n * optional string client_id = 7;\n * @return {string}\n */\n\n\nproto.oracle.v1.Request.prototype.getClientId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.setClientId = function (value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * repeated RawRequest raw_requests = 8;\n * @return {!Array<!proto.oracle.v1.RawRequest>}\n */\n\n\nproto.oracle.v1.Request.prototype.getRawRequestsList = function () {\n  return (\n    /** @type{!Array<!proto.oracle.v1.RawRequest>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.oracle.v1.RawRequest, 8)\n  );\n};\n/**\n * @param {!Array<!proto.oracle.v1.RawRequest>} value\n * @return {!proto.oracle.v1.Request} returns this\n*/\n\n\nproto.oracle.v1.Request.prototype.setRawRequestsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 8, value);\n};\n/**\n * @param {!proto.oracle.v1.RawRequest=} opt_value\n * @param {number=} opt_index\n * @return {!proto.oracle.v1.RawRequest}\n */\n\n\nproto.oracle.v1.Request.prototype.addRawRequests = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.oracle.v1.RawRequest, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.clearRawRequestsList = function () {\n  return this.setRawRequestsList([]);\n};\n/**\n * optional IBCChannel ibc_channel = 9;\n * @return {?proto.oracle.v1.IBCChannel}\n */\n\n\nproto.oracle.v1.Request.prototype.getIbcChannel = function () {\n  return (\n    /** @type{?proto.oracle.v1.IBCChannel} */\n    jspb.Message.getWrapperField(this, proto.oracle.v1.IBCChannel, 9)\n  );\n};\n/**\n * @param {?proto.oracle.v1.IBCChannel|undefined} value\n * @return {!proto.oracle.v1.Request} returns this\n*/\n\n\nproto.oracle.v1.Request.prototype.setIbcChannel = function (value) {\n  return jspb.Message.setWrapperField(this, 9, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.clearIbcChannel = function () {\n  return this.setIbcChannel(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.oracle.v1.Request.prototype.hasIbcChannel = function () {\n  return jspb.Message.getField(this, 9) != null;\n};\n/**\n * optional uint64 execute_gas = 10;\n * @return {number}\n */\n\n\nproto.oracle.v1.Request.prototype.getExecuteGas = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 10, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Request} returns this\n */\n\n\nproto.oracle.v1.Request.prototype.setExecuteGas = function (value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.oracle.v1.Report.repeatedFields_ = [3];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.Report.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.Report.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.Report} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.Report.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      validator: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      inBeforeResolve: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n      rawReportsList: jspb.Message.toObjectList(msg.getRawReportsList(), proto.oracle.v1.RawReport.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.Report}\n */\n\n\nproto.oracle.v1.Report.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.Report();\n  return proto.oracle.v1.Report.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.Report} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.Report}\n */\n\n\nproto.oracle.v1.Report.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setValidator(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setInBeforeResolve(value);\n        break;\n\n      case 3:\n        var value = new proto.oracle.v1.RawReport();\n        reader.readMessage(value, proto.oracle.v1.RawReport.deserializeBinaryFromReader);\n        msg.addRawReports(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.Report.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.Report.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.Report} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.Report.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getValidator();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getInBeforeResolve();\n\n  if (f) {\n    writer.writeBool(2, f);\n  }\n\n  f = message.getRawReportsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(3, f, proto.oracle.v1.RawReport.serializeBinaryToWriter);\n  }\n};\n/**\n * optional string validator = 1;\n * @return {string}\n */\n\n\nproto.oracle.v1.Report.prototype.getValidator = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.Report} returns this\n */\n\n\nproto.oracle.v1.Report.prototype.setValidator = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional bool in_before_resolve = 2;\n * @return {boolean}\n */\n\n\nproto.oracle.v1.Report.prototype.getInBeforeResolve = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 2, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.oracle.v1.Report} returns this\n */\n\n\nproto.oracle.v1.Report.prototype.setInBeforeResolve = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n/**\n * repeated RawReport raw_reports = 3;\n * @return {!Array<!proto.oracle.v1.RawReport>}\n */\n\n\nproto.oracle.v1.Report.prototype.getRawReportsList = function () {\n  return (\n    /** @type{!Array<!proto.oracle.v1.RawReport>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.oracle.v1.RawReport, 3)\n  );\n};\n/**\n * @param {!Array<!proto.oracle.v1.RawReport>} value\n * @return {!proto.oracle.v1.Report} returns this\n*/\n\n\nproto.oracle.v1.Report.prototype.setRawReportsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n/**\n * @param {!proto.oracle.v1.RawReport=} opt_value\n * @param {number=} opt_index\n * @return {!proto.oracle.v1.RawReport}\n */\n\n\nproto.oracle.v1.Report.prototype.addRawReports = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.oracle.v1.RawReport, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.Report} returns this\n */\n\n\nproto.oracle.v1.Report.prototype.clearRawReportsList = function () {\n  return this.setRawReportsList([]);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.repeatedFields_ = [6];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.OracleRequestPacketData.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.OracleRequestPacketData.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.OracleRequestPacketData} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.OracleRequestPacketData.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      clientId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      oracleScriptId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      calldata: msg.getCalldata_asB64(),\n      askCount: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      minCount: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      feeLimitList: jspb.Message.toObjectList(msg.getFeeLimitList(), cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),\n      prepareGas: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      executeGas: jspb.Message.getFieldWithDefault(msg, 8, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.OracleRequestPacketData}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.OracleRequestPacketData();\n  return proto.oracle.v1.OracleRequestPacketData.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.OracleRequestPacketData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.OracleRequestPacketData}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setClientId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setOracleScriptId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setCalldata(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setAskCount(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setMinCount(value);\n        break;\n\n      case 6:\n        var value = new cosmos_base_v1beta1_coin_pb.Coin();\n        reader.readMessage(value, cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);\n        msg.addFeeLimit(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setPrepareGas(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setExecuteGas(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.OracleRequestPacketData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.OracleRequestPacketData} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getClientId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getOracleScriptId();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getCalldata_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n\n  f = message.getAskCount();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getMinCount();\n\n  if (f !== 0) {\n    writer.writeUint64(5, f);\n  }\n\n  f = message.getFeeLimitList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(6, f, cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter);\n  }\n\n  f = message.getPrepareGas();\n\n  if (f !== 0) {\n    writer.writeUint64(7, f);\n  }\n\n  f = message.getExecuteGas();\n\n  if (f !== 0) {\n    writer.writeUint64(8, f);\n  }\n};\n/**\n * optional string client_id = 1;\n * @return {string}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.getClientId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.setClientId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 oracle_script_id = 2;\n * @return {number}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.getOracleScriptId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.setOracleScriptId = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional bytes calldata = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.getCalldata = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes calldata = 3;\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {string}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.getCalldata_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getCalldata())\n  );\n};\n/**\n * optional bytes calldata = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.getCalldata_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getCalldata())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.setCalldata = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * optional uint64 ask_count = 4;\n * @return {number}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.getAskCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.setAskCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional uint64 min_count = 5;\n * @return {number}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.getMinCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.setMinCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * repeated cosmos.base.v1beta1.Coin fee_limit = 6;\n * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.getFeeLimitList = function () {\n  return (\n    /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */\n    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 6)\n  );\n};\n/**\n * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n*/\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.setFeeLimitList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n/**\n * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value\n * @param {number=} opt_index\n * @return {!proto.cosmos.base.v1beta1.Coin}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.addFeeLimit = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.clearFeeLimitList = function () {\n  return this.setFeeLimitList([]);\n};\n/**\n * optional uint64 prepare_gas = 7;\n * @return {number}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.getPrepareGas = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.setPrepareGas = function (value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n/**\n * optional uint64 execute_gas = 8;\n * @return {number}\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.getExecuteGas = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\n\n\nproto.oracle.v1.OracleRequestPacketData.prototype.setExecuteGas = function (value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.OracleRequestPacketAcknowledgement.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.OracleRequestPacketAcknowledgement.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.OracleRequestPacketAcknowledgement} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.OracleRequestPacketAcknowledgement.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      requestId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.OracleRequestPacketAcknowledgement}\n */\n\n\nproto.oracle.v1.OracleRequestPacketAcknowledgement.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.OracleRequestPacketAcknowledgement();\n  return proto.oracle.v1.OracleRequestPacketAcknowledgement.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.OracleRequestPacketAcknowledgement} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.OracleRequestPacketAcknowledgement}\n */\n\n\nproto.oracle.v1.OracleRequestPacketAcknowledgement.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setRequestId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.OracleRequestPacketAcknowledgement.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.OracleRequestPacketAcknowledgement.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.OracleRequestPacketAcknowledgement} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.OracleRequestPacketAcknowledgement.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getRequestId();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n};\n/**\n * optional uint64 request_id = 1;\n * @return {number}\n */\n\n\nproto.oracle.v1.OracleRequestPacketAcknowledgement.prototype.getRequestId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketAcknowledgement} returns this\n */\n\n\nproto.oracle.v1.OracleRequestPacketAcknowledgement.prototype.setRequestId = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.OracleResponsePacketData.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.OracleResponsePacketData.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.OracleResponsePacketData} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.OracleResponsePacketData.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      clientId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      requestId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      ansCount: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      requestTime: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      resolveTime: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      resolveStatus: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      result: msg.getResult_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.OracleResponsePacketData}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.OracleResponsePacketData();\n  return proto.oracle.v1.OracleResponsePacketData.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.OracleResponsePacketData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.OracleResponsePacketData}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setClientId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setRequestId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setAnsCount(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setRequestTime(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setResolveTime(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {!proto.oracle.v1.ResolveStatus} */\n        reader.readEnum();\n        msg.setResolveStatus(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setResult(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.OracleResponsePacketData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.OracleResponsePacketData} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getClientId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getRequestId();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getAnsCount();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getRequestTime();\n\n  if (f !== 0) {\n    writer.writeInt64(4, f);\n  }\n\n  f = message.getResolveTime();\n\n  if (f !== 0) {\n    writer.writeInt64(5, f);\n  }\n\n  f = message.getResolveStatus();\n\n  if (f !== 0.0) {\n    writer.writeEnum(6, f);\n  }\n\n  f = message.getResult_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(7, f);\n  }\n};\n/**\n * optional string client_id = 1;\n * @return {string}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.getClientId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.setClientId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 request_id = 2;\n * @return {number}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.getRequestId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.setRequestId = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 ans_count = 3;\n * @return {number}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.getAnsCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.setAnsCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional int64 request_time = 4;\n * @return {number}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.getRequestTime = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.setRequestTime = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional int64 resolve_time = 5;\n * @return {number}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.getResolveTime = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.setResolveTime = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional ResolveStatus resolve_status = 6;\n * @return {!proto.oracle.v1.ResolveStatus}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.getResolveStatus = function () {\n  return (\n    /** @type {!proto.oracle.v1.ResolveStatus} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/**\n * @param {!proto.oracle.v1.ResolveStatus} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.setResolveStatus = function (value) {\n  return jspb.Message.setProto3EnumField(this, 6, value);\n};\n/**\n * optional bytes result = 7;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.getResult = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * optional bytes result = 7;\n * This is a type-conversion wrapper around `getResult()`\n * @return {string}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.getResult_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getResult())\n  );\n};\n/**\n * optional bytes result = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getResult()`\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.getResult_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getResult())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\n\n\nproto.oracle.v1.OracleResponsePacketData.prototype.setResult = function (value) {\n  return jspb.Message.setProto3BytesField(this, 7, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.Result.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.Result.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.Result} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.Result.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      clientId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      oracleScriptId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      calldata: msg.getCalldata_asB64(),\n      askCount: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      minCount: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      requestId: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      ansCount: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      requestTime: jspb.Message.getFieldWithDefault(msg, 8, 0),\n      resolveTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n      resolveStatus: jspb.Message.getFieldWithDefault(msg, 10, 0),\n      result: msg.getResult_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.Result}\n */\n\n\nproto.oracle.v1.Result.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.Result();\n  return proto.oracle.v1.Result.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.Result} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.Result}\n */\n\n\nproto.oracle.v1.Result.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setClientId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setOracleScriptId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setCalldata(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setAskCount(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setMinCount(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setRequestId(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setAnsCount(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setRequestTime(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setResolveTime(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {!proto.oracle.v1.ResolveStatus} */\n        reader.readEnum();\n        msg.setResolveStatus(value);\n        break;\n\n      case 11:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setResult(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.Result.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.Result.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.Result} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.Result.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getClientId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getOracleScriptId();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getCalldata_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(3, f);\n  }\n\n  f = message.getAskCount();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getMinCount();\n\n  if (f !== 0) {\n    writer.writeUint64(5, f);\n  }\n\n  f = message.getRequestId();\n\n  if (f !== 0) {\n    writer.writeUint64(6, f);\n  }\n\n  f = message.getAnsCount();\n\n  if (f !== 0) {\n    writer.writeUint64(7, f);\n  }\n\n  f = message.getRequestTime();\n\n  if (f !== 0) {\n    writer.writeInt64(8, f);\n  }\n\n  f = message.getResolveTime();\n\n  if (f !== 0) {\n    writer.writeInt64(9, f);\n  }\n\n  f = message.getResolveStatus();\n\n  if (f !== 0.0) {\n    writer.writeEnum(10, f);\n  }\n\n  f = message.getResult_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(11, f);\n  }\n};\n/**\n * optional string client_id = 1;\n * @return {string}\n */\n\n\nproto.oracle.v1.Result.prototype.getClientId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.Result} returns this\n */\n\n\nproto.oracle.v1.Result.prototype.setClientId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 oracle_script_id = 2;\n * @return {number}\n */\n\n\nproto.oracle.v1.Result.prototype.getOracleScriptId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\n\n\nproto.oracle.v1.Result.prototype.setOracleScriptId = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional bytes calldata = 3;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.oracle.v1.Result.prototype.getCalldata = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * optional bytes calldata = 3;\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {string}\n */\n\n\nproto.oracle.v1.Result.prototype.getCalldata_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getCalldata())\n  );\n};\n/**\n * optional bytes calldata = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.Result.prototype.getCalldata_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getCalldata())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.Result} returns this\n */\n\n\nproto.oracle.v1.Result.prototype.setCalldata = function (value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n/**\n * optional uint64 ask_count = 4;\n * @return {number}\n */\n\n\nproto.oracle.v1.Result.prototype.getAskCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\n\n\nproto.oracle.v1.Result.prototype.setAskCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional uint64 min_count = 5;\n * @return {number}\n */\n\n\nproto.oracle.v1.Result.prototype.getMinCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\n\n\nproto.oracle.v1.Result.prototype.setMinCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional uint64 request_id = 6;\n * @return {number}\n */\n\n\nproto.oracle.v1.Result.prototype.getRequestId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\n\n\nproto.oracle.v1.Result.prototype.setRequestId = function (value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n/**\n * optional uint64 ans_count = 7;\n * @return {number}\n */\n\n\nproto.oracle.v1.Result.prototype.getAnsCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\n\n\nproto.oracle.v1.Result.prototype.setAnsCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n/**\n * optional int64 request_time = 8;\n * @return {number}\n */\n\n\nproto.oracle.v1.Result.prototype.getRequestTime = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\n\n\nproto.oracle.v1.Result.prototype.setRequestTime = function (value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n/**\n * optional int64 resolve_time = 9;\n * @return {number}\n */\n\n\nproto.oracle.v1.Result.prototype.getResolveTime = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 9, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\n\n\nproto.oracle.v1.Result.prototype.setResolveTime = function (value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n/**\n * optional ResolveStatus resolve_status = 10;\n * @return {!proto.oracle.v1.ResolveStatus}\n */\n\n\nproto.oracle.v1.Result.prototype.getResolveStatus = function () {\n  return (\n    /** @type {!proto.oracle.v1.ResolveStatus} */\n    jspb.Message.getFieldWithDefault(this, 10, 0)\n  );\n};\n/**\n * @param {!proto.oracle.v1.ResolveStatus} value\n * @return {!proto.oracle.v1.Result} returns this\n */\n\n\nproto.oracle.v1.Result.prototype.setResolveStatus = function (value) {\n  return jspb.Message.setProto3EnumField(this, 10, value);\n};\n/**\n * optional bytes result = 11;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.oracle.v1.Result.prototype.getResult = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 11, \"\")\n  );\n};\n/**\n * optional bytes result = 11;\n * This is a type-conversion wrapper around `getResult()`\n * @return {string}\n */\n\n\nproto.oracle.v1.Result.prototype.getResult_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getResult())\n  );\n};\n/**\n * optional bytes result = 11;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getResult()`\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.Result.prototype.getResult_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getResult())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.Result} returns this\n */\n\n\nproto.oracle.v1.Result.prototype.setResult = function (value) {\n  return jspb.Message.setProto3BytesField(this, 11, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.ValidatorStatus.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.ValidatorStatus.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.ValidatorStatus} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.ValidatorStatus.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      isActive: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n      since: (f = msg.getSince()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.ValidatorStatus}\n */\n\n\nproto.oracle.v1.ValidatorStatus.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.ValidatorStatus();\n  return proto.oracle.v1.ValidatorStatus.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.ValidatorStatus} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.ValidatorStatus}\n */\n\n\nproto.oracle.v1.ValidatorStatus.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setIsActive(value);\n        break;\n\n      case 2:\n        var value = new google_protobuf_timestamp_pb.Timestamp();\n        reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n        msg.setSince(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.ValidatorStatus.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.ValidatorStatus.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.ValidatorStatus} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.ValidatorStatus.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getIsActive();\n\n  if (f) {\n    writer.writeBool(1, f);\n  }\n\n  f = message.getSince();\n\n  if (f != null) {\n    writer.writeMessage(2, f, google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter);\n  }\n};\n/**\n * optional bool is_active = 1;\n * @return {boolean}\n */\n\n\nproto.oracle.v1.ValidatorStatus.prototype.getIsActive = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 1, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.oracle.v1.ValidatorStatus} returns this\n */\n\n\nproto.oracle.v1.ValidatorStatus.prototype.setIsActive = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n/**\n * optional google.protobuf.Timestamp since = 2;\n * @return {?proto.google.protobuf.Timestamp}\n */\n\n\nproto.oracle.v1.ValidatorStatus.prototype.getSince = function () {\n  return (\n    /** @type{?proto.google.protobuf.Timestamp} */\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2)\n  );\n};\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.oracle.v1.ValidatorStatus} returns this\n*/\n\n\nproto.oracle.v1.ValidatorStatus.prototype.setSince = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.oracle.v1.ValidatorStatus} returns this\n */\n\n\nproto.oracle.v1.ValidatorStatus.prototype.clearSince = function () {\n  return this.setSince(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.oracle.v1.ValidatorStatus.prototype.hasSince = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.ActiveValidator.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.ActiveValidator.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.ActiveValidator} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.ActiveValidator.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      power: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.ActiveValidator}\n */\n\n\nproto.oracle.v1.ActiveValidator.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.ActiveValidator();\n  return proto.oracle.v1.ActiveValidator.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.ActiveValidator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.ActiveValidator}\n */\n\n\nproto.oracle.v1.ActiveValidator.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setPower(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.ActiveValidator.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.ActiveValidator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.ActiveValidator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.ActiveValidator.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getPower();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n};\n/**\n * optional string address = 1;\n * @return {string}\n */\n\n\nproto.oracle.v1.ActiveValidator.prototype.getAddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.ActiveValidator} returns this\n */\n\n\nproto.oracle.v1.ActiveValidator.prototype.setAddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 power = 2;\n * @return {number}\n */\n\n\nproto.oracle.v1.ActiveValidator.prototype.getPower = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.ActiveValidator} returns this\n */\n\n\nproto.oracle.v1.ActiveValidator.prototype.setPower = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.Params.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.Params.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.Params} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.Params.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      maxRawRequestCount: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      maxAskCount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      maxCalldataSize: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      maxReportDataSize: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      expirationBlockCount: jspb.Message.getFieldWithDefault(msg, 5, 0),\n      baseOwasmGas: jspb.Message.getFieldWithDefault(msg, 6, 0),\n      perValidatorRequestGas: jspb.Message.getFieldWithDefault(msg, 7, 0),\n      samplingTryCount: jspb.Message.getFieldWithDefault(msg, 8, 0),\n      oracleRewardPercentage: jspb.Message.getFieldWithDefault(msg, 9, 0),\n      inactivePenaltyDuration: jspb.Message.getFieldWithDefault(msg, 10, 0),\n      ibcRequestEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.Params}\n */\n\n\nproto.oracle.v1.Params.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.Params();\n  return proto.oracle.v1.Params.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.Params} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.Params}\n */\n\n\nproto.oracle.v1.Params.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setMaxRawRequestCount(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setMaxAskCount(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setMaxCalldataSize(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setMaxReportDataSize(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setExpirationBlockCount(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBaseOwasmGas(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setPerValidatorRequestGas(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setSamplingTryCount(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setOracleRewardPercentage(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setInactivePenaltyDuration(value);\n        break;\n\n      case 11:\n        var value =\n        /** @type {boolean} */\n        reader.readBool();\n        msg.setIbcRequestEnabled(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.Params.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.Params.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.Params} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.Params.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMaxRawRequestCount();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getMaxAskCount();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getMaxCalldataSize();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getMaxReportDataSize();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getExpirationBlockCount();\n\n  if (f !== 0) {\n    writer.writeUint64(5, f);\n  }\n\n  f = message.getBaseOwasmGas();\n\n  if (f !== 0) {\n    writer.writeUint64(6, f);\n  }\n\n  f = message.getPerValidatorRequestGas();\n\n  if (f !== 0) {\n    writer.writeUint64(7, f);\n  }\n\n  f = message.getSamplingTryCount();\n\n  if (f !== 0) {\n    writer.writeUint64(8, f);\n  }\n\n  f = message.getOracleRewardPercentage();\n\n  if (f !== 0) {\n    writer.writeUint64(9, f);\n  }\n\n  f = message.getInactivePenaltyDuration();\n\n  if (f !== 0) {\n    writer.writeUint64(10, f);\n  }\n\n  f = message.getIbcRequestEnabled();\n\n  if (f) {\n    writer.writeBool(11, f);\n  }\n};\n/**\n * optional uint64 max_raw_request_count = 1;\n * @return {number}\n */\n\n\nproto.oracle.v1.Params.prototype.getMaxRawRequestCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\n\n\nproto.oracle.v1.Params.prototype.setMaxRawRequestCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 max_ask_count = 2;\n * @return {number}\n */\n\n\nproto.oracle.v1.Params.prototype.getMaxAskCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\n\n\nproto.oracle.v1.Params.prototype.setMaxAskCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 max_calldata_size = 3;\n * @return {number}\n */\n\n\nproto.oracle.v1.Params.prototype.getMaxCalldataSize = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\n\n\nproto.oracle.v1.Params.prototype.setMaxCalldataSize = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional uint64 max_report_data_size = 4;\n * @return {number}\n */\n\n\nproto.oracle.v1.Params.prototype.getMaxReportDataSize = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\n\n\nproto.oracle.v1.Params.prototype.setMaxReportDataSize = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional uint64 expiration_block_count = 5;\n * @return {number}\n */\n\n\nproto.oracle.v1.Params.prototype.getExpirationBlockCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\n\n\nproto.oracle.v1.Params.prototype.setExpirationBlockCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * optional uint64 base_owasm_gas = 6;\n * @return {number}\n */\n\n\nproto.oracle.v1.Params.prototype.getBaseOwasmGas = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 6, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\n\n\nproto.oracle.v1.Params.prototype.setBaseOwasmGas = function (value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n/**\n * optional uint64 per_validator_request_gas = 7;\n * @return {number}\n */\n\n\nproto.oracle.v1.Params.prototype.getPerValidatorRequestGas = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 7, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\n\n\nproto.oracle.v1.Params.prototype.setPerValidatorRequestGas = function (value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n/**\n * optional uint64 sampling_try_count = 8;\n * @return {number}\n */\n\n\nproto.oracle.v1.Params.prototype.getSamplingTryCount = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 8, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\n\n\nproto.oracle.v1.Params.prototype.setSamplingTryCount = function (value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n/**\n * optional uint64 oracle_reward_percentage = 9;\n * @return {number}\n */\n\n\nproto.oracle.v1.Params.prototype.getOracleRewardPercentage = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 9, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\n\n\nproto.oracle.v1.Params.prototype.setOracleRewardPercentage = function (value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n/**\n * optional uint64 inactive_penalty_duration = 10;\n * @return {number}\n */\n\n\nproto.oracle.v1.Params.prototype.getInactivePenaltyDuration = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 10, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\n\n\nproto.oracle.v1.Params.prototype.setInactivePenaltyDuration = function (value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n/**\n * optional bool ibc_request_enabled = 11;\n * @return {boolean}\n */\n\n\nproto.oracle.v1.Params.prototype.getIbcRequestEnabled = function () {\n  return (\n    /** @type {boolean} */\n    jspb.Message.getBooleanFieldWithDefault(this, 11, false)\n  );\n};\n/**\n * @param {boolean} value\n * @return {!proto.oracle.v1.Params} returns this\n */\n\n\nproto.oracle.v1.Params.prototype.setIbcRequestEnabled = function (value) {\n  return jspb.Message.setProto3BooleanField(this, 11, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.oracle.v1.PendingResolveList.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.PendingResolveList.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.PendingResolveList.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.PendingResolveList} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.PendingResolveList.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      requestIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.PendingResolveList}\n */\n\n\nproto.oracle.v1.PendingResolveList.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.PendingResolveList();\n  return proto.oracle.v1.PendingResolveList.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.PendingResolveList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.PendingResolveList}\n */\n\n\nproto.oracle.v1.PendingResolveList.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var values =\n        /** @type {!Array<number>} */\n        reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()];\n\n        for (var i = 0; i < values.length; i++) {\n          msg.addRequestIds(values[i]);\n        }\n\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.PendingResolveList.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.PendingResolveList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.PendingResolveList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.PendingResolveList.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getRequestIdsList();\n\n  if (f.length > 0) {\n    writer.writePackedUint64(1, f);\n  }\n};\n/**\n * repeated uint64 request_ids = 1;\n * @return {!Array<number>}\n */\n\n\nproto.oracle.v1.PendingResolveList.prototype.getRequestIdsList = function () {\n  return (\n    /** @type {!Array<number>} */\n    jspb.Message.getRepeatedField(this, 1)\n  );\n};\n/**\n * @param {!Array<number>} value\n * @return {!proto.oracle.v1.PendingResolveList} returns this\n */\n\n\nproto.oracle.v1.PendingResolveList.prototype.setRequestIdsList = function (value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.oracle.v1.PendingResolveList} returns this\n */\n\n\nproto.oracle.v1.PendingResolveList.prototype.addRequestIds = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.PendingResolveList} returns this\n */\n\n\nproto.oracle.v1.PendingResolveList.prototype.clearRequestIdsList = function () {\n  return this.setRequestIdsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.IBCChannel.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.IBCChannel.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.IBCChannel} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.IBCChannel.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      portId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      channelId: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.IBCChannel}\n */\n\n\nproto.oracle.v1.IBCChannel.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.IBCChannel();\n  return proto.oracle.v1.IBCChannel.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.IBCChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.IBCChannel}\n */\n\n\nproto.oracle.v1.IBCChannel.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPortId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setChannelId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.IBCChannel.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.IBCChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.IBCChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.IBCChannel.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPortId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getChannelId();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string port_id = 1;\n * @return {string}\n */\n\n\nproto.oracle.v1.IBCChannel.prototype.getPortId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.IBCChannel} returns this\n */\n\n\nproto.oracle.v1.IBCChannel.prototype.setPortId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string channel_id = 2;\n * @return {string}\n */\n\n\nproto.oracle.v1.IBCChannel.prototype.getChannelId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.IBCChannel} returns this\n */\n\n\nproto.oracle.v1.IBCChannel.prototype.setChannelId = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.RequestVerification.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.RequestVerification.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.RequestVerification} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.RequestVerification.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      chainId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      validator: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      requestId: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      externalId: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.RequestVerification}\n */\n\n\nproto.oracle.v1.RequestVerification.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.RequestVerification();\n  return proto.oracle.v1.RequestVerification.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.RequestVerification} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.RequestVerification}\n */\n\n\nproto.oracle.v1.RequestVerification.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setChainId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setValidator(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setRequestId(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setExternalId(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.RequestVerification.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.RequestVerification.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.RequestVerification} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.RequestVerification.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getChainId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getValidator();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getRequestId();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getExternalId();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n};\n/**\n * optional string chain_id = 1;\n * @return {string}\n */\n\n\nproto.oracle.v1.RequestVerification.prototype.getChainId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.RequestVerification} returns this\n */\n\n\nproto.oracle.v1.RequestVerification.prototype.setChainId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string validator = 2;\n * @return {string}\n */\n\n\nproto.oracle.v1.RequestVerification.prototype.getValidator = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.RequestVerification} returns this\n */\n\n\nproto.oracle.v1.RequestVerification.prototype.setValidator = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional uint64 request_id = 3;\n * @return {number}\n */\n\n\nproto.oracle.v1.RequestVerification.prototype.getRequestId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RequestVerification} returns this\n */\n\n\nproto.oracle.v1.RequestVerification.prototype.setRequestId = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional uint64 external_id = 4;\n * @return {number}\n */\n\n\nproto.oracle.v1.RequestVerification.prototype.getExternalId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RequestVerification} returns this\n */\n\n\nproto.oracle.v1.RequestVerification.prototype.setExternalId = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.oracle.v1.PriceResult.prototype.toObject = function (opt_includeInstance) {\n    return proto.oracle.v1.PriceResult.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.oracle.v1.PriceResult} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.oracle.v1.PriceResult.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      symbol: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      multiplier: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      px: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      requestId: jspb.Message.getFieldWithDefault(msg, 4, 0),\n      resolveTime: jspb.Message.getFieldWithDefault(msg, 5, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.PriceResult}\n */\n\n\nproto.oracle.v1.PriceResult.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.PriceResult();\n  return proto.oracle.v1.PriceResult.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.PriceResult} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.PriceResult}\n */\n\n\nproto.oracle.v1.PriceResult.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSymbol(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setMultiplier(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setPx(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setRequestId(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setResolveTime(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.oracle.v1.PriceResult.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.PriceResult.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.PriceResult} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.oracle.v1.PriceResult.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSymbol();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getMultiplier();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getPx();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n\n  f = message.getRequestId();\n\n  if (f !== 0) {\n    writer.writeUint64(4, f);\n  }\n\n  f = message.getResolveTime();\n\n  if (f !== 0) {\n    writer.writeInt64(5, f);\n  }\n};\n/**\n * optional string symbol = 1;\n * @return {string}\n */\n\n\nproto.oracle.v1.PriceResult.prototype.getSymbol = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.PriceResult} returns this\n */\n\n\nproto.oracle.v1.PriceResult.prototype.setSymbol = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional uint64 multiplier = 2;\n * @return {number}\n */\n\n\nproto.oracle.v1.PriceResult.prototype.getMultiplier = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.PriceResult} returns this\n */\n\n\nproto.oracle.v1.PriceResult.prototype.setMultiplier = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 px = 3;\n * @return {number}\n */\n\n\nproto.oracle.v1.PriceResult.prototype.getPx = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.PriceResult} returns this\n */\n\n\nproto.oracle.v1.PriceResult.prototype.setPx = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional uint64 request_id = 4;\n * @return {number}\n */\n\n\nproto.oracle.v1.PriceResult.prototype.getRequestId = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.PriceResult} returns this\n */\n\n\nproto.oracle.v1.PriceResult.prototype.setRequestId = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n/**\n * optional int64 resolve_time = 5;\n * @return {number}\n */\n\n\nproto.oracle.v1.PriceResult.prototype.getResolveTime = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 5, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.PriceResult} returns this\n */\n\n\nproto.oracle.v1.PriceResult.prototype.setResolveTime = function (value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n/**\n * @enum {number}\n */\n\n\nproto.oracle.v1.ResolveStatus = {\n  RESOLVE_STATUS_OPEN_UNSPECIFIED: 0,\n  RESOLVE_STATUS_SUCCESS: 1,\n  RESOLVE_STATUS_FAILURE: 2,\n  RESOLVE_STATUS_EXPIRED: 3\n};\ngoog.object.extend(exports, proto.oracle.v1);","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/client/node_modules/@bandprotocol/bandchain.js/proto/oracle/v1/oracle_pb.js"],"names":["jspb","require","goog","global","Function","gogoproto_gogo_pb","object","extend","proto","google_protobuf_timestamp_pb","google_protobuf_any_pb","cosmos_base_v1beta1_coin_pb","exportSymbol","oracle","v1","DataSource","opt_data","Message","initialize","repeatedFields_","inherits","DEBUG","COMPILED","displayName","OracleScript","RawRequest","RawReport","Request","Report","OracleRequestPacketData","OracleRequestPacketAcknowledgement","OracleResponsePacketData","Result","ValidatorStatus","ActiveValidator","Params","PendingResolveList","IBCChannel","RequestVerification","PriceResult","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","owner","getFieldWithDefault","name","description","filename","treasury","feeList","toObjectList","getFeeList","Coin","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setOwner","setName","setDescription","setFilename","setTreasury","readMessage","addFee","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getOwner","length","writeString","getName","getDescription","getFilename","getTreasury","writeRepeatedMessage","setProto3StringField","getRepeatedWrapperField","setFeeList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","cosmos","base","v1beta1","clearFeeList","schema","sourceCodeUrl","setSchema","setSourceCodeUrl","getSchema","getSourceCodeUrl","externalId","dataSourceId","calldata","getCalldata_asB64","readUint64","setExternalId","setDataSourceId","readBytes","setCalldata","getExternalId","writeUint64","getDataSourceId","getCalldata_asU8","writeBytes","setProto3IntField","getCalldata","bytesAsB64","bytesAsU8","setProto3BytesField","exitCode","data","getData_asB64","readUint32","setExitCode","setData","getExitCode","writeUint32","getData_asU8","getData","oracleScriptId","requestedValidatorsList","getRepeatedField","minCount","requestHeight","requestTime","clientId","rawRequestsList","getRawRequestsList","ibcChannel","getIbcChannel","executeGas","setOracleScriptId","addRequestedValidators","setMinCount","readInt64","setRequestHeight","setRequestTime","setClientId","addRawRequests","setIbcChannel","setExecuteGas","getOracleScriptId","getRequestedValidatorsList","writeRepeatedString","getMinCount","getRequestHeight","writeInt64","getRequestTime","getClientId","writeMessage","getExecuteGas","setRequestedValidatorsList","setField","addToRepeatedField","clearRequestedValidatorsList","setRawRequestsList","clearRawRequestsList","getWrapperField","setWrapperField","clearIbcChannel","hasIbcChannel","getField","validator","inBeforeResolve","getBooleanFieldWithDefault","rawReportsList","getRawReportsList","setValidator","readBool","setInBeforeResolve","addRawReports","getValidator","getInBeforeResolve","writeBool","setProto3BooleanField","setRawReportsList","clearRawReportsList","askCount","feeLimitList","getFeeLimitList","prepareGas","setAskCount","addFeeLimit","setPrepareGas","getAskCount","getPrepareGas","setFeeLimitList","clearFeeLimitList","requestId","setRequestId","getRequestId","ansCount","resolveTime","resolveStatus","result","getResult_asB64","setAnsCount","setResolveTime","readEnum","setResolveStatus","setResult","getAnsCount","getResolveTime","getResolveStatus","writeEnum","getResult_asU8","setProto3EnumField","getResult","isActive","since","getSince","Timestamp","setIsActive","setSince","getIsActive","clearSince","hasSince","address","power","setAddress","setPower","getAddress","getPower","maxRawRequestCount","maxAskCount","maxCalldataSize","maxReportDataSize","expirationBlockCount","baseOwasmGas","perValidatorRequestGas","samplingTryCount","oracleRewardPercentage","inactivePenaltyDuration","ibcRequestEnabled","setMaxRawRequestCount","setMaxAskCount","setMaxCalldataSize","setMaxReportDataSize","setExpirationBlockCount","setBaseOwasmGas","setPerValidatorRequestGas","setSamplingTryCount","setOracleRewardPercentage","setInactivePenaltyDuration","setIbcRequestEnabled","getMaxRawRequestCount","getMaxAskCount","getMaxCalldataSize","getMaxReportDataSize","getExpirationBlockCount","getBaseOwasmGas","getPerValidatorRequestGas","getSamplingTryCount","getOracleRewardPercentage","getInactivePenaltyDuration","getIbcRequestEnabled","requestIdsList","values","isDelimited","readPackedUint64","i","addRequestIds","getRequestIdsList","writePackedUint64","setRequestIdsList","clearRequestIdsList","portId","channelId","setPortId","setChannelId","getPortId","getChannelId","chainId","setChainId","getChainId","symbol","multiplier","px","setSymbol","setMultiplier","setPx","getSymbol","getMultiplier","getPx","ResolveStatus","RESOLVE_STATUS_OPEN_UNSPECIFIED","RESOLVE_STATUS_SUCCESS","RESOLVE_STATUS_FAILURE","RESOLVE_STATUS_EXPIRED","exports"],"mappings":"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","sourcesContent":["// source: oracle/v1/oracle.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');\ngoog.object.extend(proto, gogoproto_gogo_pb);\nvar google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');\ngoog.object.extend(proto, google_protobuf_timestamp_pb);\nvar google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');\ngoog.object.extend(proto, google_protobuf_any_pb);\nvar cosmos_base_v1beta1_coin_pb = require('../../cosmos/base/v1beta1/coin_pb.js');\ngoog.object.extend(proto, cosmos_base_v1beta1_coin_pb);\ngoog.exportSymbol('proto.oracle.v1.ActiveValidator', null, global);\ngoog.exportSymbol('proto.oracle.v1.DataSource', null, global);\ngoog.exportSymbol('proto.oracle.v1.IBCChannel', null, global);\ngoog.exportSymbol('proto.oracle.v1.OracleRequestPacketAcknowledgement', null, global);\ngoog.exportSymbol('proto.oracle.v1.OracleRequestPacketData', null, global);\ngoog.exportSymbol('proto.oracle.v1.OracleResponsePacketData', null, global);\ngoog.exportSymbol('proto.oracle.v1.OracleScript', null, global);\ngoog.exportSymbol('proto.oracle.v1.Params', null, global);\ngoog.exportSymbol('proto.oracle.v1.PendingResolveList', null, global);\ngoog.exportSymbol('proto.oracle.v1.PriceResult', null, global);\ngoog.exportSymbol('proto.oracle.v1.RawReport', null, global);\ngoog.exportSymbol('proto.oracle.v1.RawRequest', null, global);\ngoog.exportSymbol('proto.oracle.v1.Report', null, global);\ngoog.exportSymbol('proto.oracle.v1.Request', null, global);\ngoog.exportSymbol('proto.oracle.v1.RequestVerification', null, global);\ngoog.exportSymbol('proto.oracle.v1.ResolveStatus', null, global);\ngoog.exportSymbol('proto.oracle.v1.Result', null, global);\ngoog.exportSymbol('proto.oracle.v1.ValidatorStatus', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.DataSource = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.oracle.v1.DataSource.repeatedFields_, null);\n};\ngoog.inherits(proto.oracle.v1.DataSource, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.DataSource.displayName = 'proto.oracle.v1.DataSource';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.OracleScript = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.OracleScript, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.OracleScript.displayName = 'proto.oracle.v1.OracleScript';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.RawRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.RawRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.RawRequest.displayName = 'proto.oracle.v1.RawRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.RawReport = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.RawReport, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.RawReport.displayName = 'proto.oracle.v1.RawReport';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.Request = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.oracle.v1.Request.repeatedFields_, null);\n};\ngoog.inherits(proto.oracle.v1.Request, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.Request.displayName = 'proto.oracle.v1.Request';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.Report = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.oracle.v1.Report.repeatedFields_, null);\n};\ngoog.inherits(proto.oracle.v1.Report, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.Report.displayName = 'proto.oracle.v1.Report';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.OracleRequestPacketData = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.oracle.v1.OracleRequestPacketData.repeatedFields_, null);\n};\ngoog.inherits(proto.oracle.v1.OracleRequestPacketData, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.OracleRequestPacketData.displayName = 'proto.oracle.v1.OracleRequestPacketData';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.OracleRequestPacketAcknowledgement = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.OracleRequestPacketAcknowledgement, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.OracleRequestPacketAcknowledgement.displayName = 'proto.oracle.v1.OracleRequestPacketAcknowledgement';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.OracleResponsePacketData = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.OracleResponsePacketData, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.OracleResponsePacketData.displayName = 'proto.oracle.v1.OracleResponsePacketData';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.Result = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.Result, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.Result.displayName = 'proto.oracle.v1.Result';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.ValidatorStatus = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.ValidatorStatus, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.ValidatorStatus.displayName = 'proto.oracle.v1.ValidatorStatus';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.ActiveValidator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.ActiveValidator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.ActiveValidator.displayName = 'proto.oracle.v1.ActiveValidator';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.Params = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.Params, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.Params.displayName = 'proto.oracle.v1.Params';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.PendingResolveList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.oracle.v1.PendingResolveList.repeatedFields_, null);\n};\ngoog.inherits(proto.oracle.v1.PendingResolveList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.PendingResolveList.displayName = 'proto.oracle.v1.PendingResolveList';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.IBCChannel = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.IBCChannel, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.IBCChannel.displayName = 'proto.oracle.v1.IBCChannel';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.RequestVerification = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.RequestVerification, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.RequestVerification.displayName = 'proto.oracle.v1.RequestVerification';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.oracle.v1.PriceResult = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.oracle.v1.PriceResult, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.oracle.v1.PriceResult.displayName = 'proto.oracle.v1.PriceResult';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.oracle.v1.DataSource.repeatedFields_ = [6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.DataSource.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.DataSource.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.DataSource} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.DataSource.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    owner: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    description: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    filename: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    treasury: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    feeList: jspb.Message.toObjectList(msg.getFeeList(),\n    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.DataSource}\n */\nproto.oracle.v1.DataSource.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.DataSource;\n  return proto.oracle.v1.DataSource.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.DataSource} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.DataSource}\n */\nproto.oracle.v1.DataSource.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOwner(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFilename(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTreasury(value);\n      break;\n    case 6:\n      var value = new cosmos_base_v1beta1_coin_pb.Coin;\n      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);\n      msg.addFee(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.DataSource.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.DataSource.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.DataSource} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.DataSource.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwner();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getFilename();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getTreasury();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getFeeList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      6,\n      f,\n      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string owner = 1;\n * @return {string}\n */\nproto.oracle.v1.DataSource.prototype.getOwner = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.DataSource} returns this\n */\nproto.oracle.v1.DataSource.prototype.setOwner = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.oracle.v1.DataSource.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.DataSource} returns this\n */\nproto.oracle.v1.DataSource.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string description = 3;\n * @return {string}\n */\nproto.oracle.v1.DataSource.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.DataSource} returns this\n */\nproto.oracle.v1.DataSource.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string filename = 4;\n * @return {string}\n */\nproto.oracle.v1.DataSource.prototype.getFilename = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.DataSource} returns this\n */\nproto.oracle.v1.DataSource.prototype.setFilename = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string treasury = 5;\n * @return {string}\n */\nproto.oracle.v1.DataSource.prototype.getTreasury = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.DataSource} returns this\n */\nproto.oracle.v1.DataSource.prototype.setTreasury = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * repeated cosmos.base.v1beta1.Coin fee = 6;\n * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}\n */\nproto.oracle.v1.DataSource.prototype.getFeeList = function() {\n  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (\n    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 6));\n};\n\n\n/**\n * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value\n * @return {!proto.oracle.v1.DataSource} returns this\n*/\nproto.oracle.v1.DataSource.prototype.setFeeList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n\n\n/**\n * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value\n * @param {number=} opt_index\n * @return {!proto.cosmos.base.v1beta1.Coin}\n */\nproto.oracle.v1.DataSource.prototype.addFee = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.DataSource} returns this\n */\nproto.oracle.v1.DataSource.prototype.clearFeeList = function() {\n  return this.setFeeList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.OracleScript.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.OracleScript.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.OracleScript} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.OracleScript.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    owner: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    name: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    description: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    filename: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    schema: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    sourceCodeUrl: jspb.Message.getFieldWithDefault(msg, 6, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.OracleScript}\n */\nproto.oracle.v1.OracleScript.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.OracleScript;\n  return proto.oracle.v1.OracleScript.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.OracleScript} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.OracleScript}\n */\nproto.oracle.v1.OracleScript.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setOwner(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDescription(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFilename(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSchema(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSourceCodeUrl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.OracleScript.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.OracleScript.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.OracleScript} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.OracleScript.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwner();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getDescription();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getFilename();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getSchema();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getSourceCodeUrl();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string owner = 1;\n * @return {string}\n */\nproto.oracle.v1.OracleScript.prototype.getOwner = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\nproto.oracle.v1.OracleScript.prototype.setOwner = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string name = 2;\n * @return {string}\n */\nproto.oracle.v1.OracleScript.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\nproto.oracle.v1.OracleScript.prototype.setName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string description = 3;\n * @return {string}\n */\nproto.oracle.v1.OracleScript.prototype.getDescription = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\nproto.oracle.v1.OracleScript.prototype.setDescription = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string filename = 4;\n * @return {string}\n */\nproto.oracle.v1.OracleScript.prototype.getFilename = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\nproto.oracle.v1.OracleScript.prototype.setFilename = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string schema = 5;\n * @return {string}\n */\nproto.oracle.v1.OracleScript.prototype.getSchema = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\nproto.oracle.v1.OracleScript.prototype.setSchema = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string source_code_url = 6;\n * @return {string}\n */\nproto.oracle.v1.OracleScript.prototype.getSourceCodeUrl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleScript} returns this\n */\nproto.oracle.v1.OracleScript.prototype.setSourceCodeUrl = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.RawRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.RawRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.RawRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.RawRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    externalId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    dataSourceId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    calldata: msg.getCalldata_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.RawRequest}\n */\nproto.oracle.v1.RawRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.RawRequest;\n  return proto.oracle.v1.RawRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.RawRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.RawRequest}\n */\nproto.oracle.v1.RawRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setExternalId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setDataSourceId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCalldata(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.RawRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.RawRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.RawRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.RawRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getExternalId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getDataSourceId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getCalldata_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 external_id = 1;\n * @return {number}\n */\nproto.oracle.v1.RawRequest.prototype.getExternalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RawRequest} returns this\n */\nproto.oracle.v1.RawRequest.prototype.setExternalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 data_source_id = 2;\n * @return {number}\n */\nproto.oracle.v1.RawRequest.prototype.getDataSourceId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RawRequest} returns this\n */\nproto.oracle.v1.RawRequest.prototype.setDataSourceId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes calldata = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.oracle.v1.RawRequest.prototype.getCalldata = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes calldata = 3;\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {string}\n */\nproto.oracle.v1.RawRequest.prototype.getCalldata_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCalldata()));\n};\n\n\n/**\n * optional bytes calldata = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {!Uint8Array}\n */\nproto.oracle.v1.RawRequest.prototype.getCalldata_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCalldata()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.RawRequest} returns this\n */\nproto.oracle.v1.RawRequest.prototype.setCalldata = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.RawReport.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.RawReport.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.RawReport} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.RawReport.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    externalId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    exitCode: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    data: msg.getData_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.RawReport}\n */\nproto.oracle.v1.RawReport.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.RawReport;\n  return proto.oracle.v1.RawReport.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.RawReport} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.RawReport}\n */\nproto.oracle.v1.RawReport.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setExternalId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setExitCode(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.RawReport.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.RawReport.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.RawReport} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.RawReport.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getExternalId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getExitCode();\n  if (f !== 0) {\n    writer.writeUint32(\n      2,\n      f\n    );\n  }\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 external_id = 1;\n * @return {number}\n */\nproto.oracle.v1.RawReport.prototype.getExternalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RawReport} returns this\n */\nproto.oracle.v1.RawReport.prototype.setExternalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint32 exit_code = 2;\n * @return {number}\n */\nproto.oracle.v1.RawReport.prototype.getExitCode = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RawReport} returns this\n */\nproto.oracle.v1.RawReport.prototype.setExitCode = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes data = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.oracle.v1.RawReport.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes data = 3;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.oracle.v1.RawReport.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.oracle.v1.RawReport.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.RawReport} returns this\n */\nproto.oracle.v1.RawReport.prototype.setData = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.oracle.v1.Request.repeatedFields_ = [3,8];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.Request.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.Request.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.Request} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.Request.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    oracleScriptId: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    calldata: msg.getCalldata_asB64(),\n    requestedValidatorsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,\n    minCount: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    requestHeight: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    requestTime: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    clientId: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    rawRequestsList: jspb.Message.toObjectList(msg.getRawRequestsList(),\n    proto.oracle.v1.RawRequest.toObject, includeInstance),\n    ibcChannel: (f = msg.getIbcChannel()) && proto.oracle.v1.IBCChannel.toObject(includeInstance, f),\n    executeGas: jspb.Message.getFieldWithDefault(msg, 10, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.Request}\n */\nproto.oracle.v1.Request.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.Request;\n  return proto.oracle.v1.Request.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.Request} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.Request}\n */\nproto.oracle.v1.Request.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setOracleScriptId(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCalldata(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addRequestedValidators(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinCount(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRequestHeight(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRequestTime(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClientId(value);\n      break;\n    case 8:\n      var value = new proto.oracle.v1.RawRequest;\n      reader.readMessage(value,proto.oracle.v1.RawRequest.deserializeBinaryFromReader);\n      msg.addRawRequests(value);\n      break;\n    case 9:\n      var value = new proto.oracle.v1.IBCChannel;\n      reader.readMessage(value,proto.oracle.v1.IBCChannel.deserializeBinaryFromReader);\n      msg.setIbcChannel(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setExecuteGas(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.Request.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.Request.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.Request} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.Request.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOracleScriptId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getCalldata_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getRequestedValidatorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      3,\n      f\n    );\n  }\n  f = message.getMinCount();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getRequestHeight();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getRequestTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getClientId();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getRawRequestsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      8,\n      f,\n      proto.oracle.v1.RawRequest.serializeBinaryToWriter\n    );\n  }\n  f = message.getIbcChannel();\n  if (f != null) {\n    writer.writeMessage(\n      9,\n      f,\n      proto.oracle.v1.IBCChannel.serializeBinaryToWriter\n    );\n  }\n  f = message.getExecuteGas();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 oracle_script_id = 1;\n * @return {number}\n */\nproto.oracle.v1.Request.prototype.getOracleScriptId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.setOracleScriptId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes calldata = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.oracle.v1.Request.prototype.getCalldata = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes calldata = 2;\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {string}\n */\nproto.oracle.v1.Request.prototype.getCalldata_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCalldata()));\n};\n\n\n/**\n * optional bytes calldata = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {!Uint8Array}\n */\nproto.oracle.v1.Request.prototype.getCalldata_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCalldata()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.setCalldata = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * repeated string requested_validators = 3;\n * @return {!Array<string>}\n */\nproto.oracle.v1.Request.prototype.getRequestedValidatorsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.setRequestedValidatorsList = function(value) {\n  return jspb.Message.setField(this, 3, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.addRequestedValidators = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.clearRequestedValidatorsList = function() {\n  return this.setRequestedValidatorsList([]);\n};\n\n\n/**\n * optional uint64 min_count = 4;\n * @return {number}\n */\nproto.oracle.v1.Request.prototype.getMinCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.setMinCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 request_height = 5;\n * @return {number}\n */\nproto.oracle.v1.Request.prototype.getRequestHeight = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.setRequestHeight = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 request_time = 6;\n * @return {number}\n */\nproto.oracle.v1.Request.prototype.getRequestTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.setRequestTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional string client_id = 7;\n * @return {string}\n */\nproto.oracle.v1.Request.prototype.getClientId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.setClientId = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * repeated RawRequest raw_requests = 8;\n * @return {!Array<!proto.oracle.v1.RawRequest>}\n */\nproto.oracle.v1.Request.prototype.getRawRequestsList = function() {\n  return /** @type{!Array<!proto.oracle.v1.RawRequest>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.oracle.v1.RawRequest, 8));\n};\n\n\n/**\n * @param {!Array<!proto.oracle.v1.RawRequest>} value\n * @return {!proto.oracle.v1.Request} returns this\n*/\nproto.oracle.v1.Request.prototype.setRawRequestsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 8, value);\n};\n\n\n/**\n * @param {!proto.oracle.v1.RawRequest=} opt_value\n * @param {number=} opt_index\n * @return {!proto.oracle.v1.RawRequest}\n */\nproto.oracle.v1.Request.prototype.addRawRequests = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.oracle.v1.RawRequest, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.clearRawRequestsList = function() {\n  return this.setRawRequestsList([]);\n};\n\n\n/**\n * optional IBCChannel ibc_channel = 9;\n * @return {?proto.oracle.v1.IBCChannel}\n */\nproto.oracle.v1.Request.prototype.getIbcChannel = function() {\n  return /** @type{?proto.oracle.v1.IBCChannel} */ (\n    jspb.Message.getWrapperField(this, proto.oracle.v1.IBCChannel, 9));\n};\n\n\n/**\n * @param {?proto.oracle.v1.IBCChannel|undefined} value\n * @return {!proto.oracle.v1.Request} returns this\n*/\nproto.oracle.v1.Request.prototype.setIbcChannel = function(value) {\n  return jspb.Message.setWrapperField(this, 9, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.clearIbcChannel = function() {\n  return this.setIbcChannel(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.oracle.v1.Request.prototype.hasIbcChannel = function() {\n  return jspb.Message.getField(this, 9) != null;\n};\n\n\n/**\n * optional uint64 execute_gas = 10;\n * @return {number}\n */\nproto.oracle.v1.Request.prototype.getExecuteGas = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Request} returns this\n */\nproto.oracle.v1.Request.prototype.setExecuteGas = function(value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.oracle.v1.Report.repeatedFields_ = [3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.Report.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.Report.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.Report} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.Report.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    validator: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    inBeforeResolve: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n    rawReportsList: jspb.Message.toObjectList(msg.getRawReportsList(),\n    proto.oracle.v1.RawReport.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.Report}\n */\nproto.oracle.v1.Report.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.Report;\n  return proto.oracle.v1.Report.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.Report} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.Report}\n */\nproto.oracle.v1.Report.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValidator(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setInBeforeResolve(value);\n      break;\n    case 3:\n      var value = new proto.oracle.v1.RawReport;\n      reader.readMessage(value,proto.oracle.v1.RawReport.deserializeBinaryFromReader);\n      msg.addRawReports(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.Report.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.Report.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.Report} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.Report.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValidator();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getInBeforeResolve();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getRawReportsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.oracle.v1.RawReport.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string validator = 1;\n * @return {string}\n */\nproto.oracle.v1.Report.prototype.getValidator = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.Report} returns this\n */\nproto.oracle.v1.Report.prototype.setValidator = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool in_before_resolve = 2;\n * @return {boolean}\n */\nproto.oracle.v1.Report.prototype.getInBeforeResolve = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.oracle.v1.Report} returns this\n */\nproto.oracle.v1.Report.prototype.setInBeforeResolve = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * repeated RawReport raw_reports = 3;\n * @return {!Array<!proto.oracle.v1.RawReport>}\n */\nproto.oracle.v1.Report.prototype.getRawReportsList = function() {\n  return /** @type{!Array<!proto.oracle.v1.RawReport>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.oracle.v1.RawReport, 3));\n};\n\n\n/**\n * @param {!Array<!proto.oracle.v1.RawReport>} value\n * @return {!proto.oracle.v1.Report} returns this\n*/\nproto.oracle.v1.Report.prototype.setRawReportsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.oracle.v1.RawReport=} opt_value\n * @param {number=} opt_index\n * @return {!proto.oracle.v1.RawReport}\n */\nproto.oracle.v1.Report.prototype.addRawReports = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.oracle.v1.RawReport, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.Report} returns this\n */\nproto.oracle.v1.Report.prototype.clearRawReportsList = function() {\n  return this.setRawReportsList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.oracle.v1.OracleRequestPacketData.repeatedFields_ = [6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.OracleRequestPacketData.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.OracleRequestPacketData} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.OracleRequestPacketData.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    clientId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    oracleScriptId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    calldata: msg.getCalldata_asB64(),\n    askCount: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    minCount: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    feeLimitList: jspb.Message.toObjectList(msg.getFeeLimitList(),\n    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance),\n    prepareGas: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    executeGas: jspb.Message.getFieldWithDefault(msg, 8, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.OracleRequestPacketData}\n */\nproto.oracle.v1.OracleRequestPacketData.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.OracleRequestPacketData;\n  return proto.oracle.v1.OracleRequestPacketData.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.OracleRequestPacketData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.OracleRequestPacketData}\n */\nproto.oracle.v1.OracleRequestPacketData.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClientId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setOracleScriptId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCalldata(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAskCount(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinCount(value);\n      break;\n    case 6:\n      var value = new cosmos_base_v1beta1_coin_pb.Coin;\n      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);\n      msg.addFeeLimit(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPrepareGas(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setExecuteGas(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.OracleRequestPacketData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.OracleRequestPacketData} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.OracleRequestPacketData.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClientId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getOracleScriptId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getCalldata_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAskCount();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getMinCount();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getFeeLimitList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      6,\n      f,\n      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter\n    );\n  }\n  f = message.getPrepareGas();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getExecuteGas();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string client_id = 1;\n * @return {string}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.getClientId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.setClientId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 oracle_script_id = 2;\n * @return {number}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.getOracleScriptId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.setOracleScriptId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes calldata = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.getCalldata = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes calldata = 3;\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {string}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.getCalldata_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCalldata()));\n};\n\n\n/**\n * optional bytes calldata = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {!Uint8Array}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.getCalldata_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCalldata()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.setCalldata = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional uint64 ask_count = 4;\n * @return {number}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.getAskCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.setAskCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 min_count = 5;\n * @return {number}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.getMinCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.setMinCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * repeated cosmos.base.v1beta1.Coin fee_limit = 6;\n * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.getFeeLimitList = function() {\n  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (\n    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 6));\n};\n\n\n/**\n * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n*/\nproto.oracle.v1.OracleRequestPacketData.prototype.setFeeLimitList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n\n\n/**\n * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value\n * @param {number=} opt_index\n * @return {!proto.cosmos.base.v1beta1.Coin}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.addFeeLimit = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.clearFeeLimitList = function() {\n  return this.setFeeLimitList([]);\n};\n\n\n/**\n * optional uint64 prepare_gas = 7;\n * @return {number}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.getPrepareGas = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.setPrepareGas = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional uint64 execute_gas = 8;\n * @return {number}\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.getExecuteGas = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketData} returns this\n */\nproto.oracle.v1.OracleRequestPacketData.prototype.setExecuteGas = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.OracleRequestPacketAcknowledgement.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.OracleRequestPacketAcknowledgement.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.OracleRequestPacketAcknowledgement} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.OracleRequestPacketAcknowledgement.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requestId: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.OracleRequestPacketAcknowledgement}\n */\nproto.oracle.v1.OracleRequestPacketAcknowledgement.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.OracleRequestPacketAcknowledgement;\n  return proto.oracle.v1.OracleRequestPacketAcknowledgement.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.OracleRequestPacketAcknowledgement} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.OracleRequestPacketAcknowledgement}\n */\nproto.oracle.v1.OracleRequestPacketAcknowledgement.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRequestId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.OracleRequestPacketAcknowledgement.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.OracleRequestPacketAcknowledgement.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.OracleRequestPacketAcknowledgement} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.OracleRequestPacketAcknowledgement.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRequestId();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 request_id = 1;\n * @return {number}\n */\nproto.oracle.v1.OracleRequestPacketAcknowledgement.prototype.getRequestId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleRequestPacketAcknowledgement} returns this\n */\nproto.oracle.v1.OracleRequestPacketAcknowledgement.prototype.setRequestId = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.OracleResponsePacketData.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.OracleResponsePacketData} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.OracleResponsePacketData.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    clientId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    requestId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    ansCount: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    requestTime: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    resolveTime: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    resolveStatus: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    result: msg.getResult_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.OracleResponsePacketData}\n */\nproto.oracle.v1.OracleResponsePacketData.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.OracleResponsePacketData;\n  return proto.oracle.v1.OracleResponsePacketData.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.OracleResponsePacketData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.OracleResponsePacketData}\n */\nproto.oracle.v1.OracleResponsePacketData.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClientId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRequestId(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAnsCount(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRequestTime(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setResolveTime(value);\n      break;\n    case 6:\n      var value = /** @type {!proto.oracle.v1.ResolveStatus} */ (reader.readEnum());\n      msg.setResolveStatus(value);\n      break;\n    case 7:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setResult(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.OracleResponsePacketData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.OracleResponsePacketData} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.OracleResponsePacketData.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClientId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRequestId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getAnsCount();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getRequestTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getResolveTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getResolveStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      6,\n      f\n    );\n  }\n  f = message.getResult_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string client_id = 1;\n * @return {string}\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.getClientId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.setClientId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 request_id = 2;\n * @return {number}\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.getRequestId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.setRequestId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 ans_count = 3;\n * @return {number}\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.getAnsCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.setAnsCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 request_time = 4;\n * @return {number}\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.getRequestTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.setRequestTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 resolve_time = 5;\n * @return {number}\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.getResolveTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.setResolveTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional ResolveStatus resolve_status = 6;\n * @return {!proto.oracle.v1.ResolveStatus}\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.getResolveStatus = function() {\n  return /** @type {!proto.oracle.v1.ResolveStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {!proto.oracle.v1.ResolveStatus} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.setResolveStatus = function(value) {\n  return jspb.Message.setProto3EnumField(this, 6, value);\n};\n\n\n/**\n * optional bytes result = 7;\n * @return {!(string|Uint8Array)}\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.getResult = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * optional bytes result = 7;\n * This is a type-conversion wrapper around `getResult()`\n * @return {string}\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.getResult_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getResult()));\n};\n\n\n/**\n * optional bytes result = 7;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getResult()`\n * @return {!Uint8Array}\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.getResult_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getResult()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.OracleResponsePacketData} returns this\n */\nproto.oracle.v1.OracleResponsePacketData.prototype.setResult = function(value) {\n  return jspb.Message.setProto3BytesField(this, 7, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.Result.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.Result.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.Result} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.Result.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    clientId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    oracleScriptId: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    calldata: msg.getCalldata_asB64(),\n    askCount: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    minCount: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    requestId: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    ansCount: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    requestTime: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    resolveTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    resolveStatus: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    result: msg.getResult_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.Result}\n */\nproto.oracle.v1.Result.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.Result;\n  return proto.oracle.v1.Result.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.Result} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.Result}\n */\nproto.oracle.v1.Result.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setClientId(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setOracleScriptId(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCalldata(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAskCount(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMinCount(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRequestId(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setAnsCount(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRequestTime(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setResolveTime(value);\n      break;\n    case 10:\n      var value = /** @type {!proto.oracle.v1.ResolveStatus} */ (reader.readEnum());\n      msg.setResolveStatus(value);\n      break;\n    case 11:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setResult(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.Result.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.Result.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.Result} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.Result.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getClientId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getOracleScriptId();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getCalldata_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAskCount();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getMinCount();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getRequestId();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getAnsCount();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getRequestTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getResolveTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getResolveStatus();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      10,\n      f\n    );\n  }\n  f = message.getResult_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string client_id = 1;\n * @return {string}\n */\nproto.oracle.v1.Result.prototype.getClientId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.Result} returns this\n */\nproto.oracle.v1.Result.prototype.setClientId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 oracle_script_id = 2;\n * @return {number}\n */\nproto.oracle.v1.Result.prototype.getOracleScriptId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\nproto.oracle.v1.Result.prototype.setOracleScriptId = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes calldata = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.oracle.v1.Result.prototype.getCalldata = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes calldata = 3;\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {string}\n */\nproto.oracle.v1.Result.prototype.getCalldata_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCalldata()));\n};\n\n\n/**\n * optional bytes calldata = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCalldata()`\n * @return {!Uint8Array}\n */\nproto.oracle.v1.Result.prototype.getCalldata_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCalldata()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.Result} returns this\n */\nproto.oracle.v1.Result.prototype.setCalldata = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional uint64 ask_count = 4;\n * @return {number}\n */\nproto.oracle.v1.Result.prototype.getAskCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\nproto.oracle.v1.Result.prototype.setAskCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 min_count = 5;\n * @return {number}\n */\nproto.oracle.v1.Result.prototype.getMinCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\nproto.oracle.v1.Result.prototype.setMinCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional uint64 request_id = 6;\n * @return {number}\n */\nproto.oracle.v1.Result.prototype.getRequestId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\nproto.oracle.v1.Result.prototype.setRequestId = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional uint64 ans_count = 7;\n * @return {number}\n */\nproto.oracle.v1.Result.prototype.getAnsCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\nproto.oracle.v1.Result.prototype.setAnsCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int64 request_time = 8;\n * @return {number}\n */\nproto.oracle.v1.Result.prototype.getRequestTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\nproto.oracle.v1.Result.prototype.setRequestTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional int64 resolve_time = 9;\n * @return {number}\n */\nproto.oracle.v1.Result.prototype.getResolveTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Result} returns this\n */\nproto.oracle.v1.Result.prototype.setResolveTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional ResolveStatus resolve_status = 10;\n * @return {!proto.oracle.v1.ResolveStatus}\n */\nproto.oracle.v1.Result.prototype.getResolveStatus = function() {\n  return /** @type {!proto.oracle.v1.ResolveStatus} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {!proto.oracle.v1.ResolveStatus} value\n * @return {!proto.oracle.v1.Result} returns this\n */\nproto.oracle.v1.Result.prototype.setResolveStatus = function(value) {\n  return jspb.Message.setProto3EnumField(this, 10, value);\n};\n\n\n/**\n * optional bytes result = 11;\n * @return {!(string|Uint8Array)}\n */\nproto.oracle.v1.Result.prototype.getResult = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 11, \"\"));\n};\n\n\n/**\n * optional bytes result = 11;\n * This is a type-conversion wrapper around `getResult()`\n * @return {string}\n */\nproto.oracle.v1.Result.prototype.getResult_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getResult()));\n};\n\n\n/**\n * optional bytes result = 11;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getResult()`\n * @return {!Uint8Array}\n */\nproto.oracle.v1.Result.prototype.getResult_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getResult()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.oracle.v1.Result} returns this\n */\nproto.oracle.v1.Result.prototype.setResult = function(value) {\n  return jspb.Message.setProto3BytesField(this, 11, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.ValidatorStatus.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.ValidatorStatus.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.ValidatorStatus} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.ValidatorStatus.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    since: (f = msg.getSince()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.ValidatorStatus}\n */\nproto.oracle.v1.ValidatorStatus.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.ValidatorStatus;\n  return proto.oracle.v1.ValidatorStatus.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.ValidatorStatus} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.ValidatorStatus}\n */\nproto.oracle.v1.ValidatorStatus.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsActive(value);\n      break;\n    case 2:\n      var value = new google_protobuf_timestamp_pb.Timestamp;\n      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);\n      msg.setSince(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.ValidatorStatus.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.ValidatorStatus.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.ValidatorStatus} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.ValidatorStatus.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIsActive();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getSince();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool is_active = 1;\n * @return {boolean}\n */\nproto.oracle.v1.ValidatorStatus.prototype.getIsActive = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.oracle.v1.ValidatorStatus} returns this\n */\nproto.oracle.v1.ValidatorStatus.prototype.setIsActive = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional google.protobuf.Timestamp since = 2;\n * @return {?proto.google.protobuf.Timestamp}\n */\nproto.oracle.v1.ValidatorStatus.prototype.getSince = function() {\n  return /** @type{?proto.google.protobuf.Timestamp} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));\n};\n\n\n/**\n * @param {?proto.google.protobuf.Timestamp|undefined} value\n * @return {!proto.oracle.v1.ValidatorStatus} returns this\n*/\nproto.oracle.v1.ValidatorStatus.prototype.setSince = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.oracle.v1.ValidatorStatus} returns this\n */\nproto.oracle.v1.ValidatorStatus.prototype.clearSince = function() {\n  return this.setSince(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.oracle.v1.ValidatorStatus.prototype.hasSince = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.ActiveValidator.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.ActiveValidator.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.ActiveValidator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.ActiveValidator.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    power: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.ActiveValidator}\n */\nproto.oracle.v1.ActiveValidator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.ActiveValidator;\n  return proto.oracle.v1.ActiveValidator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.ActiveValidator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.ActiveValidator}\n */\nproto.oracle.v1.ActiveValidator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPower(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.ActiveValidator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.ActiveValidator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.ActiveValidator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.ActiveValidator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPower();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string address = 1;\n * @return {string}\n */\nproto.oracle.v1.ActiveValidator.prototype.getAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.ActiveValidator} returns this\n */\nproto.oracle.v1.ActiveValidator.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 power = 2;\n * @return {number}\n */\nproto.oracle.v1.ActiveValidator.prototype.getPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.ActiveValidator} returns this\n */\nproto.oracle.v1.ActiveValidator.prototype.setPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.Params.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.Params.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.Params} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.Params.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    maxRawRequestCount: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    maxAskCount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    maxCalldataSize: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    maxReportDataSize: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    expirationBlockCount: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    baseOwasmGas: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    perValidatorRequestGas: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    samplingTryCount: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    oracleRewardPercentage: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    inactivePenaltyDuration: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    ibcRequestEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.Params}\n */\nproto.oracle.v1.Params.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.Params;\n  return proto.oracle.v1.Params.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.Params} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.Params}\n */\nproto.oracle.v1.Params.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxRawRequestCount(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxAskCount(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxCalldataSize(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMaxReportDataSize(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setExpirationBlockCount(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBaseOwasmGas(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPerValidatorRequestGas(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSamplingTryCount(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setOracleRewardPercentage(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setInactivePenaltyDuration(value);\n      break;\n    case 11:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIbcRequestEnabled(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.Params.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.Params.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.Params} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.Params.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMaxRawRequestCount();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getMaxAskCount();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getMaxCalldataSize();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getMaxReportDataSize();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getExpirationBlockCount();\n  if (f !== 0) {\n    writer.writeUint64(\n      5,\n      f\n    );\n  }\n  f = message.getBaseOwasmGas();\n  if (f !== 0) {\n    writer.writeUint64(\n      6,\n      f\n    );\n  }\n  f = message.getPerValidatorRequestGas();\n  if (f !== 0) {\n    writer.writeUint64(\n      7,\n      f\n    );\n  }\n  f = message.getSamplingTryCount();\n  if (f !== 0) {\n    writer.writeUint64(\n      8,\n      f\n    );\n  }\n  f = message.getOracleRewardPercentage();\n  if (f !== 0) {\n    writer.writeUint64(\n      9,\n      f\n    );\n  }\n  f = message.getInactivePenaltyDuration();\n  if (f !== 0) {\n    writer.writeUint64(\n      10,\n      f\n    );\n  }\n  f = message.getIbcRequestEnabled();\n  if (f) {\n    writer.writeBool(\n      11,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 max_raw_request_count = 1;\n * @return {number}\n */\nproto.oracle.v1.Params.prototype.getMaxRawRequestCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\nproto.oracle.v1.Params.prototype.setMaxRawRequestCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 max_ask_count = 2;\n * @return {number}\n */\nproto.oracle.v1.Params.prototype.getMaxAskCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\nproto.oracle.v1.Params.prototype.setMaxAskCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 max_calldata_size = 3;\n * @return {number}\n */\nproto.oracle.v1.Params.prototype.getMaxCalldataSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\nproto.oracle.v1.Params.prototype.setMaxCalldataSize = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 max_report_data_size = 4;\n * @return {number}\n */\nproto.oracle.v1.Params.prototype.getMaxReportDataSize = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\nproto.oracle.v1.Params.prototype.setMaxReportDataSize = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional uint64 expiration_block_count = 5;\n * @return {number}\n */\nproto.oracle.v1.Params.prototype.getExpirationBlockCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\nproto.oracle.v1.Params.prototype.setExpirationBlockCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional uint64 base_owasm_gas = 6;\n * @return {number}\n */\nproto.oracle.v1.Params.prototype.getBaseOwasmGas = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\nproto.oracle.v1.Params.prototype.setBaseOwasmGas = function(value) {\n  return jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional uint64 per_validator_request_gas = 7;\n * @return {number}\n */\nproto.oracle.v1.Params.prototype.getPerValidatorRequestGas = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\nproto.oracle.v1.Params.prototype.setPerValidatorRequestGas = function(value) {\n  return jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional uint64 sampling_try_count = 8;\n * @return {number}\n */\nproto.oracle.v1.Params.prototype.getSamplingTryCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\nproto.oracle.v1.Params.prototype.setSamplingTryCount = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional uint64 oracle_reward_percentage = 9;\n * @return {number}\n */\nproto.oracle.v1.Params.prototype.getOracleRewardPercentage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\nproto.oracle.v1.Params.prototype.setOracleRewardPercentage = function(value) {\n  return jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional uint64 inactive_penalty_duration = 10;\n * @return {number}\n */\nproto.oracle.v1.Params.prototype.getInactivePenaltyDuration = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.Params} returns this\n */\nproto.oracle.v1.Params.prototype.setInactivePenaltyDuration = function(value) {\n  return jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional bool ibc_request_enabled = 11;\n * @return {boolean}\n */\nproto.oracle.v1.Params.prototype.getIbcRequestEnabled = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.oracle.v1.Params} returns this\n */\nproto.oracle.v1.Params.prototype.setIbcRequestEnabled = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 11, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.oracle.v1.PendingResolveList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.PendingResolveList.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.PendingResolveList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.PendingResolveList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.PendingResolveList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    requestIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.PendingResolveList}\n */\nproto.oracle.v1.PendingResolveList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.PendingResolveList;\n  return proto.oracle.v1.PendingResolveList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.PendingResolveList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.PendingResolveList}\n */\nproto.oracle.v1.PendingResolveList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addRequestIds(values[i]);\n      }\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.PendingResolveList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.PendingResolveList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.PendingResolveList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.PendingResolveList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRequestIdsList();\n  if (f.length > 0) {\n    writer.writePackedUint64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated uint64 request_ids = 1;\n * @return {!Array<number>}\n */\nproto.oracle.v1.PendingResolveList.prototype.getRequestIdsList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.oracle.v1.PendingResolveList} returns this\n */\nproto.oracle.v1.PendingResolveList.prototype.setRequestIdsList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.oracle.v1.PendingResolveList} returns this\n */\nproto.oracle.v1.PendingResolveList.prototype.addRequestIds = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.oracle.v1.PendingResolveList} returns this\n */\nproto.oracle.v1.PendingResolveList.prototype.clearRequestIdsList = function() {\n  return this.setRequestIdsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.IBCChannel.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.IBCChannel.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.IBCChannel} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.IBCChannel.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    portId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    channelId: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.IBCChannel}\n */\nproto.oracle.v1.IBCChannel.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.IBCChannel;\n  return proto.oracle.v1.IBCChannel.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.IBCChannel} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.IBCChannel}\n */\nproto.oracle.v1.IBCChannel.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPortId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChannelId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.IBCChannel.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.IBCChannel.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.IBCChannel} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.IBCChannel.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPortId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getChannelId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string port_id = 1;\n * @return {string}\n */\nproto.oracle.v1.IBCChannel.prototype.getPortId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.IBCChannel} returns this\n */\nproto.oracle.v1.IBCChannel.prototype.setPortId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string channel_id = 2;\n * @return {string}\n */\nproto.oracle.v1.IBCChannel.prototype.getChannelId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.IBCChannel} returns this\n */\nproto.oracle.v1.IBCChannel.prototype.setChannelId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.RequestVerification.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.RequestVerification.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.RequestVerification} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.RequestVerification.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    chainId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    validator: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    requestId: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    externalId: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.RequestVerification}\n */\nproto.oracle.v1.RequestVerification.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.RequestVerification;\n  return proto.oracle.v1.RequestVerification.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.RequestVerification} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.RequestVerification}\n */\nproto.oracle.v1.RequestVerification.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChainId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setValidator(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRequestId(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setExternalId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.RequestVerification.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.RequestVerification.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.RequestVerification} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.RequestVerification.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChainId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValidator();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getRequestId();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getExternalId();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string chain_id = 1;\n * @return {string}\n */\nproto.oracle.v1.RequestVerification.prototype.getChainId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.RequestVerification} returns this\n */\nproto.oracle.v1.RequestVerification.prototype.setChainId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string validator = 2;\n * @return {string}\n */\nproto.oracle.v1.RequestVerification.prototype.getValidator = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.RequestVerification} returns this\n */\nproto.oracle.v1.RequestVerification.prototype.setValidator = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional uint64 request_id = 3;\n * @return {number}\n */\nproto.oracle.v1.RequestVerification.prototype.getRequestId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RequestVerification} returns this\n */\nproto.oracle.v1.RequestVerification.prototype.setRequestId = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 external_id = 4;\n * @return {number}\n */\nproto.oracle.v1.RequestVerification.prototype.getExternalId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.RequestVerification} returns this\n */\nproto.oracle.v1.RequestVerification.prototype.setExternalId = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.oracle.v1.PriceResult.prototype.toObject = function(opt_includeInstance) {\n  return proto.oracle.v1.PriceResult.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.oracle.v1.PriceResult} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.PriceResult.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    symbol: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    multiplier: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    px: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    requestId: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    resolveTime: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.oracle.v1.PriceResult}\n */\nproto.oracle.v1.PriceResult.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.oracle.v1.PriceResult;\n  return proto.oracle.v1.PriceResult.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.oracle.v1.PriceResult} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.oracle.v1.PriceResult}\n */\nproto.oracle.v1.PriceResult.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSymbol(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setMultiplier(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setPx(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setRequestId(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setResolveTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.oracle.v1.PriceResult.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.oracle.v1.PriceResult.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.oracle.v1.PriceResult} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.oracle.v1.PriceResult.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSymbol();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getMultiplier();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getPx();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n  f = message.getRequestId();\n  if (f !== 0) {\n    writer.writeUint64(\n      4,\n      f\n    );\n  }\n  f = message.getResolveTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string symbol = 1;\n * @return {string}\n */\nproto.oracle.v1.PriceResult.prototype.getSymbol = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.oracle.v1.PriceResult} returns this\n */\nproto.oracle.v1.PriceResult.prototype.setSymbol = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional uint64 multiplier = 2;\n * @return {number}\n */\nproto.oracle.v1.PriceResult.prototype.getMultiplier = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.PriceResult} returns this\n */\nproto.oracle.v1.PriceResult.prototype.setMultiplier = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 px = 3;\n * @return {number}\n */\nproto.oracle.v1.PriceResult.prototype.getPx = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.PriceResult} returns this\n */\nproto.oracle.v1.PriceResult.prototype.setPx = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional uint64 request_id = 4;\n * @return {number}\n */\nproto.oracle.v1.PriceResult.prototype.getRequestId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.PriceResult} returns this\n */\nproto.oracle.v1.PriceResult.prototype.setRequestId = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 resolve_time = 5;\n * @return {number}\n */\nproto.oracle.v1.PriceResult.prototype.getResolveTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.oracle.v1.PriceResult} returns this\n */\nproto.oracle.v1.PriceResult.prototype.setResolveTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.oracle.v1.ResolveStatus = {\n  RESOLVE_STATUS_OPEN_UNSPECIFIED: 0,\n  RESOLVE_STATUS_SUCCESS: 1,\n  RESOLVE_STATUS_FAILURE: 2,\n  RESOLVE_STATUS_EXPIRED: 3\n};\n\ngoog.object.extend(exports, proto.oracle.v1);\n"]},"metadata":{},"sourceType":"script"}