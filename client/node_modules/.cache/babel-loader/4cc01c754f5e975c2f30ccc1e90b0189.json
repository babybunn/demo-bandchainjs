{"ast":null,"code":"var _jsxFileName = \"/Users/pangp/Band/demo-bandchainjs/src/components/FormConnectWallet.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { getWallet } from \"../band\";\nimport { useDispatch } from \"react-redux\";\nimport { addWallet } from \"../redux/walletSlice\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport { ModalContext } from \"../../app-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormConnectWallet() {\n  _s();\n\n  const {\n    isShow,\n    setIsShow\n  } = useContext(ModalContext);\n  const dispatch = useDispatch();\n  const [mnemonic, setMnemonic] = useState(\"\");\n  const GET_BALANCE = gql`\n    query GetBalance($address: String!) {\n      accounts(where: { address: { _eq: $address } }) {\n        balance\n      }\n    }\n  `;\n  const [getBalance, {\n    error,\n    data\n  }] = useLazyQuery(GET_BALANCE);\n\n  const handleConnectButton = () => {\n    if (mnemonic.length > 0 && mnemonic !== \"\") {\n      const {\n        sender,\n        privateKey,\n        pubkey\n      } = getWallet(mnemonic);\n\n      if (sender) {\n        getBalance({\n          variables: {\n            address: sender\n          }\n        });\n      }\n\n      if (data) {\n        const uband = data.accounts[0].balance.split(\"uband\")[0];\n        dispatch(addWallet({\n          address: sender,\n          name: sender,\n          privateKey: privateKey,\n          pubkey: pubkey,\n          balance: uband / 1e6\n        }));\n        setIsShow(false);\n      }\n\n      if (error) console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"input-address\",\n            className: \"block text-sm font-medium text-gray-700 mb-1\",\n            children: \"Enter mnemonic phrase\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-md\",\n            type: \"text\",\n            id: \"input-address\",\n            valur: mnemonic,\n            onChange: e => setMnemonic(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConnectButton,\n        className: \"button block w-full bg-purple-600 text-white py-2 px-4 rounded-xl hover:bg-purple-700 focus:outline-none focus:ring-purple-600 focus:ring-opacity-50 transition duration-500 ease-in-out\",\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormConnectWallet, \"4rUWPdivjBRt5FRXDE5URNlZPeo=\", false, function () {\n  return [useDispatch, useLazyQuery];\n});\n\n_c = FormConnectWallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormConnectWallet\");","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/src/components/FormConnectWallet.js"],"names":["useState","useEffect","getWallet","useDispatch","addWallet","gql","useLazyQuery","ModalContext","FormConnectWallet","isShow","setIsShow","useContext","dispatch","mnemonic","setMnemonic","GET_BALANCE","getBalance","error","data","handleConnectButton","length","sender","privateKey","pubkey","variables","address","uband","accounts","balance","split","name","console","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,GAAT,EAAcC,YAAd,QAAkC,gBAAlC;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAwBC,UAAU,CAACJ,YAAD,CAAxC;AACA,QAAMK,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMe,WAAW,GAAGV,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,GANE;AAQA,QAAM,CAACW,UAAD,EAAa;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAb,IAAgCZ,YAAY,CAACS,WAAD,CAAlD;;AAEA,QAAMI,mBAAmB,GAAG,MAAM;AAChC,QAAIN,QAAQ,CAACO,MAAT,GAAkB,CAAlB,IAAuBP,QAAQ,KAAK,EAAxC,EAA4C;AAC1C,YAAM;AAAEQ,QAAAA,MAAF;AAAUC,QAAAA,UAAV;AAAsBC,QAAAA;AAAtB,UAAiCrB,SAAS,CAACW,QAAD,CAAhD;;AAEA,UAAIQ,MAAJ,EAAY;AACVL,QAAAA,UAAU,CAAC;AAAEQ,UAAAA,SAAS,EAAE;AAAEC,YAAAA,OAAO,EAAEJ;AAAX;AAAb,SAAD,CAAV;AACD;;AAED,UAAIH,IAAJ,EAAU;AACR,cAAMQ,KAAK,GAAGR,IAAI,CAACS,QAAL,CAAc,CAAd,EAAiBC,OAAjB,CAAyBC,KAAzB,CAA+B,OAA/B,EAAwC,CAAxC,CAAd;AACAjB,QAAAA,QAAQ,CACNR,SAAS,CAAC;AACRqB,UAAAA,OAAO,EAAEJ,MADD;AAERS,UAAAA,IAAI,EAAET,MAFE;AAGRC,UAAAA,UAAU,EAAEA,UAHJ;AAIRC,UAAAA,MAAM,EAAEA,MAJA;AAKRK,UAAAA,OAAO,EAAEF,KAAK,GAAG;AALT,SAAD,CADH,CAAR;AASAhB,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AACD,UAAIO,KAAJ,EAAWc,OAAO,CAACd,KAAR,CAAcA,KAAd;AACZ;AACF,GAvBD;;AAyBA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,eAAf;AAA+B,YAAA,SAAS,EAAC,8CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AACE,YAAA,SAAS,EAAC,kIADZ;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,EAAE,EAAC,eAHL;AAIE,YAAA,KAAK,EAAEJ,QAJT;AAKE,YAAA,QAAQ,EAAGmB,CAAD,IAAOlB,WAAW,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAL9B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AACE,QAAA,OAAO,EAAEf,mBADX;AAEE,QAAA,SAAS,EAAC,0LAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAlEuBX,iB;UAELL,W,EAWqBG,Y;;;KAbhBE,iB","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getWallet } from \"../band\";\nimport { useDispatch } from \"react-redux\";\nimport { addWallet } from \"../redux/walletSlice\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport { ModalContext } from \"../../app-context\";\n\nexport default function FormConnectWallet() {\n  const { isShow, setIsShow } = useContext(ModalContext);\n  const dispatch = useDispatch();\n  const [mnemonic, setMnemonic] = useState(\"\");\n\n  const GET_BALANCE = gql`\n    query GetBalance($address: String!) {\n      accounts(where: { address: { _eq: $address } }) {\n        balance\n      }\n    }\n  `;\n\n  const [getBalance, { error, data }] = useLazyQuery(GET_BALANCE);\n\n  const handleConnectButton = () => {\n    if (mnemonic.length > 0 && mnemonic !== \"\") {\n      const { sender, privateKey, pubkey } = getWallet(mnemonic);\n\n      if (sender) {\n        getBalance({ variables: { address: sender } });\n      }\n\n      if (data) {\n        const uband = data.accounts[0].balance.split(\"uband\")[0];\n        dispatch(\n          addWallet({\n            address: sender,\n            name: sender,\n            privateKey: privateKey,\n            pubkey: pubkey,\n            balance: uband / 1e6,\n          })\n        );\n        setIsShow(false);\n      }\n      if (error) console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"card-inner\">\n        <div className=\"mb-5\">\n          <div className=\"input-group mb-3\">\n            <label htmlFor=\"input-address\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Enter mnemonic phrase\n            </label>\n            <input\n              className=\"focus:outline-none focus:ring-2 focus:ring-gray-200 block w-full p-2 sm:text-sm border-solid border-2 border-gray-200 rounded-md\"\n              type=\"text\"\n              id=\"input-address\"\n              valur={mnemonic}\n              onChange={(e) => setMnemonic(e.target.value)}\n            />\n          </div>\n        </div>\n        <button\n          onClick={handleConnectButton}\n          className=\"button block w-full bg-purple-600 text-white py-2 px-4 rounded-xl hover:bg-purple-700 focus:outline-none focus:ring-purple-600 focus:ring-opacity-50 transition duration-500 ease-in-out\"\n        >\n          Connect Wallet\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}