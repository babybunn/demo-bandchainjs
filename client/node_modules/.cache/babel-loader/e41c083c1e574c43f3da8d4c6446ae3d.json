{"ast":null,"code":"var _jsxFileName = \"/Users/pangp/Band/demo-bandchainjs/src/routes/Delegations.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\nimport { SingleDelegator } from \"../components/SingleDelegator\";\nimport DelegatorDetails from \"./DelegatorDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Delegations() {\n  _s();\n\n  const wallet = useSelector(state => state.wallet);\n  useEffect(() => {// getDelegators({ variables: { address: wallet.address } });\n  }, []);\n  const GET_DELEGATIONS = gql`\n    subscription GetAccountDelegations($address: String!) {\n      delegations_view(where: { delegator_address: { _eq: $address } }) {\n        amount\n        moniker\n        reward\n        operator_address\n        delegator_address\n      }\n    }\n  `; //   const { loading, error, data } = useQuery(GET_DELEGATIONS);\n  // const [getDelegators, { loading, error, data }] = useLazyQuery(GET_DELEGATIONS);\n\n  const {\n    loading,\n    error,\n    data\n  } = useSubscription(GET_DELEGATIONS, {\n    variables: {\n      address: wallet.address\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl mb-5\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Delegations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap -mx-2\",\n            children: loading ? \"Loading...\" : error ? `Error! ${error.message}` : data ? data.delegations_view.map((delegator, ind) => {\n              return /*#__PURE__*/_jsxDEV(SingleDelegator, {\n                delegator: delegator\n              }, ind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 30\n              }, this);\n            }) : \"0 Validator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \":operator\",\n        element: /*#__PURE__*/_jsxDEV(DelegatorDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Delegations, \"9lF3f855PpId6192odE9YutVXYE=\", false, function () {\n  return [useSelector, useSubscription];\n});\n\n_c = Delegations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Delegations\");","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/src/routes/Delegations.js"],"names":["useState","useEffect","useSelector","Routes","Route","gql","useLazyQuery","useSubscription","SingleDelegator","DelegatorDetails","Delegations","wallet","state","GET_DELEGATIONS","loading","error","data","variables","address","message","delegations_view","map","delegator","ind"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,SAASC,GAAT,EAAcC,YAAd,EAA4BC,eAA5B,QAAmD,gBAAnD;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,MAAM,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B;AACAV,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMY,eAAe,GAAGR,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAVE,CANoC,CAkBpC;AACA;;AACA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,eAAe,CAACM,eAAD,EAAkB;AAChEI,IAAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAEP,MAAM,CAACO;AAAlB;AADqD,GAAlB,CAAhD;AAIA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,eACL;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,sBACGJ,OAAO,GACJ,YADI,GAEJC,KAAK,GACJ,UAASA,KAAK,CAACI,OAAQ,EADnB,GAELH,IAAI,GACJA,IAAI,CAACI,gBAAL,CAAsBC,GAAtB,CAA0B,CAACC,SAAD,EAAYC,GAAZ,KAAoB;AAC5C,kCAAO,QAAC,eAAD;AAAiB,gBAAA,SAAS,EAAED;AAA5B,iBAA4CC,GAA5C;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFD,CADI,GAIJ;AATN;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cADF,eAsBE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,OAAO,eAAE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GApDuBb,W;UACPR,W,EAmBkBK,e;;;KApBXG,W","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\nimport { SingleDelegator } from \"../components/SingleDelegator\";\nimport DelegatorDetails from \"./DelegatorDetails\";\n\nexport default function Delegations() {\n  const wallet = useSelector((state) => state.wallet);\n  useEffect(() => {\n    // getDelegators({ variables: { address: wallet.address } });\n  }, []);\n\n  const GET_DELEGATIONS = gql`\n    subscription GetAccountDelegations($address: String!) {\n      delegations_view(where: { delegator_address: { _eq: $address } }) {\n        amount\n        moniker\n        reward\n        operator_address\n        delegator_address\n      }\n    }\n  `;\n\n  //   const { loading, error, data } = useQuery(GET_DELEGATIONS);\n  // const [getDelegators, { loading, error, data }] = useLazyQuery(GET_DELEGATIONS);\n  const { loading, error, data } = useSubscription(GET_DELEGATIONS, {\n    variables: { address: wallet.address },\n  });\n\n  return (\n    <div>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <div>\n              <h2 className=\"text-2xl mb-5\">\n                <strong>Delegations</strong>\n              </h2>\n              <div className=\"flex flex-wrap -mx-2\">\n                {loading\n                  ? \"Loading...\"\n                  : error\n                  ? `Error! ${error.message}`\n                  : data\n                  ? data.delegations_view.map((delegator, ind) => {\n                      return <SingleDelegator delegator={delegator} key={ind} />;\n                    })\n                  : \"0 Validator\"}\n              </div>\n            </div>\n          }\n        />\n        <Route path=\":operator\" element={<DelegatorDetails />} />\n      </Routes>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}