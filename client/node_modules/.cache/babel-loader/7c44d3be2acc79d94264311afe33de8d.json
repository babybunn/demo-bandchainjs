{"ast":null,"code":"var _jsxFileName = \"/Users/pangp/Band/demo-bandchainjs/client/src/routes/Validators.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useLazyQuery, useQuery } from \"@apollo/client\";\nimport { SingleValidator } from \"../components/SingleValidator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Validators() {\n  _s();\n\n  const GET_VALIDATORS = gql`\n    query GetValidators {\n      validators {\n        moniker\n        operator_address\n        tokens\n        commission_rate\n        commission_max_change\n        commission_max_rate\n      }\n      validators_aggregate {\n        aggregate {\n          sum {\n            tokens\n          }\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_VALIDATORS);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap -mx-2\",\n    children: loading ? \"Loading...\" : error ? `Error! ${error.message}` : data ? data.validators.map((validator, ind) => {\n      return /*#__PURE__*/_jsxDEV(SingleValidator, {\n        validator: validator,\n        totalBonded: data.validators_aggregate ? data.validators_aggregate.aggregate.sum.tokens : 0\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this);\n    }) : \"0 Validator\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Validators, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Validators;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validators\");","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/client/src/routes/Validators.js"],"names":["gql","useLazyQuery","useQuery","SingleValidator","Validators","GET_VALIDATORS","loading","error","data","message","validators","map","validator","ind","validators_aggregate","aggregate","sum","tokens"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,YAAd,EAA4BC,QAA5B,QAA4C,gBAA5C;AACA,SAASC,eAAT,QAAgC,+BAAhC;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,cAAc,GAAGL,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAlBE;AAmBA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACG,cAAD,CAAzC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,cACGC,OAAO,GACJ,YADI,GAEJC,KAAK,GACJ,UAASA,KAAK,CAACE,OAAQ,EADnB,GAELD,IAAI,GACJA,IAAI,CAACE,UAAL,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,KAAoB;AACtC,0BACE,QAAC,eAAD;AACE,QAAA,SAAS,EAAED,SADb;AAGE,QAAA,WAAW,EACTJ,IAAI,CAACM,oBAAL,GAA4BN,IAAI,CAACM,oBAAL,CAA0BC,SAA1B,CAAoCC,GAApC,CAAwCC,MAApE,GAA6E;AAJjF,SAEOJ,GAFP;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVD,CADI,GAYJ;AAjBN;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA3CuBT,U;UAoBWF,Q;;;KApBXE,U","sourcesContent":["import { gql, useLazyQuery, useQuery } from \"@apollo/client\";\nimport { SingleValidator } from \"../components/SingleValidator\";\n\nexport default function Validators() {\n  const GET_VALIDATORS = gql`\n    query GetValidators {\n      validators {\n        moniker\n        operator_address\n        tokens\n        commission_rate\n        commission_max_change\n        commission_max_rate\n      }\n      validators_aggregate {\n        aggregate {\n          sum {\n            tokens\n          }\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_VALIDATORS);\n\n  return (\n    <div className=\"flex flex-wrap -mx-2\">\n      {loading\n        ? \"Loading...\"\n        : error\n        ? `Error! ${error.message}`\n        : data\n        ? data.validators.map((validator, ind) => {\n            return (\n              <SingleValidator\n                validator={validator}\n                key={ind}\n                totalBonded={\n                  data.validators_aggregate ? data.validators_aggregate.aggregate.sum.tokens : 0\n                }\n              />\n            );\n          })\n        : \"0 Validator\"}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}