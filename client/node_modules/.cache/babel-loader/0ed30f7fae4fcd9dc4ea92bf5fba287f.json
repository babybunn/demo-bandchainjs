{"ast":null,"code":"var _jsxFileName = \"/Users/pangp/Band/demo-bandchainjs/src/routes/Validators.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { SingleValidator } from \"../components/SingleValidator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Validators() {\n  _s();\n\n  const GET_VALIDATORS = gql`\n    query GetValidators {\n      validators {\n        moniker\n        operator_address\n        tokens\n        commission_rate\n        commission_max_change\n        commission_max_rate\n      }\n    }\n  `;\n  const GET_TOTALBONDEDAMOUNT = gql`\n    query validators_aggregate {\n      aggregate {\n        sum {\n          tokens\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_VALIDATORS);\n  const {\n    totalbondedData\n  } = useQuery(GET_TOTALBONDEDAMOUNT);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap -mx-2\",\n    children: loading ? \"Loading...\" : error ? `Error! ${error.message}` : data ? data.validators.map((validator, ind) => {\n      return /*#__PURE__*/_jsxDEV(SingleValidator, {\n        validator: validator,\n        totalBonded: totalbondedData\n      }, ind, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this);\n    }) : \"0 Validator\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Validators, \"nwYJfUVi8+F295V5N7tf2VWpd/Y=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = Validators;\n\nvar _c;\n\n$RefreshReg$(_c, \"Validators\");","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/src/routes/Validators.js"],"names":["gql","useQuery","SingleValidator","Validators","GET_VALIDATORS","GET_TOTALBONDEDAMOUNT","loading","error","data","totalbondedData","message","validators","map","validator","ind"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,eAAT,QAAgC,+BAAhC;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,cAAc,GAAGJ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXE;AAaA,QAAMK,qBAAqB,GAAGL,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARE;AAUA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACG,cAAD,CAAzC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAsBR,QAAQ,CAACI,qBAAD,CAApC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,cACGC,OAAO,GACJ,YADI,GAEJC,KAAK,GACJ,UAASA,KAAK,CAACG,OAAQ,EADnB,GAELF,IAAI,GACJA,IAAI,CAACG,UAAL,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,KAAoB;AACtC,0BACE,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAED,SAA5B;AAAiD,QAAA,WAAW,EAAEJ;AAA9D,SAA4CK,GAA5C;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD,CADI,GAMJ;AAXN;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA1CuBX,U;UAwBWF,Q,EACLA,Q;;;KAzBNE,U","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { SingleValidator } from \"../components/SingleValidator\";\n\nexport default function Validators() {\n  const GET_VALIDATORS = gql`\n    query GetValidators {\n      validators {\n        moniker\n        operator_address\n        tokens\n        commission_rate\n        commission_max_change\n        commission_max_rate\n      }\n    }\n  `;\n\n  const GET_TOTALBONDEDAMOUNT = gql`\n    query validators_aggregate {\n      aggregate {\n        sum {\n          tokens\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_VALIDATORS);\n  const { totalbondedData } = useQuery(GET_TOTALBONDEDAMOUNT);\n\n  return (\n    <div className=\"flex flex-wrap -mx-2\">\n      {loading\n        ? \"Loading...\"\n        : error\n        ? `Error! ${error.message}`\n        : data\n        ? data.validators.map((validator, ind) => {\n            return (\n              <SingleValidator validator={validator} key={ind} totalBonded={totalbondedData} />\n            );\n          })\n        : \"0 Validator\"}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}