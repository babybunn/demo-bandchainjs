{"ast":null,"code":"// source: cosmos/base/v1beta1/coin.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');\n\ngoog.object.extend(proto, gogoproto_gogo_pb);\ngoog.exportSymbol('proto.cosmos.base.v1beta1.Coin', null, global);\ngoog.exportSymbol('proto.cosmos.base.v1beta1.DecCoin', null, global);\ngoog.exportSymbol('proto.cosmos.base.v1beta1.DecProto', null, global);\ngoog.exportSymbol('proto.cosmos.base.v1beta1.IntProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.cosmos.base.v1beta1.Coin = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.cosmos.base.v1beta1.Coin, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.v1beta1.Coin.displayName = 'proto.cosmos.base.v1beta1.Coin';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.cosmos.base.v1beta1.DecCoin = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.cosmos.base.v1beta1.DecCoin, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.v1beta1.DecCoin.displayName = 'proto.cosmos.base.v1beta1.DecCoin';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.cosmos.base.v1beta1.IntProto = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.cosmos.base.v1beta1.IntProto, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.v1beta1.IntProto.displayName = 'proto.cosmos.base.v1beta1.IntProto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.cosmos.base.v1beta1.DecProto = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.cosmos.base.v1beta1.DecProto, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.v1beta1.DecProto.displayName = 'proto.cosmos.base.v1beta1.DecProto';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.cosmos.base.v1beta1.Coin.prototype.toObject = function (opt_includeInstance) {\n    return proto.cosmos.base.v1beta1.Coin.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.cosmos.base.v1beta1.Coin} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.cosmos.base.v1beta1.Coin.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      denom: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      amount: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.v1beta1.Coin}\n */\n\n\nproto.cosmos.base.v1beta1.Coin.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.v1beta1.Coin();\n  return proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.v1beta1.Coin} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.v1beta1.Coin}\n */\n\n\nproto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDenom(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAmount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.base.v1beta1.Coin.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.v1beta1.Coin} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDenom();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getAmount();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string denom = 1;\n * @return {string}\n */\n\n\nproto.cosmos.base.v1beta1.Coin.prototype.getDenom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.Coin} returns this\n */\n\n\nproto.cosmos.base.v1beta1.Coin.prototype.setDenom = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string amount = 2;\n * @return {string}\n */\n\n\nproto.cosmos.base.v1beta1.Coin.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.Coin} returns this\n */\n\n\nproto.cosmos.base.v1beta1.Coin.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.cosmos.base.v1beta1.DecCoin.prototype.toObject = function (opt_includeInstance) {\n    return proto.cosmos.base.v1beta1.DecCoin.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.cosmos.base.v1beta1.DecCoin} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.cosmos.base.v1beta1.DecCoin.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      denom: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      amount: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.v1beta1.DecCoin}\n */\n\n\nproto.cosmos.base.v1beta1.DecCoin.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.v1beta1.DecCoin();\n  return proto.cosmos.base.v1beta1.DecCoin.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.v1beta1.DecCoin} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.v1beta1.DecCoin}\n */\n\n\nproto.cosmos.base.v1beta1.DecCoin.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDenom(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setAmount(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.base.v1beta1.DecCoin.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.v1beta1.DecCoin.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.v1beta1.DecCoin} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.cosmos.base.v1beta1.DecCoin.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDenom();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getAmount();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string denom = 1;\n * @return {string}\n */\n\n\nproto.cosmos.base.v1beta1.DecCoin.prototype.getDenom = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.DecCoin} returns this\n */\n\n\nproto.cosmos.base.v1beta1.DecCoin.prototype.setDenom = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string amount = 2;\n * @return {string}\n */\n\n\nproto.cosmos.base.v1beta1.DecCoin.prototype.getAmount = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.DecCoin} returns this\n */\n\n\nproto.cosmos.base.v1beta1.DecCoin.prototype.setAmount = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.cosmos.base.v1beta1.IntProto.prototype.toObject = function (opt_includeInstance) {\n    return proto.cosmos.base.v1beta1.IntProto.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.cosmos.base.v1beta1.IntProto} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.cosmos.base.v1beta1.IntProto.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      pb_int: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.v1beta1.IntProto}\n */\n\n\nproto.cosmos.base.v1beta1.IntProto.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.v1beta1.IntProto();\n  return proto.cosmos.base.v1beta1.IntProto.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.v1beta1.IntProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.v1beta1.IntProto}\n */\n\n\nproto.cosmos.base.v1beta1.IntProto.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setInt(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.base.v1beta1.IntProto.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.v1beta1.IntProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.v1beta1.IntProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.cosmos.base.v1beta1.IntProto.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getInt();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string int = 1;\n * @return {string}\n */\n\n\nproto.cosmos.base.v1beta1.IntProto.prototype.getInt = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.IntProto} returns this\n */\n\n\nproto.cosmos.base.v1beta1.IntProto.prototype.setInt = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.cosmos.base.v1beta1.DecProto.prototype.toObject = function (opt_includeInstance) {\n    return proto.cosmos.base.v1beta1.DecProto.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.cosmos.base.v1beta1.DecProto} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.cosmos.base.v1beta1.DecProto.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      dec: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.v1beta1.DecProto}\n */\n\n\nproto.cosmos.base.v1beta1.DecProto.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.v1beta1.DecProto();\n  return proto.cosmos.base.v1beta1.DecProto.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.v1beta1.DecProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.v1beta1.DecProto}\n */\n\n\nproto.cosmos.base.v1beta1.DecProto.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDec(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.base.v1beta1.DecProto.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.v1beta1.DecProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.v1beta1.DecProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.cosmos.base.v1beta1.DecProto.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getDec();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string dec = 1;\n * @return {string}\n */\n\n\nproto.cosmos.base.v1beta1.DecProto.prototype.getDec = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.DecProto} returns this\n */\n\n\nproto.cosmos.base.v1beta1.DecProto.prototype.setDec = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\ngoog.object.extend(exports, proto.cosmos.base.v1beta1);","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/client/node_modules/@bandprotocol/bandchain.js/proto/cosmos/base/v1beta1/coin_pb.js"],"names":["jspb","require","goog","global","Function","gogoproto_gogo_pb","object","extend","proto","exportSymbol","cosmos","base","v1beta1","Coin","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","DecCoin","IntProto","DecProto","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","denom","getFieldWithDefault","amount","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setDenom","setAmount","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getDenom","length","writeString","getAmount","setProto3StringField","pb_int","setInt","getInt","dec","setDec","getDec","exports"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGF,IAAX;AACA,IAAIG,MAAM,GAAGC,QAAQ,CAAC,aAAD,CAAR,EAAb;;AAEA,IAAIC,iBAAiB,GAAGJ,OAAO,CAAC,+BAAD,CAA/B;;AACAC,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBC,KAAnB,EAA0BH,iBAA1B;AACAH,IAAI,CAACO,YAAL,CAAkB,gCAAlB,EAAoD,IAApD,EAA0DN,MAA1D;AACAD,IAAI,CAACO,YAAL,CAAkB,mCAAlB,EAAuD,IAAvD,EAA6DN,MAA7D;AACAD,IAAI,CAACO,YAAL,CAAkB,oCAAlB,EAAwD,IAAxD,EAA8DN,MAA9D;AACAD,IAAI,CAACO,YAAL,CAAkB,oCAAlB,EAAwD,IAAxD,EAA8DN,MAA9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAK,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,GAAiC,UAASC,QAAT,EAAmB;AAClDd,EAAAA,IAAI,CAACe,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAZ,IAAI,CAACe,QAAL,CAAcT,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAAxC,EAA8Cb,IAAI,CAACe,OAAnD;;AACA,IAAIb,IAAI,CAACgB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACEX,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BO,WAA/B,GAA6C,gCAA7C;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,GAAoC,UAASP,QAAT,EAAmB;AACrDd,EAAAA,IAAI,CAACe,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAZ,IAAI,CAACe,QAAL,CAAcT,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAAxC,EAAiDrB,IAAI,CAACe,OAAtD;;AACA,IAAIb,IAAI,CAACgB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACEX,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCD,WAAlC,GAAgD,mCAAhD;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,GAAqC,UAASR,QAAT,EAAmB;AACtDd,EAAAA,IAAI,CAACe,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAZ,IAAI,CAACe,QAAL,CAAcT,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAAxC,EAAkDtB,IAAI,CAACe,OAAvD;;AACA,IAAIb,IAAI,CAACgB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACEX,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmCF,WAAnC,GAAiD,oCAAjD;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,GAAqC,UAAST,QAAT,EAAmB;AACtDd,EAAAA,IAAI,CAACe,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAZ,IAAI,CAACe,QAAL,CAAcT,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAAxC,EAAkDvB,IAAI,CAACe,OAAvD;;AACA,IAAIb,IAAI,CAACgB,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACEX,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmCH,WAAnC,GAAiD,oCAAjD;AACD;;AAID,IAAIpB,IAAI,CAACe,OAAL,CAAaS,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAhB,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BY,SAA/B,CAAyCC,QAAzC,GAAoD,UAASC,mBAAT,EAA8B;AAChF,WAAOnB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+Ba,QAA/B,CAAwCC,mBAAxC,EAA6D,IAA7D,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAnB,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+Ba,QAA/B,GAA0C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACvE,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,KAAK,EAAEhC,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADI;AAEXK,MAAAA,MAAM,EAAElC,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AAFG,KAAb;;AAKA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACI,oBAAJ,GAA2BN,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;AAGD;AACA;AACA;AACA;AACA;;;AACAvB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BuB,iBAA/B,GAAmD,UAASC,KAAT,EAAgB;AACjE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIR,GAAG,GAAG,IAAIrB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA9B,EAAV;AACA,SAAOL,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+B2B,2BAA/B,CAA2DX,GAA3D,EAAgES,MAAhE,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9B,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+B2B,2BAA/B,GAA6D,UAASX,GAAT,EAAcS,MAAd,EAAsB;AACjF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAjB,QAAAA,GAAG,CAACkB,QAAJ,CAAaF,KAAb;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAjB,QAAAA,GAAG,CAACmB,SAAJ,CAAcH,KAAd;AACA;;AACF;AACEP,QAAAA,MAAM,CAACW,SAAP;AACA;AAXF;AAaD;;AACD,SAAOpB,GAAP;AACD,CArBD;AAwBA;AACA;AACA;AACA;;;AACArB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BY,SAA/B,CAAyCyB,eAAzC,GAA2D,YAAW;AACpE,MAAIC,MAAM,GAAG,IAAInD,IAAI,CAACoD,YAAT,EAAb;AACA5C,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BwC,uBAA/B,CAAuD,IAAvD,EAA6DF,MAA7D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9C,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BwC,uBAA/B,GAAyD,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACjF,MAAIrB,CAAC,GAAG0B,SAAR;AACA1B,EAAAA,CAAC,GAAGyB,OAAO,CAACE,QAAR,EAAJ;;AACA,MAAI3B,CAAC,CAAC4B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE7B,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGyB,OAAO,CAACK,SAAR,EAAJ;;AACA,MAAI9B,CAAC,CAAC4B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE7B,CAFF;AAID;AACF,CAhBD;AAmBA;AACA;AACA;AACA;;;AACAtB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BY,SAA/B,CAAyCgC,QAAzC,GAAoD,YAAW;AAC7D;AAAO;AAAuBzD,IAAAA,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAzB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BY,SAA/B,CAAyCsB,QAAzC,GAAoD,UAASF,KAAT,EAAgB;AAClE,SAAO7C,IAAI,CAACe,OAAL,CAAa8C,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChB,KAA3C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BY,SAA/B,CAAyCmC,SAAzC,GAAqD,YAAW;AAC9D;AAAO;AAAuB5D,IAAAA,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAzB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BY,SAA/B,CAAyCuB,SAAzC,GAAqD,UAASH,KAAT,EAAgB;AACnE,SAAO7C,IAAI,CAACe,OAAL,CAAa8C,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChB,KAA3C,CAAP;AACD,CAFD;;AAQA,IAAI7C,IAAI,CAACe,OAAL,CAAaS,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAhB,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCI,SAAlC,CAA4CC,QAA5C,GAAuD,UAASC,mBAAT,EAA8B;AACnF,WAAOnB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCK,QAAlC,CAA2CC,mBAA3C,EAAgE,IAAhE,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAnB,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCK,QAAlC,GAA6C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC1E,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,KAAK,EAAEhC,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADI;AAEXK,MAAAA,MAAM,EAAElC,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AAFG,KAAb;;AAKA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACI,oBAAJ,GAA2BN,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;AAGD;AACA;AACA;AACA;AACA;;;AACAvB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCe,iBAAlC,GAAsD,UAASC,KAAT,EAAgB;AACpE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIR,GAAG,GAAG,IAAIrB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA9B,EAAV;AACA,SAAOb,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCmB,2BAAlC,CAA8DX,GAA9D,EAAmES,MAAnE,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9B,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCmB,2BAAlC,GAAgE,UAASX,GAAT,EAAcS,MAAd,EAAsB;AACpF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAjB,QAAAA,GAAG,CAACkB,QAAJ,CAAaF,KAAb;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAjB,QAAAA,GAAG,CAACmB,SAAJ,CAAcH,KAAd;AACA;;AACF;AACEP,QAAAA,MAAM,CAACW,SAAP;AACA;AAXF;AAaD;;AACD,SAAOpB,GAAP;AACD,CArBD;AAwBA;AACA;AACA;AACA;;;AACArB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCI,SAAlC,CAA4CyB,eAA5C,GAA8D,YAAW;AACvE,MAAIC,MAAM,GAAG,IAAInD,IAAI,CAACoD,YAAT,EAAb;AACA5C,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCgC,uBAAlC,CAA0D,IAA1D,EAAgEF,MAAhE;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9C,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCgC,uBAAlC,GAA4D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACpF,MAAIrB,CAAC,GAAG0B,SAAR;AACA1B,EAAAA,CAAC,GAAGyB,OAAO,CAACE,QAAR,EAAJ;;AACA,MAAI3B,CAAC,CAAC4B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE7B,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAGyB,OAAO,CAACK,SAAR,EAAJ;;AACA,MAAI9B,CAAC,CAAC4B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE7B,CAFF;AAID;AACF,CAhBD;AAmBA;AACA;AACA;AACA;;;AACAtB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCI,SAAlC,CAA4CgC,QAA5C,GAAuD,YAAW;AAChE;AAAO;AAAuBzD,IAAAA,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAzB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCI,SAAlC,CAA4CsB,QAA5C,GAAuD,UAASF,KAAT,EAAgB;AACrE,SAAO7C,IAAI,CAACe,OAAL,CAAa8C,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChB,KAA3C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCI,SAAlC,CAA4CmC,SAA5C,GAAwD,YAAW;AACjE;AAAO;AAAuB5D,IAAAA,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAzB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BS,OAA1B,CAAkCI,SAAlC,CAA4CuB,SAA5C,GAAwD,UAASH,KAAT,EAAgB;AACtE,SAAO7C,IAAI,CAACe,OAAL,CAAa8C,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChB,KAA3C,CAAP;AACD,CAFD;;AAQA,IAAI7C,IAAI,CAACe,OAAL,CAAaS,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAhB,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmCG,SAAnC,CAA6CC,QAA7C,GAAwD,UAASC,mBAAT,EAA8B;AACpF,WAAOnB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmCI,QAAnC,CAA4CC,mBAA5C,EAAiE,IAAjE,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAnB,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmCI,QAAnC,GAA8C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC3E,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX+B,MAAAA,MAAM,EAAE9D,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AADG,KAAb;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACI,oBAAJ,GAA2BN,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;AACA;AACA;AACA;AACA;;;AACAvB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmCc,iBAAnC,GAAuD,UAASC,KAAT,EAAgB;AACrE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIR,GAAG,GAAG,IAAIrB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA9B,EAAV;AACA,SAAOd,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmCkB,2BAAnC,CAA+DX,GAA/D,EAAoES,MAApE,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9B,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmCkB,2BAAnC,GAAiE,UAASX,GAAT,EAAcS,MAAd,EAAsB;AACrF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAjB,QAAAA,GAAG,CAACkC,MAAJ,CAAWlB,KAAX;AACA;;AACF;AACEP,QAAAA,MAAM,CAACW,SAAP;AACA;AAPF;AASD;;AACD,SAAOpB,GAAP;AACD,CAjBD;AAoBA;AACA;AACA;AACA;;;AACArB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmCG,SAAnC,CAA6CyB,eAA7C,GAA+D,YAAW;AACxE,MAAIC,MAAM,GAAG,IAAInD,IAAI,CAACoD,YAAT,EAAb;AACA5C,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmC+B,uBAAnC,CAA2D,IAA3D,EAAiEF,MAAjE;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9C,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmC+B,uBAAnC,GAA6D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACrF,MAAIrB,CAAC,GAAG0B,SAAR;AACA1B,EAAAA,CAAC,GAAGyB,OAAO,CAACS,MAAR,EAAJ;;AACA,MAAIlC,CAAC,CAAC4B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE7B,CAFF;AAID;AACF,CATD;AAYA;AACA;AACA;AACA;;;AACAtB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmCG,SAAnC,CAA6CuC,MAA7C,GAAsD,YAAW;AAC/D;AAAO;AAAuBhE,IAAAA,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAzB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BU,QAA1B,CAAmCG,SAAnC,CAA6CsC,MAA7C,GAAsD,UAASlB,KAAT,EAAgB;AACpE,SAAO7C,IAAI,CAACe,OAAL,CAAa8C,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChB,KAA3C,CAAP;AACD,CAFD;;AAQA,IAAI7C,IAAI,CAACe,OAAL,CAAaS,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAhB,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmCE,SAAnC,CAA6CC,QAA7C,GAAwD,UAASC,mBAAT,EAA8B;AACpF,WAAOnB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmCG,QAAnC,CAA4CC,mBAA5C,EAAiE,IAAjE,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAnB,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmCG,QAAnC,GAA8C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC3E,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXkC,MAAAA,GAAG,EAAEjE,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AADM,KAAb;;AAIA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACI,oBAAJ,GAA2BN,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GATD;AAUC;AAGD;AACA;AACA;AACA;AACA;;;AACAvB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmCa,iBAAnC,GAAuD,UAASC,KAAT,EAAgB;AACrE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIR,GAAG,GAAG,IAAIrB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA9B,EAAV;AACA,SAAOf,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmCiB,2BAAnC,CAA+DX,GAA/D,EAAoES,MAApE,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9B,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmCiB,2BAAnC,GAAiE,UAASX,GAAT,EAAcS,MAAd,EAAsB;AACrF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAjB,QAAAA,GAAG,CAACqC,MAAJ,CAAWrB,KAAX;AACA;;AACF;AACEP,QAAAA,MAAM,CAACW,SAAP;AACA;AAPF;AASD;;AACD,SAAOpB,GAAP;AACD,CAjBD;AAoBA;AACA;AACA;AACA;;;AACArB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmCE,SAAnC,CAA6CyB,eAA7C,GAA+D,YAAW;AACxE,MAAIC,MAAM,GAAG,IAAInD,IAAI,CAACoD,YAAT,EAAb;AACA5C,EAAAA,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmC8B,uBAAnC,CAA2D,IAA3D,EAAiEF,MAAjE;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9C,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmC8B,uBAAnC,GAA6D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACrF,MAAIrB,CAAC,GAAG0B,SAAR;AACA1B,EAAAA,CAAC,GAAGyB,OAAO,CAACY,MAAR,EAAJ;;AACA,MAAIrC,CAAC,CAAC4B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEE7B,CAFF;AAID;AACF,CATD;AAYA;AACA;AACA;AACA;;;AACAtB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmCE,SAAnC,CAA6C0C,MAA7C,GAAsD,YAAW;AAC/D;AAAO;AAAuBnE,IAAAA,IAAI,CAACe,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAzB,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BW,QAA1B,CAAmCE,SAAnC,CAA6CyC,MAA7C,GAAsD,UAASrB,KAAT,EAAgB;AACpE,SAAO7C,IAAI,CAACe,OAAL,CAAa8C,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2ChB,KAA3C,CAAP;AACD,CAFD;;AAKA3C,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmB6D,OAAnB,EAA4B5D,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkBC,OAA9C","sourcesContent":["// source: cosmos/base/v1beta1/coin.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');\ngoog.object.extend(proto, gogoproto_gogo_pb);\ngoog.exportSymbol('proto.cosmos.base.v1beta1.Coin', null, global);\ngoog.exportSymbol('proto.cosmos.base.v1beta1.DecCoin', null, global);\ngoog.exportSymbol('proto.cosmos.base.v1beta1.DecProto', null, global);\ngoog.exportSymbol('proto.cosmos.base.v1beta1.IntProto', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.cosmos.base.v1beta1.Coin = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.cosmos.base.v1beta1.Coin, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.v1beta1.Coin.displayName = 'proto.cosmos.base.v1beta1.Coin';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.cosmos.base.v1beta1.DecCoin = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.cosmos.base.v1beta1.DecCoin, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.v1beta1.DecCoin.displayName = 'proto.cosmos.base.v1beta1.DecCoin';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.cosmos.base.v1beta1.IntProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.cosmos.base.v1beta1.IntProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.v1beta1.IntProto.displayName = 'proto.cosmos.base.v1beta1.IntProto';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.cosmos.base.v1beta1.DecProto = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.cosmos.base.v1beta1.DecProto, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.base.v1beta1.DecProto.displayName = 'proto.cosmos.base.v1beta1.DecProto';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.cosmos.base.v1beta1.Coin.prototype.toObject = function(opt_includeInstance) {\n  return proto.cosmos.base.v1beta1.Coin.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.cosmos.base.v1beta1.Coin} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.v1beta1.Coin.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    denom: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.v1beta1.Coin}\n */\nproto.cosmos.base.v1beta1.Coin.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.v1beta1.Coin;\n  return proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.v1beta1.Coin} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.v1beta1.Coin}\n */\nproto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDenom(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.cosmos.base.v1beta1.Coin.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.v1beta1.Coin} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDenom();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string denom = 1;\n * @return {string}\n */\nproto.cosmos.base.v1beta1.Coin.prototype.getDenom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.Coin} returns this\n */\nproto.cosmos.base.v1beta1.Coin.prototype.setDenom = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string amount = 2;\n * @return {string}\n */\nproto.cosmos.base.v1beta1.Coin.prototype.getAmount = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.Coin} returns this\n */\nproto.cosmos.base.v1beta1.Coin.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.cosmos.base.v1beta1.DecCoin.prototype.toObject = function(opt_includeInstance) {\n  return proto.cosmos.base.v1beta1.DecCoin.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.cosmos.base.v1beta1.DecCoin} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.v1beta1.DecCoin.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    denom: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    amount: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.v1beta1.DecCoin}\n */\nproto.cosmos.base.v1beta1.DecCoin.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.v1beta1.DecCoin;\n  return proto.cosmos.base.v1beta1.DecCoin.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.v1beta1.DecCoin} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.v1beta1.DecCoin}\n */\nproto.cosmos.base.v1beta1.DecCoin.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDenom(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.cosmos.base.v1beta1.DecCoin.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.v1beta1.DecCoin.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.v1beta1.DecCoin} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.v1beta1.DecCoin.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDenom();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string denom = 1;\n * @return {string}\n */\nproto.cosmos.base.v1beta1.DecCoin.prototype.getDenom = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.DecCoin} returns this\n */\nproto.cosmos.base.v1beta1.DecCoin.prototype.setDenom = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string amount = 2;\n * @return {string}\n */\nproto.cosmos.base.v1beta1.DecCoin.prototype.getAmount = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.DecCoin} returns this\n */\nproto.cosmos.base.v1beta1.DecCoin.prototype.setAmount = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.cosmos.base.v1beta1.IntProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.cosmos.base.v1beta1.IntProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.cosmos.base.v1beta1.IntProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.v1beta1.IntProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pb_int: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.v1beta1.IntProto}\n */\nproto.cosmos.base.v1beta1.IntProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.v1beta1.IntProto;\n  return proto.cosmos.base.v1beta1.IntProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.v1beta1.IntProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.v1beta1.IntProto}\n */\nproto.cosmos.base.v1beta1.IntProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.cosmos.base.v1beta1.IntProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.v1beta1.IntProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.v1beta1.IntProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.v1beta1.IntProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInt();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string int = 1;\n * @return {string}\n */\nproto.cosmos.base.v1beta1.IntProto.prototype.getInt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.IntProto} returns this\n */\nproto.cosmos.base.v1beta1.IntProto.prototype.setInt = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.cosmos.base.v1beta1.DecProto.prototype.toObject = function(opt_includeInstance) {\n  return proto.cosmos.base.v1beta1.DecProto.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.cosmos.base.v1beta1.DecProto} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.v1beta1.DecProto.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    dec: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.base.v1beta1.DecProto}\n */\nproto.cosmos.base.v1beta1.DecProto.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.base.v1beta1.DecProto;\n  return proto.cosmos.base.v1beta1.DecProto.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.base.v1beta1.DecProto} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.base.v1beta1.DecProto}\n */\nproto.cosmos.base.v1beta1.DecProto.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDec(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.cosmos.base.v1beta1.DecProto.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.base.v1beta1.DecProto.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.base.v1beta1.DecProto} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.base.v1beta1.DecProto.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getDec();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string dec = 1;\n * @return {string}\n */\nproto.cosmos.base.v1beta1.DecProto.prototype.getDec = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.cosmos.base.v1beta1.DecProto} returns this\n */\nproto.cosmos.base.v1beta1.DecProto.prototype.setDec = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.cosmos.base.v1beta1);\n"]},"metadata":{},"sourceType":"script"}