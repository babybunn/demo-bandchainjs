{"ast":null,"code":"// package: oracle.v1\n// file: oracle/v1/query.proto\nvar oracle_v1_query_pb = require(\"../../oracle/v1/query_pb\");\n\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar Query = function () {\n  function Query() {}\n\n  Query.serviceName = \"oracle.v1.Query\";\n  return Query;\n}();\n\nQuery.Counts = {\n  methodName: \"Counts\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryCountsRequest,\n  responseType: oracle_v1_query_pb.QueryCountsResponse\n};\nQuery.Data = {\n  methodName: \"Data\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryDataRequest,\n  responseType: oracle_v1_query_pb.QueryDataResponse\n};\nQuery.DataSource = {\n  methodName: \"DataSource\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryDataSourceRequest,\n  responseType: oracle_v1_query_pb.QueryDataSourceResponse\n};\nQuery.OracleScript = {\n  methodName: \"OracleScript\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryOracleScriptRequest,\n  responseType: oracle_v1_query_pb.QueryOracleScriptResponse\n};\nQuery.Request = {\n  methodName: \"Request\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryRequestRequest,\n  responseType: oracle_v1_query_pb.QueryRequestResponse\n};\nQuery.PendingRequests = {\n  methodName: \"PendingRequests\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryPendingRequestsRequest,\n  responseType: oracle_v1_query_pb.QueryPendingRequestsResponse\n};\nQuery.Validator = {\n  methodName: \"Validator\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryValidatorRequest,\n  responseType: oracle_v1_query_pb.QueryValidatorResponse\n};\nQuery.IsReporter = {\n  methodName: \"IsReporter\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryIsReporterRequest,\n  responseType: oracle_v1_query_pb.QueryIsReporterResponse\n};\nQuery.Reporters = {\n  methodName: \"Reporters\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryReportersRequest,\n  responseType: oracle_v1_query_pb.QueryReportersResponse\n};\nQuery.ActiveValidators = {\n  methodName: \"ActiveValidators\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryActiveValidatorsRequest,\n  responseType: oracle_v1_query_pb.QueryActiveValidatorsResponse\n};\nQuery.Params = {\n  methodName: \"Params\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryParamsRequest,\n  responseType: oracle_v1_query_pb.QueryParamsResponse\n};\nQuery.RequestSearch = {\n  methodName: \"RequestSearch\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryRequestSearchRequest,\n  responseType: oracle_v1_query_pb.QueryRequestSearchResponse\n};\nQuery.RequestPrice = {\n  methodName: \"RequestPrice\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryRequestPriceRequest,\n  responseType: oracle_v1_query_pb.QueryRequestPriceResponse\n};\nQuery.RequestVerification = {\n  methodName: \"RequestVerification\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryRequestVerificationRequest,\n  responseType: oracle_v1_query_pb.QueryRequestVerificationResponse\n};\nexports.Query = Query;\n\nfunction QueryClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nQueryClient.prototype.counts = function counts(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.Counts, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.data = function data(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.Data, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.dataSource = function dataSource(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.DataSource, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.oracleScript = function oracleScript(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.OracleScript, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.request = function request(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.Request, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.pendingRequests = function pendingRequests(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.PendingRequests, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.validator = function validator(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.Validator, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.isReporter = function isReporter(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.IsReporter, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.reporters = function reporters(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.Reporters, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.activeValidators = function activeValidators(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.ActiveValidators, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.params = function params(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.Params, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.requestSearch = function requestSearch(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.RequestSearch, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.requestPrice = function requestPrice(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.RequestPrice, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.requestVerification = function requestVerification(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Query.RequestVerification, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.QueryClient = QueryClient;","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/client/node_modules/@bandprotocol/bandchain.js/proto/oracle/v1/query_pb_service.js"],"names":["oracle_v1_query_pb","require","grpc","Query","serviceName","Counts","methodName","service","requestStream","responseStream","requestType","QueryCountsRequest","responseType","QueryCountsResponse","Data","QueryDataRequest","QueryDataResponse","DataSource","QueryDataSourceRequest","QueryDataSourceResponse","OracleScript","QueryOracleScriptRequest","QueryOracleScriptResponse","Request","QueryRequestRequest","QueryRequestResponse","PendingRequests","QueryPendingRequestsRequest","QueryPendingRequestsResponse","Validator","QueryValidatorRequest","QueryValidatorResponse","IsReporter","QueryIsReporterRequest","QueryIsReporterResponse","Reporters","QueryReportersRequest","QueryReportersResponse","ActiveValidators","QueryActiveValidatorsRequest","QueryActiveValidatorsResponse","Params","QueryParamsRequest","QueryParamsResponse","RequestSearch","QueryRequestSearchRequest","QueryRequestSearchResponse","RequestPrice","QueryRequestPriceRequest","QueryRequestPriceResponse","RequestVerification","QueryRequestVerificationRequest","QueryRequestVerificationResponse","exports","QueryClient","serviceHost","options","prototype","counts","requestMessage","metadata","callback","arguments","length","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","message","cancel","close","data","dataSource","oracleScript","pendingRequests","validator","isReporter","reporters","activeValidators","params","requestSearch","requestPrice","requestVerification"],"mappings":"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","sourcesContent":["// package: oracle.v1\n// file: oracle/v1/query.proto\n\nvar oracle_v1_query_pb = require(\"../../oracle/v1/query_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar Query = (function () {\n  function Query() {}\n  Query.serviceName = \"oracle.v1.Query\";\n  return Query;\n}());\n\nQuery.Counts = {\n  methodName: \"Counts\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryCountsRequest,\n  responseType: oracle_v1_query_pb.QueryCountsResponse\n};\n\nQuery.Data = {\n  methodName: \"Data\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryDataRequest,\n  responseType: oracle_v1_query_pb.QueryDataResponse\n};\n\nQuery.DataSource = {\n  methodName: \"DataSource\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryDataSourceRequest,\n  responseType: oracle_v1_query_pb.QueryDataSourceResponse\n};\n\nQuery.OracleScript = {\n  methodName: \"OracleScript\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryOracleScriptRequest,\n  responseType: oracle_v1_query_pb.QueryOracleScriptResponse\n};\n\nQuery.Request = {\n  methodName: \"Request\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryRequestRequest,\n  responseType: oracle_v1_query_pb.QueryRequestResponse\n};\n\nQuery.PendingRequests = {\n  methodName: \"PendingRequests\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryPendingRequestsRequest,\n  responseType: oracle_v1_query_pb.QueryPendingRequestsResponse\n};\n\nQuery.Validator = {\n  methodName: \"Validator\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryValidatorRequest,\n  responseType: oracle_v1_query_pb.QueryValidatorResponse\n};\n\nQuery.IsReporter = {\n  methodName: \"IsReporter\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryIsReporterRequest,\n  responseType: oracle_v1_query_pb.QueryIsReporterResponse\n};\n\nQuery.Reporters = {\n  methodName: \"Reporters\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryReportersRequest,\n  responseType: oracle_v1_query_pb.QueryReportersResponse\n};\n\nQuery.ActiveValidators = {\n  methodName: \"ActiveValidators\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryActiveValidatorsRequest,\n  responseType: oracle_v1_query_pb.QueryActiveValidatorsResponse\n};\n\nQuery.Params = {\n  methodName: \"Params\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryParamsRequest,\n  responseType: oracle_v1_query_pb.QueryParamsResponse\n};\n\nQuery.RequestSearch = {\n  methodName: \"RequestSearch\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryRequestSearchRequest,\n  responseType: oracle_v1_query_pb.QueryRequestSearchResponse\n};\n\nQuery.RequestPrice = {\n  methodName: \"RequestPrice\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryRequestPriceRequest,\n  responseType: oracle_v1_query_pb.QueryRequestPriceResponse\n};\n\nQuery.RequestVerification = {\n  methodName: \"RequestVerification\",\n  service: Query,\n  requestStream: false,\n  responseStream: false,\n  requestType: oracle_v1_query_pb.QueryRequestVerificationRequest,\n  responseType: oracle_v1_query_pb.QueryRequestVerificationResponse\n};\n\nexports.Query = Query;\n\nfunction QueryClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nQueryClient.prototype.counts = function counts(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.Counts, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.data = function data(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.Data, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.dataSource = function dataSource(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.DataSource, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.oracleScript = function oracleScript(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.OracleScript, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.request = function request(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.Request, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.pendingRequests = function pendingRequests(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.PendingRequests, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.validator = function validator(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.Validator, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.isReporter = function isReporter(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.IsReporter, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.reporters = function reporters(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.Reporters, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.activeValidators = function activeValidators(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.ActiveValidators, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.params = function params(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.Params, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.requestSearch = function requestSearch(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.RequestSearch, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.requestPrice = function requestPrice(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.RequestPrice, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nQueryClient.prototype.requestVerification = function requestVerification(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Query.RequestVerification, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.QueryClient = QueryClient;\n\n"]},"metadata":{},"sourceType":"script"}