{"ast":null,"code":"// package: cosmos.tx.v1beta1\n// file: cosmos/tx/v1beta1/service.proto\nvar cosmos_tx_v1beta1_service_pb = require(\"../../../cosmos/tx/v1beta1/service_pb\");\n\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar Service = function () {\n  function Service() {}\n\n  Service.serviceName = \"cosmos.tx.v1beta1.Service\";\n  return Service;\n}();\n\nService.Simulate = {\n  methodName: \"Simulate\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_tx_v1beta1_service_pb.SimulateRequest,\n  responseType: cosmos_tx_v1beta1_service_pb.SimulateResponse\n};\nService.GetTx = {\n  methodName: \"GetTx\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_tx_v1beta1_service_pb.GetTxRequest,\n  responseType: cosmos_tx_v1beta1_service_pb.GetTxResponse\n};\nService.BroadcastTx = {\n  methodName: \"BroadcastTx\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_tx_v1beta1_service_pb.BroadcastTxRequest,\n  responseType: cosmos_tx_v1beta1_service_pb.BroadcastTxResponse\n};\nService.GetTxsEvent = {\n  methodName: \"GetTxsEvent\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_tx_v1beta1_service_pb.GetTxsEventRequest,\n  responseType: cosmos_tx_v1beta1_service_pb.GetTxsEventResponse\n};\nexports.Service = Service;\n\nfunction ServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nServiceClient.prototype.simulate = function simulate(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Service.Simulate, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getTx = function getTx(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Service.GetTx, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.broadcastTx = function broadcastTx(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Service.BroadcastTx, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getTxsEvent = function getTxsEvent(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n\n  var client = grpc.unary(Service.GetTxsEvent, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.ServiceClient = ServiceClient;","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/node_modules/@bandprotocol/bandchain.js/proto/cosmos/tx/v1beta1/service_pb_service.js"],"names":["cosmos_tx_v1beta1_service_pb","require","grpc","Service","serviceName","Simulate","methodName","service","requestStream","responseStream","requestType","SimulateRequest","responseType","SimulateResponse","GetTx","GetTxRequest","GetTxResponse","BroadcastTx","BroadcastTxRequest","BroadcastTxResponse","GetTxsEvent","GetTxsEventRequest","GetTxsEventResponse","exports","ServiceClient","serviceHost","options","prototype","simulate","requestMessage","metadata","callback","arguments","length","client","unary","request","host","transport","debug","onEnd","response","status","Code","OK","err","Error","statusMessage","code","trailers","message","cancel","close","getTx","broadcastTx","getTxsEvent"],"mappings":"AAAA;AACA;AAEA,IAAIA,4BAA4B,GAAGC,OAAO,CAAC,uCAAD,CAA1C;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,0BAAD,CAAP,CAAoCC,IAA/C;;AAEA,IAAIC,OAAO,GAAI,YAAY;AACzB,WAASA,OAAT,GAAmB,CAAE;;AACrBA,EAAAA,OAAO,CAACC,WAAR,GAAsB,2BAAtB;AACA,SAAOD,OAAP;AACD,CAJc,EAAf;;AAMAA,OAAO,CAACE,QAAR,GAAmB;AACjBC,EAAAA,UAAU,EAAE,UADK;AAEjBC,EAAAA,OAAO,EAAEJ,OAFQ;AAGjBK,EAAAA,aAAa,EAAE,KAHE;AAIjBC,EAAAA,cAAc,EAAE,KAJC;AAKjBC,EAAAA,WAAW,EAAEV,4BAA4B,CAACW,eALzB;AAMjBC,EAAAA,YAAY,EAAEZ,4BAA4B,CAACa;AAN1B,CAAnB;AASAV,OAAO,CAACW,KAAR,GAAgB;AACdR,EAAAA,UAAU,EAAE,OADE;AAEdC,EAAAA,OAAO,EAAEJ,OAFK;AAGdK,EAAAA,aAAa,EAAE,KAHD;AAIdC,EAAAA,cAAc,EAAE,KAJF;AAKdC,EAAAA,WAAW,EAAEV,4BAA4B,CAACe,YAL5B;AAMdH,EAAAA,YAAY,EAAEZ,4BAA4B,CAACgB;AAN7B,CAAhB;AASAb,OAAO,CAACc,WAAR,GAAsB;AACpBX,EAAAA,UAAU,EAAE,aADQ;AAEpBC,EAAAA,OAAO,EAAEJ,OAFW;AAGpBK,EAAAA,aAAa,EAAE,KAHK;AAIpBC,EAAAA,cAAc,EAAE,KAJI;AAKpBC,EAAAA,WAAW,EAAEV,4BAA4B,CAACkB,kBALtB;AAMpBN,EAAAA,YAAY,EAAEZ,4BAA4B,CAACmB;AANvB,CAAtB;AASAhB,OAAO,CAACiB,WAAR,GAAsB;AACpBd,EAAAA,UAAU,EAAE,aADQ;AAEpBC,EAAAA,OAAO,EAAEJ,OAFW;AAGpBK,EAAAA,aAAa,EAAE,KAHK;AAIpBC,EAAAA,cAAc,EAAE,KAJI;AAKpBC,EAAAA,WAAW,EAAEV,4BAA4B,CAACqB,kBALtB;AAMpBT,EAAAA,YAAY,EAAEZ,4BAA4B,CAACsB;AANvB,CAAtB;AASAC,OAAO,CAACpB,OAAR,GAAkBA,OAAlB;;AAEA,SAASqB,aAAT,CAAuBC,WAAvB,EAAoCC,OAApC,EAA6C;AAC3C,OAAKD,WAAL,GAAmBA,WAAnB;AACA,OAAKC,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACD;;AAEDF,aAAa,CAACG,SAAd,CAAwBC,QAAxB,GAAmC,SAASA,QAAT,CAAkBC,cAAlB,EAAkCC,QAAlC,EAA4CC,QAA5C,EAAsD;AACvF,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BF,IAAAA,QAAQ,GAAGC,SAAS,CAAC,CAAD,CAApB;AACD;;AACD,MAAIE,MAAM,GAAGhC,IAAI,CAACiC,KAAL,CAAWhC,OAAO,CAACE,QAAnB,EAA6B;AACxC+B,IAAAA,OAAO,EAAEP,cAD+B;AAExCQ,IAAAA,IAAI,EAAE,KAAKZ,WAF6B;AAGxCK,IAAAA,QAAQ,EAAEA,QAH8B;AAIxCQ,IAAAA,SAAS,EAAE,KAAKZ,OAAL,CAAaY,SAJgB;AAKxCC,IAAAA,KAAK,EAAE,KAAKb,OAAL,CAAaa,KALoB;AAMxCC,IAAAA,KAAK,EAAE,UAAUC,QAAV,EAAoB;AACzB,UAAIV,QAAJ,EAAc;AACZ,YAAIU,QAAQ,CAACC,MAAT,KAAoBxC,IAAI,CAACyC,IAAL,CAAUC,EAAlC,EAAsC;AACpC,cAAIC,GAAG,GAAG,IAAIC,KAAJ,CAAUL,QAAQ,CAACM,aAAnB,CAAV;AACAF,UAAAA,GAAG,CAACG,IAAJ,GAAWP,QAAQ,CAACC,MAApB;AACAG,UAAAA,GAAG,CAACf,QAAJ,GAAeW,QAAQ,CAACQ,QAAxB;AACAlB,UAAAA,QAAQ,CAACc,GAAD,EAAM,IAAN,CAAR;AACD,SALD,MAKO;AACLd,UAAAA,QAAQ,CAAC,IAAD,EAAOU,QAAQ,CAACS,OAAhB,CAAR;AACD;AACF;AACF;AAjBuC,GAA7B,CAAb;AAmBA,SAAO;AACLC,IAAAA,MAAM,EAAE,YAAY;AAClBpB,MAAAA,QAAQ,GAAG,IAAX;AACAG,MAAAA,MAAM,CAACkB,KAAP;AACD;AAJI,GAAP;AAMD,CA7BD;;AA+BA5B,aAAa,CAACG,SAAd,CAAwB0B,KAAxB,GAAgC,SAASA,KAAT,CAAexB,cAAf,EAA+BC,QAA/B,EAAyCC,QAAzC,EAAmD;AACjF,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BF,IAAAA,QAAQ,GAAGC,SAAS,CAAC,CAAD,CAApB;AACD;;AACD,MAAIE,MAAM,GAAGhC,IAAI,CAACiC,KAAL,CAAWhC,OAAO,CAACW,KAAnB,EAA0B;AACrCsB,IAAAA,OAAO,EAAEP,cAD4B;AAErCQ,IAAAA,IAAI,EAAE,KAAKZ,WAF0B;AAGrCK,IAAAA,QAAQ,EAAEA,QAH2B;AAIrCQ,IAAAA,SAAS,EAAE,KAAKZ,OAAL,CAAaY,SAJa;AAKrCC,IAAAA,KAAK,EAAE,KAAKb,OAAL,CAAaa,KALiB;AAMrCC,IAAAA,KAAK,EAAE,UAAUC,QAAV,EAAoB;AACzB,UAAIV,QAAJ,EAAc;AACZ,YAAIU,QAAQ,CAACC,MAAT,KAAoBxC,IAAI,CAACyC,IAAL,CAAUC,EAAlC,EAAsC;AACpC,cAAIC,GAAG,GAAG,IAAIC,KAAJ,CAAUL,QAAQ,CAACM,aAAnB,CAAV;AACAF,UAAAA,GAAG,CAACG,IAAJ,GAAWP,QAAQ,CAACC,MAApB;AACAG,UAAAA,GAAG,CAACf,QAAJ,GAAeW,QAAQ,CAACQ,QAAxB;AACAlB,UAAAA,QAAQ,CAACc,GAAD,EAAM,IAAN,CAAR;AACD,SALD,MAKO;AACLd,UAAAA,QAAQ,CAAC,IAAD,EAAOU,QAAQ,CAACS,OAAhB,CAAR;AACD;AACF;AACF;AAjBoC,GAA1B,CAAb;AAmBA,SAAO;AACLC,IAAAA,MAAM,EAAE,YAAY;AAClBpB,MAAAA,QAAQ,GAAG,IAAX;AACAG,MAAAA,MAAM,CAACkB,KAAP;AACD;AAJI,GAAP;AAMD,CA7BD;;AA+BA5B,aAAa,CAACG,SAAd,CAAwB2B,WAAxB,GAAsC,SAASA,WAAT,CAAqBzB,cAArB,EAAqCC,QAArC,EAA+CC,QAA/C,EAAyD;AAC7F,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BF,IAAAA,QAAQ,GAAGC,SAAS,CAAC,CAAD,CAApB;AACD;;AACD,MAAIE,MAAM,GAAGhC,IAAI,CAACiC,KAAL,CAAWhC,OAAO,CAACc,WAAnB,EAAgC;AAC3CmB,IAAAA,OAAO,EAAEP,cADkC;AAE3CQ,IAAAA,IAAI,EAAE,KAAKZ,WAFgC;AAG3CK,IAAAA,QAAQ,EAAEA,QAHiC;AAI3CQ,IAAAA,SAAS,EAAE,KAAKZ,OAAL,CAAaY,SAJmB;AAK3CC,IAAAA,KAAK,EAAE,KAAKb,OAAL,CAAaa,KALuB;AAM3CC,IAAAA,KAAK,EAAE,UAAUC,QAAV,EAAoB;AACzB,UAAIV,QAAJ,EAAc;AACZ,YAAIU,QAAQ,CAACC,MAAT,KAAoBxC,IAAI,CAACyC,IAAL,CAAUC,EAAlC,EAAsC;AACpC,cAAIC,GAAG,GAAG,IAAIC,KAAJ,CAAUL,QAAQ,CAACM,aAAnB,CAAV;AACAF,UAAAA,GAAG,CAACG,IAAJ,GAAWP,QAAQ,CAACC,MAApB;AACAG,UAAAA,GAAG,CAACf,QAAJ,GAAeW,QAAQ,CAACQ,QAAxB;AACAlB,UAAAA,QAAQ,CAACc,GAAD,EAAM,IAAN,CAAR;AACD,SALD,MAKO;AACLd,UAAAA,QAAQ,CAAC,IAAD,EAAOU,QAAQ,CAACS,OAAhB,CAAR;AACD;AACF;AACF;AAjB0C,GAAhC,CAAb;AAmBA,SAAO;AACLC,IAAAA,MAAM,EAAE,YAAY;AAClBpB,MAAAA,QAAQ,GAAG,IAAX;AACAG,MAAAA,MAAM,CAACkB,KAAP;AACD;AAJI,GAAP;AAMD,CA7BD;;AA+BA5B,aAAa,CAACG,SAAd,CAAwB4B,WAAxB,GAAsC,SAASA,WAAT,CAAqB1B,cAArB,EAAqCC,QAArC,EAA+CC,QAA/C,EAAyD;AAC7F,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BF,IAAAA,QAAQ,GAAGC,SAAS,CAAC,CAAD,CAApB;AACD;;AACD,MAAIE,MAAM,GAAGhC,IAAI,CAACiC,KAAL,CAAWhC,OAAO,CAACiB,WAAnB,EAAgC;AAC3CgB,IAAAA,OAAO,EAAEP,cADkC;AAE3CQ,IAAAA,IAAI,EAAE,KAAKZ,WAFgC;AAG3CK,IAAAA,QAAQ,EAAEA,QAHiC;AAI3CQ,IAAAA,SAAS,EAAE,KAAKZ,OAAL,CAAaY,SAJmB;AAK3CC,IAAAA,KAAK,EAAE,KAAKb,OAAL,CAAaa,KALuB;AAM3CC,IAAAA,KAAK,EAAE,UAAUC,QAAV,EAAoB;AACzB,UAAIV,QAAJ,EAAc;AACZ,YAAIU,QAAQ,CAACC,MAAT,KAAoBxC,IAAI,CAACyC,IAAL,CAAUC,EAAlC,EAAsC;AACpC,cAAIC,GAAG,GAAG,IAAIC,KAAJ,CAAUL,QAAQ,CAACM,aAAnB,CAAV;AACAF,UAAAA,GAAG,CAACG,IAAJ,GAAWP,QAAQ,CAACC,MAApB;AACAG,UAAAA,GAAG,CAACf,QAAJ,GAAeW,QAAQ,CAACQ,QAAxB;AACAlB,UAAAA,QAAQ,CAACc,GAAD,EAAM,IAAN,CAAR;AACD,SALD,MAKO;AACLd,UAAAA,QAAQ,CAAC,IAAD,EAAOU,QAAQ,CAACS,OAAhB,CAAR;AACD;AACF;AACF;AAjB0C,GAAhC,CAAb;AAmBA,SAAO;AACLC,IAAAA,MAAM,EAAE,YAAY;AAClBpB,MAAAA,QAAQ,GAAG,IAAX;AACAG,MAAAA,MAAM,CAACkB,KAAP;AACD;AAJI,GAAP;AAMD,CA7BD;;AA+BA7B,OAAO,CAACC,aAAR,GAAwBA,aAAxB","sourcesContent":["// package: cosmos.tx.v1beta1\n// file: cosmos/tx/v1beta1/service.proto\n\nvar cosmos_tx_v1beta1_service_pb = require(\"../../../cosmos/tx/v1beta1/service_pb\");\nvar grpc = require(\"@improbable-eng/grpc-web\").grpc;\n\nvar Service = (function () {\n  function Service() {}\n  Service.serviceName = \"cosmos.tx.v1beta1.Service\";\n  return Service;\n}());\n\nService.Simulate = {\n  methodName: \"Simulate\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_tx_v1beta1_service_pb.SimulateRequest,\n  responseType: cosmos_tx_v1beta1_service_pb.SimulateResponse\n};\n\nService.GetTx = {\n  methodName: \"GetTx\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_tx_v1beta1_service_pb.GetTxRequest,\n  responseType: cosmos_tx_v1beta1_service_pb.GetTxResponse\n};\n\nService.BroadcastTx = {\n  methodName: \"BroadcastTx\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_tx_v1beta1_service_pb.BroadcastTxRequest,\n  responseType: cosmos_tx_v1beta1_service_pb.BroadcastTxResponse\n};\n\nService.GetTxsEvent = {\n  methodName: \"GetTxsEvent\",\n  service: Service,\n  requestStream: false,\n  responseStream: false,\n  requestType: cosmos_tx_v1beta1_service_pb.GetTxsEventRequest,\n  responseType: cosmos_tx_v1beta1_service_pb.GetTxsEventResponse\n};\n\nexports.Service = Service;\n\nfunction ServiceClient(serviceHost, options) {\n  this.serviceHost = serviceHost;\n  this.options = options || {};\n}\n\nServiceClient.prototype.simulate = function simulate(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.Simulate, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getTx = function getTx(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.GetTx, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.broadcastTx = function broadcastTx(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.BroadcastTx, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nServiceClient.prototype.getTxsEvent = function getTxsEvent(requestMessage, metadata, callback) {\n  if (arguments.length === 2) {\n    callback = arguments[1];\n  }\n  var client = grpc.unary(Service.GetTxsEvent, {\n    request: requestMessage,\n    host: this.serviceHost,\n    metadata: metadata,\n    transport: this.options.transport,\n    debug: this.options.debug,\n    onEnd: function (response) {\n      if (callback) {\n        if (response.status !== grpc.Code.OK) {\n          var err = new Error(response.statusMessage);\n          err.code = response.status;\n          err.metadata = response.trailers;\n          callback(err, null);\n        } else {\n          callback(null, response.message);\n        }\n      }\n    }\n  });\n  return {\n    cancel: function () {\n      callback = null;\n      client.close();\n    }\n  };\n};\n\nexports.ServiceClient = ServiceClient;\n\n"]},"metadata":{},"sourceType":"script"}