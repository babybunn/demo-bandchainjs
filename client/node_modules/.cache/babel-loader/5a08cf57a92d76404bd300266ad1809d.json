{"ast":null,"code":"// source: tendermint/p2p/types.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');\n\ngoog.object.extend(proto, gogoproto_gogo_pb);\ngoog.exportSymbol('proto.tendermint.p2p.DefaultNodeInfo', null, global);\ngoog.exportSymbol('proto.tendermint.p2p.DefaultNodeInfoOther', null, global);\ngoog.exportSymbol('proto.tendermint.p2p.NetAddress', null, global);\ngoog.exportSymbol('proto.tendermint.p2p.ProtocolVersion', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.tendermint.p2p.NetAddress = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.tendermint.p2p.NetAddress, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.p2p.NetAddress.displayName = 'proto.tendermint.p2p.NetAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tendermint.p2p.ProtocolVersion = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.tendermint.p2p.ProtocolVersion, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.p2p.ProtocolVersion.displayName = 'proto.tendermint.p2p.ProtocolVersion';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.tendermint.p2p.DefaultNodeInfo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.p2p.DefaultNodeInfo.displayName = 'proto.tendermint.p2p.DefaultNodeInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfoOther = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.tendermint.p2p.DefaultNodeInfoOther, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.p2p.DefaultNodeInfoOther.displayName = 'proto.tendermint.p2p.DefaultNodeInfoOther';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tendermint.p2p.NetAddress.prototype.toObject = function (opt_includeInstance) {\n    return proto.tendermint.p2p.NetAddress.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tendermint.p2p.NetAddress} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tendermint.p2p.NetAddress.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      ip: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      port: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.p2p.NetAddress}\n */\n\n\nproto.tendermint.p2p.NetAddress.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.p2p.NetAddress();\n  return proto.tendermint.p2p.NetAddress.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.p2p.NetAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.p2p.NetAddress}\n */\n\n\nproto.tendermint.p2p.NetAddress.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setIp(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint32();\n        msg.setPort(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.p2p.NetAddress.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.p2p.NetAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.p2p.NetAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tendermint.p2p.NetAddress.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getIp();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getPort();\n\n  if (f !== 0) {\n    writer.writeUint32(3, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.tendermint.p2p.NetAddress.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.NetAddress} returns this\n */\n\n\nproto.tendermint.p2p.NetAddress.prototype.setId = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string ip = 2;\n * @return {string}\n */\n\n\nproto.tendermint.p2p.NetAddress.prototype.getIp = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.NetAddress} returns this\n */\n\n\nproto.tendermint.p2p.NetAddress.prototype.setIp = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional uint32 port = 3;\n * @return {number}\n */\n\n\nproto.tendermint.p2p.NetAddress.prototype.getPort = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.p2p.NetAddress} returns this\n */\n\n\nproto.tendermint.p2p.NetAddress.prototype.setPort = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tendermint.p2p.ProtocolVersion.prototype.toObject = function (opt_includeInstance) {\n    return proto.tendermint.p2p.ProtocolVersion.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tendermint.p2p.ProtocolVersion} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tendermint.p2p.ProtocolVersion.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      p2p: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      block: jspb.Message.getFieldWithDefault(msg, 2, 0),\n      app: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.p2p.ProtocolVersion}\n */\n\n\nproto.tendermint.p2p.ProtocolVersion.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.p2p.ProtocolVersion();\n  return proto.tendermint.p2p.ProtocolVersion.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.p2p.ProtocolVersion} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.p2p.ProtocolVersion}\n */\n\n\nproto.tendermint.p2p.ProtocolVersion.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setP2p(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setBlock(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setApp(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.p2p.ProtocolVersion.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.p2p.ProtocolVersion.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.p2p.ProtocolVersion} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tendermint.p2p.ProtocolVersion.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getP2p();\n\n  if (f !== 0) {\n    writer.writeUint64(1, f);\n  }\n\n  f = message.getBlock();\n\n  if (f !== 0) {\n    writer.writeUint64(2, f);\n  }\n\n  f = message.getApp();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * optional uint64 p2p = 1;\n * @return {number}\n */\n\n\nproto.tendermint.p2p.ProtocolVersion.prototype.getP2p = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.p2p.ProtocolVersion} returns this\n */\n\n\nproto.tendermint.p2p.ProtocolVersion.prototype.setP2p = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional uint64 block = 2;\n * @return {number}\n */\n\n\nproto.tendermint.p2p.ProtocolVersion.prototype.getBlock = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.p2p.ProtocolVersion} returns this\n */\n\n\nproto.tendermint.p2p.ProtocolVersion.prototype.setBlock = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n/**\n * optional uint64 app = 3;\n * @return {number}\n */\n\n\nproto.tendermint.p2p.ProtocolVersion.prototype.getApp = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.p2p.ProtocolVersion} returns this\n */\n\n\nproto.tendermint.p2p.ProtocolVersion.prototype.setApp = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tendermint.p2p.DefaultNodeInfo.prototype.toObject = function (opt_includeInstance) {\n    return proto.tendermint.p2p.DefaultNodeInfo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tendermint.p2p.DefaultNodeInfo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tendermint.p2p.DefaultNodeInfo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      protocolVersion: (f = msg.getProtocolVersion()) && proto.tendermint.p2p.ProtocolVersion.toObject(includeInstance, f),\n      defaultNodeId: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      listenAddr: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      network: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      version: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      channels: msg.getChannels_asB64(),\n      moniker: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n      other: (f = msg.getOther()) && proto.tendermint.p2p.DefaultNodeInfoOther.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.p2p.DefaultNodeInfo}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.p2p.DefaultNodeInfo();\n  return proto.tendermint.p2p.DefaultNodeInfo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.p2p.DefaultNodeInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.p2p.DefaultNodeInfo}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.tendermint.p2p.ProtocolVersion();\n        reader.readMessage(value, proto.tendermint.p2p.ProtocolVersion.deserializeBinaryFromReader);\n        msg.setProtocolVersion(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setDefaultNodeId(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setListenAddr(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setNetwork(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setVersion(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setChannels(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMoniker(value);\n        break;\n\n      case 8:\n        var value = new proto.tendermint.p2p.DefaultNodeInfoOther();\n        reader.readMessage(value, proto.tendermint.p2p.DefaultNodeInfoOther.deserializeBinaryFromReader);\n        msg.setOther(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.p2p.DefaultNodeInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.p2p.DefaultNodeInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getProtocolVersion();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.tendermint.p2p.ProtocolVersion.serializeBinaryToWriter);\n  }\n\n  f = message.getDefaultNodeId();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getListenAddr();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getNetwork();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getVersion();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getChannels_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(6, f);\n  }\n\n  f = message.getMoniker();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n\n  f = message.getOther();\n\n  if (f != null) {\n    writer.writeMessage(8, f, proto.tendermint.p2p.DefaultNodeInfoOther.serializeBinaryToWriter);\n  }\n};\n/**\n * optional ProtocolVersion protocol_version = 1;\n * @return {?proto.tendermint.p2p.ProtocolVersion}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getProtocolVersion = function () {\n  return (\n    /** @type{?proto.tendermint.p2p.ProtocolVersion} */\n    jspb.Message.getWrapperField(this, proto.tendermint.p2p.ProtocolVersion, 1)\n  );\n};\n/**\n * @param {?proto.tendermint.p2p.ProtocolVersion|undefined} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n*/\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setProtocolVersion = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.clearProtocolVersion = function () {\n  return this.setProtocolVersion(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.hasProtocolVersion = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional string default_node_id = 2;\n * @return {string}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getDefaultNodeId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setDefaultNodeId = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string listen_addr = 3;\n * @return {string}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getListenAddr = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setListenAddr = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string network = 4;\n * @return {string}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getNetwork = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setNetwork = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string version = 5;\n * @return {string}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getVersion = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setVersion = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional bytes channels = 6;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getChannels = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * optional bytes channels = 6;\n * This is a type-conversion wrapper around `getChannels()`\n * @return {string}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getChannels_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getChannels())\n  );\n};\n/**\n * optional bytes channels = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChannels()`\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getChannels_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getChannels())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setChannels = function (value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n/**\n * optional string moniker = 7;\n * @return {string}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getMoniker = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setMoniker = function (value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * optional DefaultNodeInfoOther other = 8;\n * @return {?proto.tendermint.p2p.DefaultNodeInfoOther}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getOther = function () {\n  return (\n    /** @type{?proto.tendermint.p2p.DefaultNodeInfoOther} */\n    jspb.Message.getWrapperField(this, proto.tendermint.p2p.DefaultNodeInfoOther, 8)\n  );\n};\n/**\n * @param {?proto.tendermint.p2p.DefaultNodeInfoOther|undefined} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n*/\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setOther = function (value) {\n  return jspb.Message.setWrapperField(this, 8, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.clearOther = function () {\n  return this.setOther(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfo.prototype.hasOther = function () {\n  return jspb.Message.getField(this, 8) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tendermint.p2p.DefaultNodeInfoOther.prototype.toObject = function (opt_includeInstance) {\n    return proto.tendermint.p2p.DefaultNodeInfoOther.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tendermint.p2p.DefaultNodeInfoOther} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tendermint.p2p.DefaultNodeInfoOther.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      txIndex: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      rpcAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.p2p.DefaultNodeInfoOther}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfoOther.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.p2p.DefaultNodeInfoOther();\n  return proto.tendermint.p2p.DefaultNodeInfoOther.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.p2p.DefaultNodeInfoOther} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.p2p.DefaultNodeInfoOther}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfoOther.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTxIndex(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setRpcAddress(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfoOther.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.p2p.DefaultNodeInfoOther.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.p2p.DefaultNodeInfoOther} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfoOther.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTxIndex();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getRpcAddress();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string tx_index = 1;\n * @return {string}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfoOther.prototype.getTxIndex = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfoOther} returns this\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfoOther.prototype.setTxIndex = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string rpc_address = 2;\n * @return {string}\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfoOther.prototype.getRpcAddress = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfoOther} returns this\n */\n\n\nproto.tendermint.p2p.DefaultNodeInfoOther.prototype.setRpcAddress = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\ngoog.object.extend(exports, proto.tendermint.p2p);","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/node_modules/@bandprotocol/bandchain.js/proto/tendermint/p2p/types_pb.js"],"names":["jspb","require","goog","global","Function","gogoproto_gogo_pb","object","extend","proto","exportSymbol","tendermint","p2p","NetAddress","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","ProtocolVersion","DefaultNodeInfo","DefaultNodeInfoOther","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","id","getFieldWithDefault","ip","port","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setId","setIp","readUint32","setPort","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getId","length","writeString","getIp","getPort","writeUint32","setProto3StringField","setProto3IntField","block","app","readUint64","setP2p","setBlock","setApp","getP2p","writeUint64","getBlock","getApp","protocolVersion","getProtocolVersion","defaultNodeId","listenAddr","network","version","channels","getChannels_asB64","moniker","other","getOther","readMessage","setProtocolVersion","setDefaultNodeId","setListenAddr","setNetwork","setVersion","readBytes","setChannels","setMoniker","setOther","writeMessage","getDefaultNodeId","getListenAddr","getNetwork","getVersion","getChannels_asU8","writeBytes","getMoniker","getWrapperField","setWrapperField","clearProtocolVersion","hasProtocolVersion","getField","getChannels","bytesAsB64","bytesAsU8","setProto3BytesField","clearOther","hasOther","txIndex","rpcAddress","setTxIndex","setRpcAddress","getTxIndex","getRpcAddress","exports"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AACA,IAAIC,IAAI,GAAGF,IAAX;AACA,IAAIG,MAAM,GAAGC,QAAQ,CAAC,aAAD,CAAR,EAAb;;AAEA,IAAIC,iBAAiB,GAAGJ,OAAO,CAAC,4BAAD,CAA/B;;AACAC,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBC,KAAnB,EAA0BH,iBAA1B;AACAH,IAAI,CAACO,YAAL,CAAkB,sCAAlB,EAA0D,IAA1D,EAAgEN,MAAhE;AACAD,IAAI,CAACO,YAAL,CAAkB,2CAAlB,EAA+D,IAA/D,EAAqEN,MAArE;AACAD,IAAI,CAACO,YAAL,CAAkB,iCAAlB,EAAqD,IAArD,EAA2DN,MAA3D;AACAD,IAAI,CAACO,YAAL,CAAkB,sCAAlB,EAA0D,IAA1D,EAAgEN,MAAhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAK,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,GAAkC,UAASC,QAAT,EAAmB;AACnDb,EAAAA,IAAI,CAACc,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAX,IAAI,CAACc,QAAL,CAAcR,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAAnC,EAA+CZ,IAAI,CAACc,OAApD;;AACA,IAAIZ,IAAI,CAACe,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACEV,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCO,WAAhC,GAA8C,iCAA9C;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAX,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,GAAuC,UAASP,QAAT,EAAmB;AACxDb,EAAAA,IAAI,CAACc,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAX,IAAI,CAACc,QAAL,CAAcR,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAAnC,EAAoDpB,IAAI,CAACc,OAAzD;;AACA,IAAIZ,IAAI,CAACe,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACEV,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCD,WAArC,GAAmD,sCAAnD;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAX,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,GAAuC,UAASR,QAAT,EAAmB;AACxDb,EAAAA,IAAI,CAACc,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAX,IAAI,CAACc,QAAL,CAAcR,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAAnC,EAAoDrB,IAAI,CAACc,OAAzD;;AACA,IAAIZ,IAAI,CAACe,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACEV,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCF,WAArC,GAAmD,sCAAnD;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAX,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,GAA4C,UAAST,QAAT,EAAmB;AAC7Db,EAAAA,IAAI,CAACc,OAAL,CAAaC,UAAb,CAAwB,IAAxB,EAA8BF,QAA9B,EAAwC,CAAxC,EAA2C,CAAC,CAA5C,EAA+C,IAA/C,EAAqD,IAArD;AACD,CAFD;;AAGAX,IAAI,CAACc,QAAL,CAAcR,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAAnC,EAAyDtB,IAAI,CAACc,OAA9D;;AACA,IAAIZ,IAAI,CAACe,KAAL,IAAc,CAACC,QAAnB,EAA6B;AAC3B;AACF;AACA;AACA;AACEV,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CH,WAA1C,GAAwD,2CAAxD;AACD;;AAID,IAAInB,IAAI,CAACc,OAAL,CAAaS,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCY,SAAhC,CAA0CC,QAA1C,GAAqD,UAASC,mBAAT,EAA8B;AACjF,WAAOlB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCa,QAAhC,CAAyCC,mBAAzC,EAA8D,IAA9D,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAlB,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCa,QAAhC,GAA2C,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AACxE,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXC,MAAAA,EAAE,EAAE/B,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADO;AAEXK,MAAAA,EAAE,EAAEjC,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAFO;AAGXM,MAAAA,IAAI,EAAElC,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC;AAHK,KAAb;;AAMA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACK,oBAAJ,GAA2BP,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;AAGD;AACA;AACA;AACA;AACA;;;AACAtB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCwB,iBAAhC,GAAoD,UAASC,KAAT,EAAgB;AAClE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIT,GAAG,GAAG,IAAIpB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAAzB,EAAV;AACA,SAAOJ,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgC4B,2BAAhC,CAA4DZ,GAA5D,EAAiEU,MAAjE,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9B,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgC4B,2BAAhC,GAA8D,UAASZ,GAAT,EAAcU,MAAd,EAAsB;AAClF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAlB,QAAAA,GAAG,CAACmB,KAAJ,CAAUF,KAAV;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAlB,QAAAA,GAAG,CAACoB,KAAJ,CAAUH,KAAV;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACW,UAAP,EAAnC;AACArB,QAAAA,GAAG,CAACsB,OAAJ,CAAYL,KAAZ;AACA;;AACF;AACEP,QAAAA,MAAM,CAACa,SAAP;AACA;AAfF;AAiBD;;AACD,SAAOvB,GAAP;AACD,CAzBD;AA4BA;AACA;AACA;AACA;;;AACApB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCY,SAAhC,CAA0C4B,eAA1C,GAA4D,YAAW;AACrE,MAAIC,MAAM,GAAG,IAAIrD,IAAI,CAACsD,YAAT,EAAb;AACA9C,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgC2C,uBAAhC,CAAwD,IAAxD,EAA8DF,MAA9D;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgC2C,uBAAhC,GAA0D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAClF,MAAIxB,CAAC,GAAG6B,SAAR;AACA7B,EAAAA,CAAC,GAAG4B,OAAO,CAACE,KAAR,EAAJ;;AACA,MAAI9B,CAAC,CAAC+B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEhC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG4B,OAAO,CAACK,KAAR,EAAJ;;AACA,MAAIjC,CAAC,CAAC+B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEhC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG4B,OAAO,CAACM,OAAR,EAAJ;;AACA,MAAIlC,CAAC,KAAK,CAAV,EAAa;AACXwB,IAAAA,MAAM,CAACW,WAAP,CACE,CADF,EAEEnC,CAFF;AAID;AACF,CAvBD;AA0BA;AACA;AACA;AACA;;;AACArB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCY,SAAhC,CAA0CmC,KAA1C,GAAkD,YAAW;AAC3D;AAAO;AAAuB3D,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCY,SAAhC,CAA0CuB,KAA1C,GAAkD,UAASF,KAAT,EAAgB;AAChE,SAAO7C,IAAI,CAACc,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCY,SAAhC,CAA0CsC,KAA1C,GAAkD,YAAW;AAC3D;AAAO;AAAuB9D,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCY,SAAhC,CAA0CwB,KAA1C,GAAkD,UAASH,KAAT,EAAgB;AAChE,SAAO7C,IAAI,CAACc,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCY,SAAhC,CAA0CuC,OAA1C,GAAoD,YAAW;AAC7D;AAAO;AAAuB/D,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,UAArB,CAAgCY,SAAhC,CAA0C0B,OAA1C,GAAoD,UAASL,KAAT,EAAgB;AAClE,SAAO7C,IAAI,CAACc,OAAL,CAAaoD,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCrB,KAAxC,CAAP;AACD,CAFD;;AAQA,IAAI7C,IAAI,CAACc,OAAL,CAAaS,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCI,SAArC,CAA+CC,QAA/C,GAA0D,UAASC,mBAAT,EAA8B;AACtF,WAAOlB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCK,QAArC,CAA8CC,mBAA9C,EAAmE,IAAnE,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAlB,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCK,QAArC,GAAgD,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC7E,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXnB,MAAAA,GAAG,EAAEX,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CADM;AAEXuC,MAAAA,KAAK,EAAEnE,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC,CAFI;AAGXwC,MAAAA,GAAG,EAAEpE,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,CAAzC;AAHM,KAAb;;AAMA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACK,oBAAJ,GAA2BP,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAXD;AAYC;AAGD;AACA;AACA;AACA;AACA;;;AACAtB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCgB,iBAArC,GAAyD,UAASC,KAAT,EAAgB;AACvE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIT,GAAG,GAAG,IAAIpB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAAzB,EAAV;AACA,SAAOZ,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCoB,2BAArC,CAAiEZ,GAAjE,EAAsEU,MAAtE,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9B,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCoB,2BAArC,GAAmE,UAASZ,GAAT,EAAcU,MAAd,EAAsB;AACvF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAAC+B,UAAP,EAAnC;AACAzC,QAAAA,GAAG,CAAC0C,MAAJ,CAAWzB,KAAX;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAAC+B,UAAP,EAAnC;AACAzC,QAAAA,GAAG,CAAC2C,QAAJ,CAAa1B,KAAb;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAAC+B,UAAP,EAAnC;AACAzC,QAAAA,GAAG,CAAC4C,MAAJ,CAAW3B,KAAX;AACA;;AACF;AACEP,QAAAA,MAAM,CAACa,SAAP;AACA;AAfF;AAiBD;;AACD,SAAOvB,GAAP;AACD,CAzBD;AA4BA;AACA;AACA;AACA;;;AACApB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCI,SAArC,CAA+C4B,eAA/C,GAAiE,YAAW;AAC1E,MAAIC,MAAM,GAAG,IAAIrD,IAAI,CAACsD,YAAT,EAAb;AACA9C,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCmC,uBAArC,CAA6D,IAA7D,EAAmEF,MAAnE;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCmC,uBAArC,GAA+D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACvF,MAAIxB,CAAC,GAAG6B,SAAR;AACA7B,EAAAA,CAAC,GAAG4B,OAAO,CAACgB,MAAR,EAAJ;;AACA,MAAI5C,CAAC,KAAK,CAAV,EAAa;AACXwB,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEE7C,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG4B,OAAO,CAACkB,QAAR,EAAJ;;AACA,MAAI9C,CAAC,KAAK,CAAV,EAAa;AACXwB,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEE7C,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG4B,OAAO,CAACmB,MAAR,EAAJ;;AACA,MAAI/C,CAAC,KAAK,CAAV,EAAa;AACXwB,IAAAA,MAAM,CAACqB,WAAP,CACE,CADF,EAEE7C,CAFF;AAID;AACF,CAvBD;AA0BA;AACA;AACA;AACA;;;AACArB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCI,SAArC,CAA+CiD,MAA/C,GAAwD,YAAW;AACjE;AAAO;AAAuBzE,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCI,SAArC,CAA+C8C,MAA/C,GAAwD,UAASzB,KAAT,EAAgB;AACtE,SAAO7C,IAAI,CAACc,OAAL,CAAaoD,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCrB,KAAxC,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCI,SAArC,CAA+CmD,QAA/C,GAA0D,YAAW;AACnE;AAAO;AAAuB3E,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCI,SAArC,CAA+C+C,QAA/C,GAA0D,UAAS1B,KAAT,EAAgB;AACxE,SAAO7C,IAAI,CAACc,OAAL,CAAaoD,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCrB,KAAxC,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCI,SAArC,CAA+CoD,MAA/C,GAAwD,YAAW;AACjE;AAAO;AAAuB5E,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCI,SAArC,CAA+CgD,MAA/C,GAAwD,UAAS3B,KAAT,EAAgB;AACtE,SAAO7C,IAAI,CAACc,OAAL,CAAaoD,iBAAb,CAA+B,IAA/B,EAAqC,CAArC,EAAwCrB,KAAxC,CAAP;AACD,CAFD;;AAQA,IAAI7C,IAAI,CAACc,OAAL,CAAaS,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CC,QAA/C,GAA0D,UAASC,mBAAT,EAA8B;AACtF,WAAOlB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCI,QAArC,CAA8CC,mBAA9C,EAAmE,IAAnE,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAlB,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCI,QAArC,GAAgD,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAC7E,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACX+C,MAAAA,eAAe,EAAE,CAAChD,CAAC,GAAGD,GAAG,CAACkD,kBAAJ,EAAL,KAAkCtE,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCK,QAArC,CAA8CE,eAA9C,EAA+DE,CAA/D,CADxC;AAEXkD,MAAAA,aAAa,EAAE/E,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAFJ;AAGXoD,MAAAA,UAAU,EAAEhF,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAHD;AAIXqD,MAAAA,OAAO,EAAEjF,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAJE;AAKXsD,MAAAA,OAAO,EAAElF,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CALE;AAMXuD,MAAAA,QAAQ,EAAEvD,GAAG,CAACwD,iBAAJ,EANC;AAOXC,MAAAA,OAAO,EAAErF,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CAPE;AAQX0D,MAAAA,KAAK,EAAE,CAACzD,CAAC,GAAGD,GAAG,CAAC2D,QAAJ,EAAL,KAAwB/E,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CG,QAA1C,CAAmDE,eAAnD,EAAoEE,CAApE;AARpB,KAAb;;AAWA,QAAIF,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACK,oBAAJ,GAA2BP,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAhBD;AAiBC;AAGD;AACA;AACA;AACA;AACA;;;AACAtB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCe,iBAArC,GAAyD,UAASC,KAAT,EAAgB;AACvE,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIT,GAAG,GAAG,IAAIpB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAAzB,EAAV;AACA,SAAOb,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCmB,2BAArC,CAAiEZ,GAAjE,EAAsEU,MAAtE,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9B,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCmB,2BAArC,GAAmE,UAASZ,GAAT,EAAcU,MAAd,EAAsB;AACvF,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK,GAAG,IAAIrC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAAzB,EAAZ;AACAkB,QAAAA,MAAM,CAACkD,WAAP,CAAmB3C,KAAnB,EAAyBrC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCoB,2BAA9D;AACAZ,QAAAA,GAAG,CAAC6D,kBAAJ,CAAuB5C,KAAvB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAlB,QAAAA,GAAG,CAAC8D,gBAAJ,CAAqB7C,KAArB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAlB,QAAAA,GAAG,CAAC+D,aAAJ,CAAkB9C,KAAlB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAlB,QAAAA,GAAG,CAACgE,UAAJ,CAAe/C,KAAf;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAlB,QAAAA,GAAG,CAACiE,UAAJ,CAAehD,KAAf;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAA4BP,QAAAA,MAAM,CAACwD,SAAP,EAAxC;AACAlE,QAAAA,GAAG,CAACmE,WAAJ,CAAgBlD,KAAhB;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAlB,QAAAA,GAAG,CAACoE,UAAJ,CAAenD,KAAf;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK,GAAG,IAAIrC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAAzB,EAAZ;AACAgB,QAAAA,MAAM,CAACkD,WAAP,CAAmB3C,KAAnB,EAAyBrC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CkB,2BAAnE;AACAZ,QAAAA,GAAG,CAACqE,QAAJ,CAAapD,KAAb;AACA;;AACF;AACEP,QAAAA,MAAM,CAACa,SAAP;AACA;AArCF;AAuCD;;AACD,SAAOvB,GAAP;AACD,CA/CD;AAkDA;AACA;AACA;AACA;;;AACApB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+C4B,eAA/C,GAAiE,YAAW;AAC1E,MAAIC,MAAM,GAAG,IAAIrD,IAAI,CAACsD,YAAT,EAAb;AACA9C,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCkC,uBAArC,CAA6D,IAA7D,EAAmEF,MAAnE;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCkC,uBAArC,GAA+D,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AACvF,MAAIxB,CAAC,GAAG6B,SAAR;AACA7B,EAAAA,CAAC,GAAG4B,OAAO,CAACqB,kBAAR,EAAJ;;AACA,MAAIjD,CAAC,IAAI,IAAT,EAAe;AACbwB,IAAAA,MAAM,CAAC6C,YAAP,CACE,CADF,EAEErE,CAFF,EAGErB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAArB,CAAqCmC,uBAHvC;AAKD;;AACD1B,EAAAA,CAAC,GAAG4B,OAAO,CAAC0C,gBAAR,EAAJ;;AACA,MAAItE,CAAC,CAAC+B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEhC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG4B,OAAO,CAAC2C,aAAR,EAAJ;;AACA,MAAIvE,CAAC,CAAC+B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEhC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG4B,OAAO,CAAC4C,UAAR,EAAJ;;AACA,MAAIxE,CAAC,CAAC+B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEhC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG4B,OAAO,CAAC6C,UAAR,EAAJ;;AACA,MAAIzE,CAAC,CAAC+B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEhC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG4B,OAAO,CAAC8C,gBAAR,EAAJ;;AACA,MAAI1E,CAAC,CAAC+B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACmD,UAAP,CACE,CADF,EAEE3E,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG4B,OAAO,CAACgD,UAAR,EAAJ;;AACA,MAAI5E,CAAC,CAAC+B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEhC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG4B,OAAO,CAAC8B,QAAR,EAAJ;;AACA,MAAI1D,CAAC,IAAI,IAAT,EAAe;AACbwB,IAAAA,MAAM,CAAC6C,YAAP,CACE,CADF,EAEErE,CAFF,EAGErB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CiC,uBAH5C;AAKD;AACF,CA5DD;AA+DA;AACA;AACA;AACA;;;AACA/C,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CsD,kBAA/C,GAAoE,YAAW;AAC7E;AAAO;AACL9E,IAAAA,IAAI,CAACc,OAAL,CAAa4F,eAAb,CAA6B,IAA7B,EAAmClG,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBS,eAAxD,EAAyE,CAAzE;AADF;AAED,CAHD;AAMA;AACA;AACA;AACA;;;AACAZ,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CiE,kBAA/C,GAAoE,UAAS5C,KAAT,EAAgB;AAClF,SAAO7C,IAAI,CAACc,OAAL,CAAa6F,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsC9D,KAAtC,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CoF,oBAA/C,GAAsE,YAAW;AAC/E,SAAO,KAAKnB,kBAAL,CAAwB/B,SAAxB,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAlD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CqF,kBAA/C,GAAoE,YAAW;AAC7E,SAAO7G,IAAI,CAACc,OAAL,CAAagG,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAtG,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+C2E,gBAA/C,GAAkE,YAAW;AAC3E;AAAO;AAAuBnG,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CkE,gBAA/C,GAAkE,UAAS7C,KAAT,EAAgB;AAChF,SAAO7C,IAAI,CAACc,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+C4E,aAA/C,GAA+D,YAAW;AACxE;AAAO;AAAuBpG,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CmE,aAA/C,GAA+D,UAAS9C,KAAT,EAAgB;AAC7E,SAAO7C,IAAI,CAACc,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+C6E,UAA/C,GAA4D,YAAW;AACrE;AAAO;AAAuBrG,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CoE,UAA/C,GAA4D,UAAS/C,KAAT,EAAgB;AAC1E,SAAO7C,IAAI,CAACc,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+C8E,UAA/C,GAA4D,YAAW;AACrE;AAAO;AAAuBtG,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CqE,UAA/C,GAA4D,UAAShD,KAAT,EAAgB;AAC1E,SAAO7C,IAAI,CAACc,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CuF,WAA/C,GAA6D,YAAW;AACtE;AAAO;AAAqC/G,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA5C;AACD,CAFD;AAKA;AACA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+C4D,iBAA/C,GAAmE,YAAW;AAC5E;AAAO;AAAuBpF,IAAAA,IAAI,CAACc,OAAL,CAAakG,UAAb,CAC1B,KAAKD,WAAL,EAD0B;AAA9B;AAED,CAHD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAvG,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+C+E,gBAA/C,GAAkE,YAAW;AAC3E;AAAO;AAA4BvG,IAAAA,IAAI,CAACc,OAAL,CAAamG,SAAb,CAC/B,KAAKF,WAAL,EAD+B;AAAnC;AAED,CAHD;AAMA;AACA;AACA;AACA;;;AACAvG,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CuE,WAA/C,GAA6D,UAASlD,KAAT,EAAgB;AAC3E,SAAO7C,IAAI,CAACc,OAAL,CAAaoG,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0CrE,KAA1C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CiF,UAA/C,GAA4D,YAAW;AACrE;AAAO;AAAuBzG,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CwE,UAA/C,GAA4D,UAASnD,KAAT,EAAgB;AAC1E,SAAO7C,IAAI,CAACc,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+C+D,QAA/C,GAA0D,YAAW;AACnE;AAAO;AACLvF,IAAAA,IAAI,CAACc,OAAL,CAAa4F,eAAb,CAA6B,IAA7B,EAAmClG,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAAxD,EAA8E,CAA9E;AADF;AAED,CAHD;AAMA;AACA;AACA;AACA;;;AACAd,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+CyE,QAA/C,GAA0D,UAASpD,KAAT,EAAgB;AACxE,SAAO7C,IAAI,CAACc,OAAL,CAAa6F,eAAb,CAA6B,IAA7B,EAAmC,CAAnC,EAAsC9D,KAAtC,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+C2F,UAA/C,GAA4D,YAAW;AACrE,SAAO,KAAKlB,QAAL,CAAcvC,SAAd,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAlD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBU,eAArB,CAAqCG,SAArC,CAA+C4F,QAA/C,GAA0D,YAAW;AACnE,SAAOpH,IAAI,CAACc,OAAL,CAAagG,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,KAAkC,IAAzC;AACD,CAFD;;AAQA,IAAI9G,IAAI,CAACc,OAAL,CAAaS,kBAAjB,EAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CE,SAA1C,CAAoDC,QAApD,GAA+D,UAASC,mBAAT,EAA8B;AAC3F,WAAOlB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CG,QAA1C,CAAmDC,mBAAnD,EAAwE,IAAxE,CAAP;AACD,GAFD;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAlB,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CG,QAA1C,GAAqD,UAASE,eAAT,EAA0BC,GAA1B,EAA+B;AAClF,QAAIC,CAAJ;AAAA,QAAOC,GAAG,GAAG;AACXuF,MAAAA,OAAO,EAAErH,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC,CADE;AAEX0F,MAAAA,UAAU,EAAEtH,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiCJ,GAAjC,EAAsC,CAAtC,EAAyC,EAAzC;AAFD,KAAb;;AAKA,QAAID,eAAJ,EAAqB;AACnBG,MAAAA,GAAG,CAACK,oBAAJ,GAA2BP,GAA3B;AACD;;AACD,WAAOE,GAAP;AACD,GAVD;AAWC;AAGD;AACA;AACA;AACA;AACA;;;AACAtB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0Cc,iBAA1C,GAA8D,UAASC,KAAT,EAAgB;AAC5E,MAAIC,MAAM,GAAG,IAAItC,IAAI,CAACuC,YAAT,CAAsBF,KAAtB,CAAb;AACA,MAAIT,GAAG,GAAG,IAAIpB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAAzB,EAAV;AACA,SAAOd,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CkB,2BAA1C,CAAsEZ,GAAtE,EAA2EU,MAA3E,CAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9B,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CkB,2BAA1C,GAAwE,UAASZ,GAAT,EAAcU,MAAd,EAAsB;AAC5F,SAAOA,MAAM,CAACG,SAAP,EAAP,EAA2B;AACzB,QAAIH,MAAM,CAACI,UAAP,EAAJ,EAAyB;AACvB;AACD;;AACD,QAAIC,KAAK,GAAGL,MAAM,CAACM,cAAP,EAAZ;;AACA,YAAQD,KAAR;AACA,WAAK,CAAL;AACE,YAAIE,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAlB,QAAAA,GAAG,CAAC2F,UAAJ,CAAe1E,KAAf;AACA;;AACF,WAAK,CAAL;AACE,YAAIA,KAAK;AAAG;AAAuBP,QAAAA,MAAM,CAACQ,UAAP,EAAnC;AACAlB,QAAAA,GAAG,CAAC4F,aAAJ,CAAkB3E,KAAlB;AACA;;AACF;AACEP,QAAAA,MAAM,CAACa,SAAP;AACA;AAXF;AAaD;;AACD,SAAOvB,GAAP;AACD,CArBD;AAwBA;AACA;AACA;AACA;;;AACApB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CE,SAA1C,CAAoD4B,eAApD,GAAsE,YAAW;AAC/E,MAAIC,MAAM,GAAG,IAAIrD,IAAI,CAACsD,YAAT,EAAb;AACA9C,EAAAA,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CiC,uBAA1C,CAAkE,IAAlE,EAAwEF,MAAxE;AACA,SAAOA,MAAM,CAACG,eAAP,EAAP;AACD,CAJD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CiC,uBAA1C,GAAoE,UAASE,OAAT,EAAkBJ,MAAlB,EAA0B;AAC5F,MAAIxB,CAAC,GAAG6B,SAAR;AACA7B,EAAAA,CAAC,GAAG4B,OAAO,CAACgE,UAAR,EAAJ;;AACA,MAAI5F,CAAC,CAAC+B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEhC,CAFF;AAID;;AACDA,EAAAA,CAAC,GAAG4B,OAAO,CAACiE,aAAR,EAAJ;;AACA,MAAI7F,CAAC,CAAC+B,MAAF,GAAW,CAAf,EAAkB;AAChBP,IAAAA,MAAM,CAACQ,WAAP,CACE,CADF,EAEEhC,CAFF;AAID;AACF,CAhBD;AAmBA;AACA;AACA;AACA;;;AACArB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CE,SAA1C,CAAoDiG,UAApD,GAAiE,YAAW;AAC1E;AAAO;AAAuBzH,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CE,SAA1C,CAAoD+F,UAApD,GAAiE,UAAS1E,KAAT,EAAgB;AAC/E,SAAO7C,IAAI,CAACc,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C,CAAP;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACArC,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CE,SAA1C,CAAoDkG,aAApD,GAAoE,YAAW;AAC7E;AAAO;AAAuB1H,IAAAA,IAAI,CAACc,OAAL,CAAakB,mBAAb,CAAiC,IAAjC,EAAuC,CAAvC,EAA0C,EAA1C;AAA9B;AACD,CAFD;AAKA;AACA;AACA;AACA;;;AACAxB,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBW,oBAArB,CAA0CE,SAA1C,CAAoDgG,aAApD,GAAoE,UAAS3E,KAAT,EAAgB;AAClF,SAAO7C,IAAI,CAACc,OAAL,CAAamD,oBAAb,CAAkC,IAAlC,EAAwC,CAAxC,EAA2CpB,KAA3C,CAAP;AACD,CAFD;;AAKA3C,IAAI,CAACI,MAAL,CAAYC,MAAZ,CAAmBoH,OAAnB,EAA4BnH,KAAK,CAACE,UAAN,CAAiBC,GAA7C","sourcesContent":["// source: tendermint/p2p/types.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');\ngoog.object.extend(proto, gogoproto_gogo_pb);\ngoog.exportSymbol('proto.tendermint.p2p.DefaultNodeInfo', null, global);\ngoog.exportSymbol('proto.tendermint.p2p.DefaultNodeInfoOther', null, global);\ngoog.exportSymbol('proto.tendermint.p2p.NetAddress', null, global);\ngoog.exportSymbol('proto.tendermint.p2p.ProtocolVersion', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.p2p.NetAddress = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.p2p.NetAddress, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.p2p.NetAddress.displayName = 'proto.tendermint.p2p.NetAddress';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.p2p.ProtocolVersion = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.p2p.ProtocolVersion, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.p2p.ProtocolVersion.displayName = 'proto.tendermint.p2p.ProtocolVersion';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.p2p.DefaultNodeInfo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.p2p.DefaultNodeInfo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.p2p.DefaultNodeInfo.displayName = 'proto.tendermint.p2p.DefaultNodeInfo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.p2p.DefaultNodeInfoOther = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.p2p.DefaultNodeInfoOther, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.p2p.DefaultNodeInfoOther.displayName = 'proto.tendermint.p2p.DefaultNodeInfoOther';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.p2p.NetAddress.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.p2p.NetAddress.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.p2p.NetAddress} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.p2p.NetAddress.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    ip: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    port: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.p2p.NetAddress}\n */\nproto.tendermint.p2p.NetAddress.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.p2p.NetAddress;\n  return proto.tendermint.p2p.NetAddress.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.p2p.NetAddress} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.p2p.NetAddress}\n */\nproto.tendermint.p2p.NetAddress.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setIp(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint32());\n      msg.setPort(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.p2p.NetAddress.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.p2p.NetAddress.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.p2p.NetAddress} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.p2p.NetAddress.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIp();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPort();\n  if (f !== 0) {\n    writer.writeUint32(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.tendermint.p2p.NetAddress.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.NetAddress} returns this\n */\nproto.tendermint.p2p.NetAddress.prototype.setId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string ip = 2;\n * @return {string}\n */\nproto.tendermint.p2p.NetAddress.prototype.getIp = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.NetAddress} returns this\n */\nproto.tendermint.p2p.NetAddress.prototype.setIp = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional uint32 port = 3;\n * @return {number}\n */\nproto.tendermint.p2p.NetAddress.prototype.getPort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.p2p.NetAddress} returns this\n */\nproto.tendermint.p2p.NetAddress.prototype.setPort = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.p2p.ProtocolVersion.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.p2p.ProtocolVersion.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.p2p.ProtocolVersion} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.p2p.ProtocolVersion.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    p2p: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    block: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    app: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.p2p.ProtocolVersion}\n */\nproto.tendermint.p2p.ProtocolVersion.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.p2p.ProtocolVersion;\n  return proto.tendermint.p2p.ProtocolVersion.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.p2p.ProtocolVersion} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.p2p.ProtocolVersion}\n */\nproto.tendermint.p2p.ProtocolVersion.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setP2p(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setBlock(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setApp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.p2p.ProtocolVersion.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.p2p.ProtocolVersion.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.p2p.ProtocolVersion} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.p2p.ProtocolVersion.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getP2p();\n  if (f !== 0) {\n    writer.writeUint64(\n      1,\n      f\n    );\n  }\n  f = message.getBlock();\n  if (f !== 0) {\n    writer.writeUint64(\n      2,\n      f\n    );\n  }\n  f = message.getApp();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional uint64 p2p = 1;\n * @return {number}\n */\nproto.tendermint.p2p.ProtocolVersion.prototype.getP2p = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.p2p.ProtocolVersion} returns this\n */\nproto.tendermint.p2p.ProtocolVersion.prototype.setP2p = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional uint64 block = 2;\n * @return {number}\n */\nproto.tendermint.p2p.ProtocolVersion.prototype.getBlock = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.p2p.ProtocolVersion} returns this\n */\nproto.tendermint.p2p.ProtocolVersion.prototype.setBlock = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional uint64 app = 3;\n * @return {number}\n */\nproto.tendermint.p2p.ProtocolVersion.prototype.getApp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.p2p.ProtocolVersion} returns this\n */\nproto.tendermint.p2p.ProtocolVersion.prototype.setApp = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.p2p.DefaultNodeInfo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.p2p.DefaultNodeInfo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.p2p.DefaultNodeInfo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    protocolVersion: (f = msg.getProtocolVersion()) && proto.tendermint.p2p.ProtocolVersion.toObject(includeInstance, f),\n    defaultNodeId: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    listenAddr: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    network: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    channels: msg.getChannels_asB64(),\n    moniker: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    other: (f = msg.getOther()) && proto.tendermint.p2p.DefaultNodeInfoOther.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.p2p.DefaultNodeInfo}\n */\nproto.tendermint.p2p.DefaultNodeInfo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.p2p.DefaultNodeInfo;\n  return proto.tendermint.p2p.DefaultNodeInfo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.p2p.DefaultNodeInfo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.p2p.DefaultNodeInfo}\n */\nproto.tendermint.p2p.DefaultNodeInfo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.p2p.ProtocolVersion;\n      reader.readMessage(value,proto.tendermint.p2p.ProtocolVersion.deserializeBinaryFromReader);\n      msg.setProtocolVersion(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDefaultNodeId(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setListenAddr(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNetwork(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    case 6:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setChannels(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMoniker(value);\n      break;\n    case 8:\n      var value = new proto.tendermint.p2p.DefaultNodeInfoOther;\n      reader.readMessage(value,proto.tendermint.p2p.DefaultNodeInfoOther.deserializeBinaryFromReader);\n      msg.setOther(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.p2p.DefaultNodeInfo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.p2p.DefaultNodeInfo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.p2p.DefaultNodeInfo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProtocolVersion();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.tendermint.p2p.ProtocolVersion.serializeBinaryToWriter\n    );\n  }\n  f = message.getDefaultNodeId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getListenAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getNetwork();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getChannels_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      6,\n      f\n    );\n  }\n  f = message.getMoniker();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getOther();\n  if (f != null) {\n    writer.writeMessage(\n      8,\n      f,\n      proto.tendermint.p2p.DefaultNodeInfoOther.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional ProtocolVersion protocol_version = 1;\n * @return {?proto.tendermint.p2p.ProtocolVersion}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getProtocolVersion = function() {\n  return /** @type{?proto.tendermint.p2p.ProtocolVersion} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.p2p.ProtocolVersion, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.p2p.ProtocolVersion|undefined} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n*/\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setProtocolVersion = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.clearProtocolVersion = function() {\n  return this.setProtocolVersion(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.hasProtocolVersion = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional string default_node_id = 2;\n * @return {string}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getDefaultNodeId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setDefaultNodeId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string listen_addr = 3;\n * @return {string}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getListenAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setListenAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string network = 4;\n * @return {string}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getNetwork = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setNetwork = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string version = 5;\n * @return {string}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional bytes channels = 6;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getChannels = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * optional bytes channels = 6;\n * This is a type-conversion wrapper around `getChannels()`\n * @return {string}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getChannels_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getChannels()));\n};\n\n\n/**\n * optional bytes channels = 6;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getChannels()`\n * @return {!Uint8Array}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getChannels_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getChannels()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setChannels = function(value) {\n  return jspb.Message.setProto3BytesField(this, 6, value);\n};\n\n\n/**\n * optional string moniker = 7;\n * @return {string}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getMoniker = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setMoniker = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional DefaultNodeInfoOther other = 8;\n * @return {?proto.tendermint.p2p.DefaultNodeInfoOther}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.getOther = function() {\n  return /** @type{?proto.tendermint.p2p.DefaultNodeInfoOther} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.p2p.DefaultNodeInfoOther, 8));\n};\n\n\n/**\n * @param {?proto.tendermint.p2p.DefaultNodeInfoOther|undefined} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n*/\nproto.tendermint.p2p.DefaultNodeInfo.prototype.setOther = function(value) {\n  return jspb.Message.setWrapperField(this, 8, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.p2p.DefaultNodeInfo} returns this\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.clearOther = function() {\n  return this.setOther(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.p2p.DefaultNodeInfo.prototype.hasOther = function() {\n  return jspb.Message.getField(this, 8) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.p2p.DefaultNodeInfoOther.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.p2p.DefaultNodeInfoOther.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.p2p.DefaultNodeInfoOther} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.p2p.DefaultNodeInfoOther.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txIndex: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    rpcAddress: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.p2p.DefaultNodeInfoOther}\n */\nproto.tendermint.p2p.DefaultNodeInfoOther.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.p2p.DefaultNodeInfoOther;\n  return proto.tendermint.p2p.DefaultNodeInfoOther.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.p2p.DefaultNodeInfoOther} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.p2p.DefaultNodeInfoOther}\n */\nproto.tendermint.p2p.DefaultNodeInfoOther.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTxIndex(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRpcAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.p2p.DefaultNodeInfoOther.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.p2p.DefaultNodeInfoOther.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.p2p.DefaultNodeInfoOther} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.p2p.DefaultNodeInfoOther.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxIndex();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRpcAddress();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string tx_index = 1;\n * @return {string}\n */\nproto.tendermint.p2p.DefaultNodeInfoOther.prototype.getTxIndex = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfoOther} returns this\n */\nproto.tendermint.p2p.DefaultNodeInfoOther.prototype.setTxIndex = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string rpc_address = 2;\n * @return {string}\n */\nproto.tendermint.p2p.DefaultNodeInfoOther.prototype.getRpcAddress = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.tendermint.p2p.DefaultNodeInfoOther} returns this\n */\nproto.tendermint.p2p.DefaultNodeInfoOther.prototype.setRpcAddress = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto.tendermint.p2p);\n"]},"metadata":{},"sourceType":"script"}