{"ast":null,"code":"// source: tendermint/types/validator.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');\n\ngoog.object.extend(proto, gogoproto_gogo_pb);\n\nvar tendermint_crypto_keys_pb = require('../../tendermint/crypto/keys_pb.js');\n\ngoog.object.extend(proto, tendermint_crypto_keys_pb);\ngoog.exportSymbol('proto.tendermint.types.SimpleValidator', null, global);\ngoog.exportSymbol('proto.tendermint.types.Validator', null, global);\ngoog.exportSymbol('proto.tendermint.types.ValidatorSet', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.tendermint.types.ValidatorSet = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.types.ValidatorSet.repeatedFields_, null);\n};\n\ngoog.inherits(proto.tendermint.types.ValidatorSet, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.ValidatorSet.displayName = 'proto.tendermint.types.ValidatorSet';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tendermint.types.Validator = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.tendermint.types.Validator, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.Validator.displayName = 'proto.tendermint.types.Validator';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.tendermint.types.SimpleValidator = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.tendermint.types.SimpleValidator, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.SimpleValidator.displayName = 'proto.tendermint.types.SimpleValidator';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.tendermint.types.ValidatorSet.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tendermint.types.ValidatorSet.prototype.toObject = function (opt_includeInstance) {\n    return proto.tendermint.types.ValidatorSet.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tendermint.types.ValidatorSet} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tendermint.types.ValidatorSet.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(), proto.tendermint.types.Validator.toObject, includeInstance),\n      proposer: (f = msg.getProposer()) && proto.tendermint.types.Validator.toObject(includeInstance, f),\n      totalVotingPower: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.ValidatorSet}\n */\n\n\nproto.tendermint.types.ValidatorSet.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.ValidatorSet();\n  return proto.tendermint.types.ValidatorSet.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.ValidatorSet} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.ValidatorSet}\n */\n\n\nproto.tendermint.types.ValidatorSet.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.tendermint.types.Validator();\n        reader.readMessage(value, proto.tendermint.types.Validator.deserializeBinaryFromReader);\n        msg.addValidators(value);\n        break;\n\n      case 2:\n        var value = new proto.tendermint.types.Validator();\n        reader.readMessage(value, proto.tendermint.types.Validator.deserializeBinaryFromReader);\n        msg.setProposer(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setTotalVotingPower(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.types.ValidatorSet.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.ValidatorSet.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.ValidatorSet} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tendermint.types.ValidatorSet.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getValidatorsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.tendermint.types.Validator.serializeBinaryToWriter);\n  }\n\n  f = message.getProposer();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.tendermint.types.Validator.serializeBinaryToWriter);\n  }\n\n  f = message.getTotalVotingPower();\n\n  if (f !== 0) {\n    writer.writeInt64(3, f);\n  }\n};\n/**\n * repeated Validator validators = 1;\n * @return {!Array<!proto.tendermint.types.Validator>}\n */\n\n\nproto.tendermint.types.ValidatorSet.prototype.getValidatorsList = function () {\n  return (\n    /** @type{!Array<!proto.tendermint.types.Validator>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.types.Validator, 1)\n  );\n};\n/**\n * @param {!Array<!proto.tendermint.types.Validator>} value\n * @return {!proto.tendermint.types.ValidatorSet} returns this\n*/\n\n\nproto.tendermint.types.ValidatorSet.prototype.setValidatorsList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.tendermint.types.Validator=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.types.Validator}\n */\n\n\nproto.tendermint.types.ValidatorSet.prototype.addValidators = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tendermint.types.Validator, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.types.ValidatorSet} returns this\n */\n\n\nproto.tendermint.types.ValidatorSet.prototype.clearValidatorsList = function () {\n  return this.setValidatorsList([]);\n};\n/**\n * optional Validator proposer = 2;\n * @return {?proto.tendermint.types.Validator}\n */\n\n\nproto.tendermint.types.ValidatorSet.prototype.getProposer = function () {\n  return (\n    /** @type{?proto.tendermint.types.Validator} */\n    jspb.Message.getWrapperField(this, proto.tendermint.types.Validator, 2)\n  );\n};\n/**\n * @param {?proto.tendermint.types.Validator|undefined} value\n * @return {!proto.tendermint.types.ValidatorSet} returns this\n*/\n\n\nproto.tendermint.types.ValidatorSet.prototype.setProposer = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.ValidatorSet} returns this\n */\n\n\nproto.tendermint.types.ValidatorSet.prototype.clearProposer = function () {\n  return this.setProposer(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.types.ValidatorSet.prototype.hasProposer = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional int64 total_voting_power = 3;\n * @return {number}\n */\n\n\nproto.tendermint.types.ValidatorSet.prototype.getTotalVotingPower = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.ValidatorSet} returns this\n */\n\n\nproto.tendermint.types.ValidatorSet.prototype.setTotalVotingPower = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tendermint.types.Validator.prototype.toObject = function (opt_includeInstance) {\n    return proto.tendermint.types.Validator.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tendermint.types.Validator} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tendermint.types.Validator.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      address: msg.getAddress_asB64(),\n      pubKey: (f = msg.getPubKey()) && tendermint_crypto_keys_pb.PublicKey.toObject(includeInstance, f),\n      votingPower: jspb.Message.getFieldWithDefault(msg, 3, 0),\n      proposerPriority: jspb.Message.getFieldWithDefault(msg, 4, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.Validator}\n */\n\n\nproto.tendermint.types.Validator.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.Validator();\n  return proto.tendermint.types.Validator.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.Validator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.Validator}\n */\n\n\nproto.tendermint.types.Validator.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setAddress(value);\n        break;\n\n      case 2:\n        var value = new tendermint_crypto_keys_pb.PublicKey();\n        reader.readMessage(value, tendermint_crypto_keys_pb.PublicKey.deserializeBinaryFromReader);\n        msg.setPubKey(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setVotingPower(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setProposerPriority(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.types.Validator.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.Validator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.Validator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tendermint.types.Validator.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n\n  f = message.getPubKey();\n\n  if (f != null) {\n    writer.writeMessage(2, f, tendermint_crypto_keys_pb.PublicKey.serializeBinaryToWriter);\n  }\n\n  f = message.getVotingPower();\n\n  if (f !== 0) {\n    writer.writeInt64(3, f);\n  }\n\n  f = message.getProposerPriority();\n\n  if (f !== 0) {\n    writer.writeInt64(4, f);\n  }\n};\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.tendermint.types.Validator.prototype.getAddress = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\n\n\nproto.tendermint.types.Validator.prototype.getAddress_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getAddress())\n  );\n};\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.types.Validator.prototype.getAddress_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getAddress())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.types.Validator} returns this\n */\n\n\nproto.tendermint.types.Validator.prototype.setAddress = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n/**\n * optional tendermint.crypto.PublicKey pub_key = 2;\n * @return {?proto.tendermint.crypto.PublicKey}\n */\n\n\nproto.tendermint.types.Validator.prototype.getPubKey = function () {\n  return (\n    /** @type{?proto.tendermint.crypto.PublicKey} */\n    jspb.Message.getWrapperField(this, tendermint_crypto_keys_pb.PublicKey, 2)\n  );\n};\n/**\n * @param {?proto.tendermint.crypto.PublicKey|undefined} value\n * @return {!proto.tendermint.types.Validator} returns this\n*/\n\n\nproto.tendermint.types.Validator.prototype.setPubKey = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.Validator} returns this\n */\n\n\nproto.tendermint.types.Validator.prototype.clearPubKey = function () {\n  return this.setPubKey(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.types.Validator.prototype.hasPubKey = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional int64 voting_power = 3;\n * @return {number}\n */\n\n\nproto.tendermint.types.Validator.prototype.getVotingPower = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.Validator} returns this\n */\n\n\nproto.tendermint.types.Validator.prototype.setVotingPower = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * optional int64 proposer_priority = 4;\n * @return {number}\n */\n\n\nproto.tendermint.types.Validator.prototype.getProposerPriority = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 4, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.Validator} returns this\n */\n\n\nproto.tendermint.types.Validator.prototype.setProposerPriority = function (value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.tendermint.types.SimpleValidator.prototype.toObject = function (opt_includeInstance) {\n    return proto.tendermint.types.SimpleValidator.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.tendermint.types.SimpleValidator} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.tendermint.types.SimpleValidator.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      pubKey: (f = msg.getPubKey()) && tendermint_crypto_keys_pb.PublicKey.toObject(includeInstance, f),\n      votingPower: jspb.Message.getFieldWithDefault(msg, 2, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.SimpleValidator}\n */\n\n\nproto.tendermint.types.SimpleValidator.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.SimpleValidator();\n  return proto.tendermint.types.SimpleValidator.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.SimpleValidator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.SimpleValidator}\n */\n\n\nproto.tendermint.types.SimpleValidator.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new tendermint_crypto_keys_pb.PublicKey();\n        reader.readMessage(value, tendermint_crypto_keys_pb.PublicKey.deserializeBinaryFromReader);\n        msg.setPubKey(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {number} */\n        reader.readInt64();\n        msg.setVotingPower(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.tendermint.types.SimpleValidator.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.SimpleValidator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.SimpleValidator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.tendermint.types.SimpleValidator.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n\n  if (f != null) {\n    writer.writeMessage(1, f, tendermint_crypto_keys_pb.PublicKey.serializeBinaryToWriter);\n  }\n\n  f = message.getVotingPower();\n\n  if (f !== 0) {\n    writer.writeInt64(2, f);\n  }\n};\n/**\n * optional tendermint.crypto.PublicKey pub_key = 1;\n * @return {?proto.tendermint.crypto.PublicKey}\n */\n\n\nproto.tendermint.types.SimpleValidator.prototype.getPubKey = function () {\n  return (\n    /** @type{?proto.tendermint.crypto.PublicKey} */\n    jspb.Message.getWrapperField(this, tendermint_crypto_keys_pb.PublicKey, 1)\n  );\n};\n/**\n * @param {?proto.tendermint.crypto.PublicKey|undefined} value\n * @return {!proto.tendermint.types.SimpleValidator} returns this\n*/\n\n\nproto.tendermint.types.SimpleValidator.prototype.setPubKey = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.SimpleValidator} returns this\n */\n\n\nproto.tendermint.types.SimpleValidator.prototype.clearPubKey = function () {\n  return this.setPubKey(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.tendermint.types.SimpleValidator.prototype.hasPubKey = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional int64 voting_power = 2;\n * @return {number}\n */\n\n\nproto.tendermint.types.SimpleValidator.prototype.getVotingPower = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 2, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.SimpleValidator} returns this\n */\n\n\nproto.tendermint.types.SimpleValidator.prototype.setVotingPower = function (value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\ngoog.object.extend(exports, proto.tendermint.types);","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/client/node_modules/@bandprotocol/bandchain.js/proto/tendermint/types/validator_pb.js"],"names":["jspb","require","goog","global","Function","gogoproto_gogo_pb","object","extend","proto","tendermint_crypto_keys_pb","exportSymbol","tendermint","types","ValidatorSet","opt_data","Message","initialize","repeatedFields_","inherits","DEBUG","COMPILED","displayName","Validator","SimpleValidator","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","validatorsList","toObjectList","getValidatorsList","proposer","getProposer","totalVotingPower","getFieldWithDefault","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readMessage","addValidators","setProposer","readInt64","setTotalVotingPower","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","length","writeRepeatedMessage","writeMessage","getTotalVotingPower","writeInt64","getRepeatedWrapperField","setValidatorsList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearValidatorsList","getWrapperField","setWrapperField","clearProposer","hasProposer","getField","setProto3IntField","address","getAddress_asB64","pubKey","getPubKey","PublicKey","votingPower","proposerPriority","readBytes","setAddress","setPubKey","setVotingPower","setProposerPriority","getAddress_asU8","writeBytes","getVotingPower","getProposerPriority","getAddress","bytesAsB64","bytesAsU8","setProto3BytesField","clearPubKey","hasPubKey","exports"],"mappings":"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","sourcesContent":["// source: tendermint/types/validator.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar gogoproto_gogo_pb = require('../../gogoproto/gogo_pb.js');\ngoog.object.extend(proto, gogoproto_gogo_pb);\nvar tendermint_crypto_keys_pb = require('../../tendermint/crypto/keys_pb.js');\ngoog.object.extend(proto, tendermint_crypto_keys_pb);\ngoog.exportSymbol('proto.tendermint.types.SimpleValidator', null, global);\ngoog.exportSymbol('proto.tendermint.types.Validator', null, global);\ngoog.exportSymbol('proto.tendermint.types.ValidatorSet', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.types.ValidatorSet = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.tendermint.types.ValidatorSet.repeatedFields_, null);\n};\ngoog.inherits(proto.tendermint.types.ValidatorSet, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.ValidatorSet.displayName = 'proto.tendermint.types.ValidatorSet';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.types.Validator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.types.Validator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.Validator.displayName = 'proto.tendermint.types.Validator';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.tendermint.types.SimpleValidator = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.tendermint.types.SimpleValidator, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.tendermint.types.SimpleValidator.displayName = 'proto.tendermint.types.SimpleValidator';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.tendermint.types.ValidatorSet.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.types.ValidatorSet.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.types.ValidatorSet.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.types.ValidatorSet} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.ValidatorSet.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    validatorsList: jspb.Message.toObjectList(msg.getValidatorsList(),\n    proto.tendermint.types.Validator.toObject, includeInstance),\n    proposer: (f = msg.getProposer()) && proto.tendermint.types.Validator.toObject(includeInstance, f),\n    totalVotingPower: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.ValidatorSet}\n */\nproto.tendermint.types.ValidatorSet.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.ValidatorSet;\n  return proto.tendermint.types.ValidatorSet.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.ValidatorSet} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.ValidatorSet}\n */\nproto.tendermint.types.ValidatorSet.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.tendermint.types.Validator;\n      reader.readMessage(value,proto.tendermint.types.Validator.deserializeBinaryFromReader);\n      msg.addValidators(value);\n      break;\n    case 2:\n      var value = new proto.tendermint.types.Validator;\n      reader.readMessage(value,proto.tendermint.types.Validator.deserializeBinaryFromReader);\n      msg.setProposer(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalVotingPower(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.types.ValidatorSet.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.ValidatorSet.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.ValidatorSet} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.ValidatorSet.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValidatorsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.tendermint.types.Validator.serializeBinaryToWriter\n    );\n  }\n  f = message.getProposer();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.tendermint.types.Validator.serializeBinaryToWriter\n    );\n  }\n  f = message.getTotalVotingPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated Validator validators = 1;\n * @return {!Array<!proto.tendermint.types.Validator>}\n */\nproto.tendermint.types.ValidatorSet.prototype.getValidatorsList = function() {\n  return /** @type{!Array<!proto.tendermint.types.Validator>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.tendermint.types.Validator, 1));\n};\n\n\n/**\n * @param {!Array<!proto.tendermint.types.Validator>} value\n * @return {!proto.tendermint.types.ValidatorSet} returns this\n*/\nproto.tendermint.types.ValidatorSet.prototype.setValidatorsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.tendermint.types.Validator=} opt_value\n * @param {number=} opt_index\n * @return {!proto.tendermint.types.Validator}\n */\nproto.tendermint.types.ValidatorSet.prototype.addValidators = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tendermint.types.Validator, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.tendermint.types.ValidatorSet} returns this\n */\nproto.tendermint.types.ValidatorSet.prototype.clearValidatorsList = function() {\n  return this.setValidatorsList([]);\n};\n\n\n/**\n * optional Validator proposer = 2;\n * @return {?proto.tendermint.types.Validator}\n */\nproto.tendermint.types.ValidatorSet.prototype.getProposer = function() {\n  return /** @type{?proto.tendermint.types.Validator} */ (\n    jspb.Message.getWrapperField(this, proto.tendermint.types.Validator, 2));\n};\n\n\n/**\n * @param {?proto.tendermint.types.Validator|undefined} value\n * @return {!proto.tendermint.types.ValidatorSet} returns this\n*/\nproto.tendermint.types.ValidatorSet.prototype.setProposer = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.ValidatorSet} returns this\n */\nproto.tendermint.types.ValidatorSet.prototype.clearProposer = function() {\n  return this.setProposer(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.types.ValidatorSet.prototype.hasProposer = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 total_voting_power = 3;\n * @return {number}\n */\nproto.tendermint.types.ValidatorSet.prototype.getTotalVotingPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.ValidatorSet} returns this\n */\nproto.tendermint.types.ValidatorSet.prototype.setTotalVotingPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.types.Validator.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.types.Validator.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.types.Validator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.Validator.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    pubKey: (f = msg.getPubKey()) && tendermint_crypto_keys_pb.PublicKey.toObject(includeInstance, f),\n    votingPower: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    proposerPriority: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.Validator}\n */\nproto.tendermint.types.Validator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.Validator;\n  return proto.tendermint.types.Validator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.Validator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.Validator}\n */\nproto.tendermint.types.Validator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = new tendermint_crypto_keys_pb.PublicKey;\n      reader.readMessage(value,tendermint_crypto_keys_pb.PublicKey.deserializeBinaryFromReader);\n      msg.setPubKey(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVotingPower(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setProposerPriority(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.types.Validator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.Validator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.Validator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.Validator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPubKey();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      tendermint_crypto_keys_pb.PublicKey.serializeBinaryToWriter\n    );\n  }\n  f = message.getVotingPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getProposerPriority();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.tendermint.types.Validator.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.tendermint.types.Validator.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.tendermint.types.Validator.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.tendermint.types.Validator} returns this\n */\nproto.tendermint.types.Validator.prototype.setAddress = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional tendermint.crypto.PublicKey pub_key = 2;\n * @return {?proto.tendermint.crypto.PublicKey}\n */\nproto.tendermint.types.Validator.prototype.getPubKey = function() {\n  return /** @type{?proto.tendermint.crypto.PublicKey} */ (\n    jspb.Message.getWrapperField(this, tendermint_crypto_keys_pb.PublicKey, 2));\n};\n\n\n/**\n * @param {?proto.tendermint.crypto.PublicKey|undefined} value\n * @return {!proto.tendermint.types.Validator} returns this\n*/\nproto.tendermint.types.Validator.prototype.setPubKey = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.Validator} returns this\n */\nproto.tendermint.types.Validator.prototype.clearPubKey = function() {\n  return this.setPubKey(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.types.Validator.prototype.hasPubKey = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int64 voting_power = 3;\n * @return {number}\n */\nproto.tendermint.types.Validator.prototype.getVotingPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.Validator} returns this\n */\nproto.tendermint.types.Validator.prototype.setVotingPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 proposer_priority = 4;\n * @return {number}\n */\nproto.tendermint.types.Validator.prototype.getProposerPriority = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.Validator} returns this\n */\nproto.tendermint.types.Validator.prototype.setProposerPriority = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.tendermint.types.SimpleValidator.prototype.toObject = function(opt_includeInstance) {\n  return proto.tendermint.types.SimpleValidator.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.tendermint.types.SimpleValidator} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.SimpleValidator.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    pubKey: (f = msg.getPubKey()) && tendermint_crypto_keys_pb.PublicKey.toObject(includeInstance, f),\n    votingPower: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.tendermint.types.SimpleValidator}\n */\nproto.tendermint.types.SimpleValidator.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.tendermint.types.SimpleValidator;\n  return proto.tendermint.types.SimpleValidator.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.tendermint.types.SimpleValidator} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.tendermint.types.SimpleValidator}\n */\nproto.tendermint.types.SimpleValidator.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new tendermint_crypto_keys_pb.PublicKey;\n      reader.readMessage(value,tendermint_crypto_keys_pb.PublicKey.deserializeBinaryFromReader);\n      msg.setPubKey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVotingPower(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.tendermint.types.SimpleValidator.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.tendermint.types.SimpleValidator.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.tendermint.types.SimpleValidator} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.tendermint.types.SimpleValidator.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPubKey();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      tendermint_crypto_keys_pb.PublicKey.serializeBinaryToWriter\n    );\n  }\n  f = message.getVotingPower();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional tendermint.crypto.PublicKey pub_key = 1;\n * @return {?proto.tendermint.crypto.PublicKey}\n */\nproto.tendermint.types.SimpleValidator.prototype.getPubKey = function() {\n  return /** @type{?proto.tendermint.crypto.PublicKey} */ (\n    jspb.Message.getWrapperField(this, tendermint_crypto_keys_pb.PublicKey, 1));\n};\n\n\n/**\n * @param {?proto.tendermint.crypto.PublicKey|undefined} value\n * @return {!proto.tendermint.types.SimpleValidator} returns this\n*/\nproto.tendermint.types.SimpleValidator.prototype.setPubKey = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.tendermint.types.SimpleValidator} returns this\n */\nproto.tendermint.types.SimpleValidator.prototype.clearPubKey = function() {\n  return this.setPubKey(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.tendermint.types.SimpleValidator.prototype.hasPubKey = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 voting_power = 2;\n * @return {number}\n */\nproto.tendermint.types.SimpleValidator.prototype.getVotingPower = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.tendermint.types.SimpleValidator} returns this\n */\nproto.tendermint.types.SimpleValidator.prototype.setVotingPower = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto.tendermint.types);\n"]},"metadata":{},"sourceType":"script"}