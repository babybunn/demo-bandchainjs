{"ast":null,"code":"var _jsxFileName = \"/Users/pangp/Band/demo-bandchainjs/src/routes/DelegatorDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DelegatorDetails() {\n  _s();\n\n  const [deletions, setDeletions] = useState(null);\n  const wallet = useSelector(state => state.wallet);\n  let {\n    operator\n  } = useParams(); // const VALIDATOR_QUERY = gql`\n  //   query GetValidatorInfo($address: String!, $operator: String!) {\n  //     delegations_view(\n  //       where: { delegator_address: { _eq: $address }, operator_address: { _eq: $operator } }\n  //     ) {\n  //       operator_address\n  //       moniker\n  //     }\n  //     validators(where: { operator_address: { _eq: $operator } }) {\n  //       tokens\n  //     }\n  //     validators_aggregate {\n  //       aggregate {\n  //         sum {\n  //           tokens\n  //         }\n  //       }\n  //     }\n  //   }\n  // `;\n\n  const GET_VALIDATOR_DETAILS = gql`\n    subscription GetValidatorDetails($address: String!, $operator: String!) {\n      delegations_view(\n        where: { delegator_address: { _eq: $address }, operator_address: { _eq: $operator } }\n      ) {\n        amount\n        delegator_address\n        moniker\n        operator_address\n        reward\n      }\n      validators(where: { operator_address: { _eq: $operator } }) {\n        tokens\n      }\n      validators_aggregate {\n        aggregate {\n          sum {\n            tokens\n          }\n        }\n      }\n    }\n  `; // const { loading, error, data } = useQuery(GET_DELEGATIONS);\n  // const [GetValidator, { loading, error, data }] = useSubscription(GET_VALIDATOR_DETAILS);\n  //\n\n  const {\n    loading,\n    error,\n    data\n  } = useSubscription(GET_VALIDATOR_DETAILS, {\n    variables: {\n      address: wallet.address,\n      operator: operator\n    }\n  }); // console.log(data);\n  // const { amount, moniker, delegator_address, operator_address, reward, share_percentage } = data.delegations_view\n  // useEffect(() => {\n  //   GetValidator({ variables: { address: wallet.address, operator: operator } });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap -mx-2\",\n      children: loading ? \"Loading...\" : error ? `Error! ${error.message}` : data ? setDeletions(data.delegations_view) : \"0 Validator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DelegatorDetails, \"NreXX+yeM1Q++0XHGAsuOg4VSAo=\", false, function () {\n  return [useSelector, useParams, useSubscription];\n});\n\n_c = DelegatorDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"DelegatorDetails\");","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/src/routes/DelegatorDetails.js"],"names":["useParams","useEffect","useSelector","gql","useLazyQuery","useSubscription","DelegatorDetails","deletions","setDeletions","useState","wallet","state","operator","GET_VALIDATOR_DETAILS","loading","error","data","variables","address","message","delegations_view"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,GAAT,EAAcC,YAAd,EAA4BC,eAA5B,QAAmD,gBAAnD;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMC,MAAM,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B;AACA,MAAI;AAAEE,IAAAA;AAAF,MAAeZ,SAAS,EAA5B,CAHyC,CAIzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMa,qBAAqB,GAAGV,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAtBE,CAzByC,CAiDzC;AACA;AACA;;AACA,QAAM;AAAEW,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,eAAe,CAACQ,qBAAD,EAAwB;AACtEI,IAAAA,SAAS,EAAE;AAAEC,MAAAA,OAAO,EAAER,MAAM,CAACQ,OAAlB;AAA2BN,MAAAA,QAAQ,EAAEA;AAArC;AAD2D,GAAxB,CAAhD,CApDyC,CAwDzC;AAEA;AAEA;AACA;AACA;;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACGE,OAAO,GACJ,YADI,GAEJC,KAAK,GACJ,UAASA,KAAK,CAACI,OAAQ,EADnB,GAELH,IAAI,GACJR,YAAY,CAACQ,IAAI,CAACI,gBAAN,CADR,GAEJ;AAPN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA7EuBd,gB;UAEPJ,W,EACIF,S,EAiDcK,e;;;KApDXC,gB","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\n\nexport default function DelegatorDetails() {\n  const [deletions, setDeletions] = useState(null);\n  const wallet = useSelector((state) => state.wallet);\n  let { operator } = useParams();\n  // const VALIDATOR_QUERY = gql`\n  //   query GetValidatorInfo($address: String!, $operator: String!) {\n  //     delegations_view(\n  //       where: { delegator_address: { _eq: $address }, operator_address: { _eq: $operator } }\n  //     ) {\n  //       operator_address\n  //       moniker\n  //     }\n  //     validators(where: { operator_address: { _eq: $operator } }) {\n  //       tokens\n  //     }\n  //     validators_aggregate {\n  //       aggregate {\n  //         sum {\n  //           tokens\n  //         }\n  //       }\n  //     }\n  //   }\n  // `;\n\n  const GET_VALIDATOR_DETAILS = gql`\n    subscription GetValidatorDetails($address: String!, $operator: String!) {\n      delegations_view(\n        where: { delegator_address: { _eq: $address }, operator_address: { _eq: $operator } }\n      ) {\n        amount\n        delegator_address\n        moniker\n        operator_address\n        reward\n      }\n      validators(where: { operator_address: { _eq: $operator } }) {\n        tokens\n      }\n      validators_aggregate {\n        aggregate {\n          sum {\n            tokens\n          }\n        }\n      }\n    }\n  `;\n\n  // const { loading, error, data } = useQuery(GET_DELEGATIONS);\n  // const [GetValidator, { loading, error, data }] = useSubscription(GET_VALIDATOR_DETAILS);\n  //\n  const { loading, error, data } = useSubscription(GET_VALIDATOR_DETAILS, {\n    variables: { address: wallet.address, operator: operator },\n  });\n\n  // console.log(data);\n\n  // const { amount, moniker, delegator_address, operator_address, reward, share_percentage } = data.delegations_view\n\n  // useEffect(() => {\n  //   GetValidator({ variables: { address: wallet.address, operator: operator } });\n  // }, []);\n\n  return (\n    <div>\n      <div className=\"flex flex-wrap -mx-2\">\n        {loading\n          ? \"Loading...\"\n          : error\n          ? `Error! ${error.message}`\n          : data\n          ? setDeletions(data.delegations_view)\n          : \"0 Validator\"}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}