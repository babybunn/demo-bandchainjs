{"ast":null,"code":"var _jsxFileName = \"/Users/pangp/Band/demo-bandchainjs/src/components/AccountWithBalance.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { useQuery, gql, useLazyQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccountWithBalance() {\n  _s();\n\n  const wallet = useSelector(state => state.wallet);\n  const [fullAddress, setFullAddress] = useState(\"\");\n  const [copied, setcopied] = useState(false);\n  const [account, setaccount] = useState(\"\");\n  const [result, setresult] = useState(null);\n  const GET_BALANCE = gql`\n    query GetBalance($address: String!) {\n      accounts(where: { address: { _eq: address } }) {\n        balance\n      }\n    }\n  `;\n  const [getBalance, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(GET_BALANCE);\n  useEffect(() => {\n    if (wallet.address) {\n      const orgStr = wallet.address;\n      const subStr = orgStr.substr(0, 20) + \"...\" + orgStr.substr(orgStr.length - 4, orgStr.length);\n      setaccount(subStr);\n      setFullAddress(orgStr);\n      getBalance({\n        variables: {\n          address: orgStr\n        }\n      });\n      if (data) setresult(data);\n    } else {\n      setaccount(\"\");\n      setFullAddress(\"\");\n    }\n  }, [wallet]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-balance card-top border-b-2 border-black p-6 flex items-center justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-avatar flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar w-20 h-20 mr-5\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/avatar-4.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-bold\",\n          children: [account, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: fullAddress,\n            onCopy: () => setcopied(true),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ml-3 hover:text-orange group relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-6 w-6\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: \"2\",\n                  d: \"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tooltip-content absolute opacity-0 group-hover:opacity-100 text-xs bg-black rounded-md py-1 px-2 text-white transform -translate-x-1/2 left-1/2\",\n                children: copied ? \"Copied\" : \"Copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-balance\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-right text-gray-500\",\n        children: \"Available Balance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-3xl font-bold text-right\",\n        children: [result ? result.accounts.map(account => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: account.balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 24\n          }, this);\n        }) : \"0\", \" \", \"BAND\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountWithBalance, \"p0qb1qXybR6vfqiTDVfaiwcVLB4=\", false, function () {\n  return [useSelector, useLazyQuery];\n});\n\n_c = AccountWithBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountWithBalance\");","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/src/components/AccountWithBalance.js"],"names":["useState","useEffect","useSelector","CopyToClipboard","useQuery","gql","useLazyQuery","AccountWithBalance","wallet","state","fullAddress","setFullAddress","copied","setcopied","account","setaccount","result","setresult","GET_BALANCE","getBalance","loading","error","data","address","orgStr","subStr","substr","length","variables","accounts","map","balance"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { useQuery, gql, useLazyQuery } from \"@apollo/client\";\n\nexport default function AccountWithBalance() {\n  const wallet = useSelector((state) => state.wallet);\n  const [fullAddress, setFullAddress] = useState(\"\");\n  const [copied, setcopied] = useState(false);\n  const [account, setaccount] = useState(\"\");\n  const [result, setresult] = useState(null);\n\n  const GET_BALANCE = gql`\n    query GetBalance($address: String!) {\n      accounts(where: { address: { _eq: address } }) {\n        balance\n      }\n    }\n  `;\n\n  const [getBalance, { loading, error, data }] = useLazyQuery(GET_BALANCE);\n\n  useEffect(() => {\n    if (wallet.address) {\n      const orgStr = wallet.address;\n      const subStr = orgStr.substr(0, 20) + \"...\" + orgStr.substr(orgStr.length - 4, orgStr.length);\n      setaccount(subStr);\n      setFullAddress(orgStr);\n      getBalance({ variables: { address: orgStr } });\n      if (data) setresult(data);\n    } else {\n      setaccount(\"\");\n      setFullAddress(\"\");\n    }\n  }, [wallet]);\n\n  return (\n    <div className=\"card-balance card-top border-b-2 border-black p-6 flex items-center justify-between\">\n      <div className=\"account-avatar flex items-center\">\n        <div className=\"avatar w-20 h-20 mr-5\">\n          <img src=\"/images/avatar-4.png\" alt=\"\" />\n        </div>\n        <div className=\"flex items-center\">\n          <h3 className=\"text-lg font-bold\">{account} </h3>\n          <div className=\"relative\">\n            <CopyToClipboard text={fullAddress} onCopy={() => setcopied(true)}>\n              <button className=\"ml-3 hover:text-orange group relative\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n                  />\n                </svg>\n                <div className=\"tooltip-content absolute opacity-0 group-hover:opacity-100 text-xs bg-black rounded-md py-1 px-2 text-white transform -translate-x-1/2 left-1/2\">\n                  {copied ? \"Copied\" : \"Copy\"}\n                </div>\n              </button>\n            </CopyToClipboard>\n          </div>\n        </div>\n      </div>\n      <div className=\"account-balance\">\n        <p className=\"text-right text-gray-500\">Available Balance:</p>\n        <h3 className=\"text-3xl font-bold text-right\">\n          {result\n            ? result.accounts.map((account) => {\n                return <div>{account.balance}</div>;\n              })\n            : \"0\"}{\" \"}\n          BAND\n        </h3>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}