{"ast":null,"code":"var _jsxFileName = \"/Users/pangp/Band/demo-bandchainjs/src/routes/DelegatorDetails.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DelegatorDetails() {\n  _s();\n\n  const wallet = useSelector(state => state.wallet);\n  let {\n    operator\n  } = useParams(); // const VALIDATOR_QUERY = gql`\n  //   query GetValidatorInfo($address: String!, $operator: String!) {\n  //     delegations_view(\n  //       where: { delegator_address: { _eq: $address }, operator_address: { _eq: $operator } }\n  //     ) {\n  //       operator_address\n  //       moniker\n  //     }\n  //     validators(where: { operator_address: { _eq: $operator } }) {\n  //       tokens\n  //     }\n  //     validators_aggregate {\n  //       aggregate {\n  //         sum {\n  //           tokens\n  //         }\n  //       }\n  //     }\n  //   }\n  // `;\n\n  const GET_VALIDATOR_DETAILS = gql`\n    query GetValidatorDetails($address: String!, $operator: String!) {\n      delegations_view(\n        where: { delegator_address: { _eq: $address }, operator_address: { _eq: $operator } }\n      ) {\n        amount\n        delegator_address\n        moniker\n        operator_address\n        reward\n      }\n      validators(where: { operator_address: { _eq: $operator } }) {\n        tokens\n        commission_rate\n        validator_report_count {\n          count\n        }\n      }\n      validators_aggregate {\n        aggregate {\n          sum {\n            tokens\n          }\n        }\n      }\n    }\n  `; // const { loading, error, data } = useQuery(GET_DELEGATIONS);\n  // const [GetValidator, { loading, error, data }] = useSubscription(GET_VALIDATOR_DETAILS);\n  //\n\n  const [GetValidator, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(GET_VALIDATOR_DETAILS); // const { amount, moniker, delegator_address, operator_address, reward, share_percentage } = data.delegations_view\n\n  useEffect(() => {\n    GetValidator({\n      variables: {\n        address: wallet.address,\n        operator: operator\n      }\n    });\n  }, [wallet, GetValidator, operator]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap -mx-2\",\n      children: loading ? \"Loading...\" : error ? `Error! ${error.message}` : data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: data.delegations_view[0].moniker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex w-full gap-3 flex-wrap mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-pink-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mb-2 text-sm font-medium\",\n              children: \"Voting Power\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-2xl text-right font-bold\",\n              children: [(data.validators[0].tokens / data.validators_aggregate.aggregate.sum.tokens * 100).toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-indigo-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mb-2 text-sm font-medium\",\n              children: \"Commission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-2xl text-right font-bold\",\n              children: [(data.validators[0].commission_rate * 100).toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-yellow-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mb-2 text-sm font-medium\",\n              children: \"Uptime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-2xl text-right font-bold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-teal-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mb-2 text-sm font-medium\",\n              children: \"Oracle Reports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-2xl text-right font-bold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : \"0 Validator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DelegatorDetails, \"pCaYmc9r4o4g6QrTN8azQOPLQGI=\", false, function () {\n  return [useSelector, useParams, useLazyQuery];\n});\n\n_c = DelegatorDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"DelegatorDetails\");","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/src/routes/DelegatorDetails.js"],"names":["useParams","useEffect","useState","useSelector","gql","useLazyQuery","useSubscription","DelegatorDetails","wallet","state","operator","GET_VALIDATOR_DETAILS","GetValidator","loading","error","data","variables","address","message","delegations_view","moniker","validators","tokens","validators_aggregate","aggregate","sum","toFixed","commission_rate"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { gql, useLazyQuery, useSubscription } from \"@apollo/client\";\n\nexport default function DelegatorDetails() {\n  const wallet = useSelector((state) => state.wallet);\n  let { operator } = useParams();\n  // const VALIDATOR_QUERY = gql`\n  //   query GetValidatorInfo($address: String!, $operator: String!) {\n  //     delegations_view(\n  //       where: { delegator_address: { _eq: $address }, operator_address: { _eq: $operator } }\n  //     ) {\n  //       operator_address\n  //       moniker\n  //     }\n  //     validators(where: { operator_address: { _eq: $operator } }) {\n  //       tokens\n  //     }\n  //     validators_aggregate {\n  //       aggregate {\n  //         sum {\n  //           tokens\n  //         }\n  //       }\n  //     }\n  //   }\n  // `;\n\n  const GET_VALIDATOR_DETAILS = gql`\n    query GetValidatorDetails($address: String!, $operator: String!) {\n      delegations_view(\n        where: { delegator_address: { _eq: $address }, operator_address: { _eq: $operator } }\n      ) {\n        amount\n        delegator_address\n        moniker\n        operator_address\n        reward\n      }\n      validators(where: { operator_address: { _eq: $operator } }) {\n        tokens\n        commission_rate\n        validator_report_count {\n          count\n        }\n      }\n      validators_aggregate {\n        aggregate {\n          sum {\n            tokens\n          }\n        }\n      }\n    }\n  `;\n\n  // const { loading, error, data } = useQuery(GET_DELEGATIONS);\n  // const [GetValidator, { loading, error, data }] = useSubscription(GET_VALIDATOR_DETAILS);\n  //\n  const [GetValidator, { loading, error, data }] = useLazyQuery(GET_VALIDATOR_DETAILS);\n\n  // const { amount, moniker, delegator_address, operator_address, reward, share_percentage } = data.delegations_view\n\n  useEffect(() => {\n    GetValidator({ variables: { address: wallet.address, operator: operator } });\n  }, [wallet, GetValidator, operator]);\n\n  return (\n    <div>\n      <div className=\"flex flex-wrap -mx-2\">\n        {loading ? (\n          \"Loading...\"\n        ) : error ? (\n          `Error! ${error.message}`\n        ) : data ? (\n          <>\n            <h1 className=\"text-2xl mb-3\">\n              <strong>{data.delegations_view[0].moniker}</strong>\n            </h1>\n            <div className=\"flex w-full gap-3 flex-wrap mt-3\">\n              <div className=\"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-pink-400\">\n                <h3 className=\"mb-2 text-sm font-medium\">Voting Power</h3>\n                <h3 className=\"text-2xl text-right font-bold\">\n                  {(\n                    (data.validators[0].tokens / data.validators_aggregate.aggregate.sum.tokens) *\n                    100\n                  ).toFixed(2)}\n                  %\n                </h3>\n              </div>\n              <div className=\"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-indigo-400\">\n                <h3 className=\"mb-2 text-sm font-medium\">Commission</h3>\n                <h3 className=\"text-2xl text-right font-bold\">\n                  {(data.validators[0].commission_rate * 100).toFixed(2)}%\n                </h3>\n              </div>\n              <div className=\"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-yellow-400\">\n                <h3 className=\"mb-2 text-sm font-medium\">Uptime</h3>\n                <h3 className=\"text-2xl text-right font-bold\"></h3>\n              </div>\n              <div className=\"border-2 border-black rounded-xl p-5 flex-1 flex-grow bg-teal-400\">\n                <h3 className=\"mb-2 text-sm font-medium\">Oracle Reports</h3>\n                <h3 className=\"text-2xl text-right font-bold\"></h3>\n              </div>\n            </div>\n          </>\n        ) : (\n          \"0 Validator\"\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}