{"ast":null,"code":"// source: cosmos/tx/signing/v1beta1/signing.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar cosmos_crypto_multisig_v1beta1_multisig_pb = require('../../../../cosmos/crypto/multisig/v1beta1/multisig_pb.js');\n\ngoog.object.extend(proto, cosmos_crypto_multisig_v1beta1_multisig_pb);\n\nvar google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');\n\ngoog.object.extend(proto, google_protobuf_any_pb);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignMode', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptor', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SumCase', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptors', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.repeatedFields_, null);\n};\n\ngoog.inherits(proto.cosmos.tx.signing.v1beta1.SignatureDescriptors, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.displayName = 'proto.cosmos.tx.signing.v1beta1.SignatureDescriptors';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.cosmos.tx.signing.v1beta1.SignatureDescriptor, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.displayName = 'proto.cosmos.tx.signing.v1beta1.SignatureDescriptor';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.oneofGroups_);\n};\n\ngoog.inherits(proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.displayName = 'proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.displayName = 'proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.repeatedFields_, null);\n};\n\ngoog.inherits(proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.displayName = 'proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.repeatedFields_ = [1];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.toObject = function (opt_includeInstance) {\n    return proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      signaturesList: jspb.Message.toObjectList(msg.getSignaturesList(), proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptors();\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor();\n        reader.readMessage(value, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.deserializeBinaryFromReader);\n        msg.addSignatures(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSignaturesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(1, f, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.serializeBinaryToWriter);\n  }\n};\n/**\n * repeated SignatureDescriptor signatures = 1;\n * @return {!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor>}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.getSignaturesList = function () {\n  return (\n    /** @type{!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor, 1)\n  );\n};\n/**\n * @param {!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor>} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors} returns this\n*/\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.setSignaturesList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n/**\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor=} opt_value\n * @param {number=} opt_index\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.addSignatures = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors} returns this\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.clearSignaturesList = function () {\n  return this.setSignaturesList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.toObject = function (opt_includeInstance) {\n    return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      publicKey: (f = msg.getPublicKey()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),\n      data: (f = msg.getData()) && proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.toObject(includeInstance, f),\n      sequence: jspb.Message.getFieldWithDefault(msg, 3, 0)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor();\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new google_protobuf_any_pb.Any();\n        reader.readMessage(value, google_protobuf_any_pb.Any.deserializeBinaryFromReader);\n        msg.setPublicKey(value);\n        break;\n\n      case 2:\n        var value = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data();\n        reader.readMessage(value, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.deserializeBinaryFromReader);\n        msg.setData(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {number} */\n        reader.readUint64();\n        msg.setSequence(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getPublicKey();\n\n  if (f != null) {\n    writer.writeMessage(1, f, google_protobuf_any_pb.Any.serializeBinaryToWriter);\n  }\n\n  f = message.getData();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.serializeBinaryToWriter);\n  }\n\n  f = message.getSequence();\n\n  if (f !== 0) {\n    writer.writeUint64(3, f);\n  }\n};\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.oneofGroups_ = [[1, 2]];\n/**\n * @enum {number}\n */\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SumCase = {\n  SUM_NOT_SET: 0,\n  SINGLE: 1,\n  MULTI: 2\n};\n/**\n * @return {proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SumCase}\n */\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.getSumCase = function () {\n  return (\n    /** @type {proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SumCase} */\n    jspb.Message.computeOneofCase(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.oneofGroups_[0])\n  );\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.toObject = function (opt_includeInstance) {\n    return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      single: (f = msg.getSingle()) && proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.toObject(includeInstance, f),\n      multi: (f = msg.getMulti()) && proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data();\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single();\n        reader.readMessage(value, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.deserializeBinaryFromReader);\n        msg.setSingle(value);\n        break;\n\n      case 2:\n        var value = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi();\n        reader.readMessage(value, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.deserializeBinaryFromReader);\n        msg.setMulti(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getSingle();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.serializeBinaryToWriter);\n  }\n\n  f = message.getMulti();\n\n  if (f != null) {\n    writer.writeMessage(2, f, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.serializeBinaryToWriter);\n  }\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.toObject = function (opt_includeInstance) {\n    return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      mode: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      signature: msg.getSignature_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single();\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!proto.cosmos.tx.signing.v1beta1.SignMode} */\n        reader.readEnum();\n        msg.setMode(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setSignature(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMode();\n\n  if (f !== 0.0) {\n    writer.writeEnum(1, f);\n  }\n\n  f = message.getSignature_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(2, f);\n  }\n};\n/**\n * optional SignMode mode = 1;\n * @return {!proto.cosmos.tx.signing.v1beta1.SignMode}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.getMode = function () {\n  return (\n    /** @type {!proto.cosmos.tx.signing.v1beta1.SignMode} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {!proto.cosmos.tx.signing.v1beta1.SignMode} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} returns this\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.setMode = function (value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.getSignature = function () {\n  return (\n    /** @type {!(string|Uint8Array)} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.getSignature_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getSignature())\n  );\n};\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.getSignature_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getSignature())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} returns this\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.setSignature = function (value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.repeatedFields_ = [2];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.toObject = function (opt_includeInstance) {\n    return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      bitarray: (f = msg.getBitarray()) && cosmos_crypto_multisig_v1beta1_multisig_pb.CompactBitArray.toObject(includeInstance, f),\n      signaturesList: jspb.Message.toObjectList(msg.getSignaturesList(), proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.toObject, includeInstance)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi();\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new cosmos_crypto_multisig_v1beta1_multisig_pb.CompactBitArray();\n        reader.readMessage(value, cosmos_crypto_multisig_v1beta1_multisig_pb.CompactBitArray.deserializeBinaryFromReader);\n        msg.setBitarray(value);\n        break;\n\n      case 2:\n        var value = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data();\n        reader.readMessage(value, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.deserializeBinaryFromReader);\n        msg.addSignatures(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getBitarray();\n\n  if (f != null) {\n    writer.writeMessage(1, f, cosmos_crypto_multisig_v1beta1_multisig_pb.CompactBitArray.serializeBinaryToWriter);\n  }\n\n  f = message.getSignaturesList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(2, f, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.serializeBinaryToWriter);\n  }\n};\n/**\n * optional cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;\n * @return {?proto.cosmos.crypto.multisig.v1beta1.CompactBitArray}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.getBitarray = function () {\n  return (\n    /** @type{?proto.cosmos.crypto.multisig.v1beta1.CompactBitArray} */\n    jspb.Message.getWrapperField(this, cosmos_crypto_multisig_v1beta1_multisig_pb.CompactBitArray, 1)\n  );\n};\n/**\n * @param {?proto.cosmos.crypto.multisig.v1beta1.CompactBitArray|undefined} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} returns this\n*/\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.setBitarray = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} returns this\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.clearBitarray = function () {\n  return this.setBitarray(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.hasBitarray = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * repeated Data signatures = 2;\n * @return {!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data>}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.getSignaturesList = function () {\n  return (\n    /** @type{!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data>} */\n    jspb.Message.getRepeatedWrapperField(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, 2)\n  );\n};\n/**\n * @param {!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data>} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} returns this\n*/\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.setSignaturesList = function (value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n/**\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data=} opt_value\n * @param {number=} opt_index\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.addSignatures = function (opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} returns this\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.clearSignaturesList = function () {\n  return this.setSignaturesList([]);\n};\n/**\n * optional Single single = 1;\n * @return {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.getSingle = function () {\n  return (\n    /** @type{?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} */\n    jspb.Message.getWrapperField(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single, 1)\n  );\n};\n/**\n * @param {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single|undefined} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} returns this\n*/\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.setSingle = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} returns this\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.clearSingle = function () {\n  return this.setSingle(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.hasSingle = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Multi multi = 2;\n * @return {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.getMulti = function () {\n  return (\n    /** @type{?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} */\n    jspb.Message.getWrapperField(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi, 2)\n  );\n};\n/**\n * @param {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi|undefined} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} returns this\n*/\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.setMulti = function (value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.oneofGroups_[0], value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} returns this\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.clearMulti = function () {\n  return this.setMulti(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.hasMulti = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional google.protobuf.Any public_key = 1;\n * @return {?proto.google.protobuf.Any}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.getPublicKey = function () {\n  return (\n    /** @type{?proto.google.protobuf.Any} */\n    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1)\n  );\n};\n/**\n * @param {?proto.google.protobuf.Any|undefined} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} returns this\n*/\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.setPublicKey = function (value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} returns this\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.clearPublicKey = function () {\n  return this.setPublicKey(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.hasPublicKey = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n/**\n * optional Data data = 2;\n * @return {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.getData = function () {\n  return (\n    /** @type{?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} */\n    jspb.Message.getWrapperField(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, 2)\n  );\n};\n/**\n * @param {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data|undefined} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} returns this\n*/\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.setData = function (value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n/**\n * Clears the message field making it undefined.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} returns this\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.clearData = function () {\n  return this.setData(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.hasData = function () {\n  return jspb.Message.getField(this, 2) != null;\n};\n/**\n * optional uint64 sequence = 3;\n * @return {number}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.getSequence = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 3, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} returns this\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.setSequence = function (value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n/**\n * @enum {number}\n */\n\n\nproto.cosmos.tx.signing.v1beta1.SignMode = {\n  SIGN_MODE_UNSPECIFIED: 0,\n  SIGN_MODE_DIRECT: 1,\n  SIGN_MODE_TEXTUAL: 2,\n  SIGN_MODE_LEGACY_AMINO_JSON: 127\n};\ngoog.object.extend(exports, proto.cosmos.tx.signing.v1beta1);","map":{"version":3,"sources":["/Users/pangp/Band/demo-bandchainjs/node_modules/@bandprotocol/bandchain.js/proto/cosmos/tx/signing/v1beta1/signing_pb.js"],"names":["jspb","require","goog","global","Function","cosmos_crypto_multisig_v1beta1_multisig_pb","object","extend","proto","google_protobuf_any_pb","exportSymbol","cosmos","tx","signing","v1beta1","SignatureDescriptors","opt_data","Message","initialize","repeatedFields_","inherits","DEBUG","COMPILED","displayName","SignatureDescriptor","Data","oneofGroups_","Single","Multi","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","signaturesList","toObjectList","getSignaturesList","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readMessage","addSignatures","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","length","writeRepeatedMessage","getRepeatedWrapperField","setSignaturesList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearSignaturesList","publicKey","getPublicKey","Any","data","getData","sequence","getFieldWithDefault","setPublicKey","setData","readUint64","setSequence","writeMessage","getSequence","writeUint64","SumCase","SUM_NOT_SET","SINGLE","MULTI","getSumCase","computeOneofCase","single","getSingle","multi","getMulti","setSingle","setMulti","mode","signature","getSignature_asB64","readEnum","setMode","readBytes","setSignature","getMode","writeEnum","getSignature_asU8","writeBytes","setProto3EnumField","getSignature","bytesAsB64","bytesAsU8","setProto3BytesField","bitarray","getBitarray","CompactBitArray","setBitarray","getWrapperField","setWrapperField","clearBitarray","hasBitarray","getField","setOneofWrapperField","clearSingle","hasSingle","clearMulti","hasMulti","clearPublicKey","hasPublicKey","clearData","hasData","setProto3IntField","SignMode","SIGN_MODE_UNSPECIFIED","SIGN_MODE_DIRECT","SIGN_MODE_TEXTUAL","SIGN_MODE_LEGACY_AMINO_JSON","exports"],"mappings":"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","sourcesContent":["// source: cosmos/tx/signing/v1beta1/signing.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar cosmos_crypto_multisig_v1beta1_multisig_pb = require('../../../../cosmos/crypto/multisig/v1beta1/multisig_pb.js');\ngoog.object.extend(proto, cosmos_crypto_multisig_v1beta1_multisig_pb);\nvar google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');\ngoog.object.extend(proto, google_protobuf_any_pb);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignMode', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptor', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SumCase', null, global);\ngoog.exportSymbol('proto.cosmos.tx.signing.v1beta1.SignatureDescriptors', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.repeatedFields_, null);\n};\ngoog.inherits(proto.cosmos.tx.signing.v1beta1.SignatureDescriptors, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.displayName = 'proto.cosmos.tx.signing.v1beta1.SignatureDescriptors';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.cosmos.tx.signing.v1beta1.SignatureDescriptor, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.displayName = 'proto.cosmos.tx.signing.v1beta1.SignatureDescriptor';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.oneofGroups_);\n};\ngoog.inherits(proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.displayName = 'proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.displayName = 'proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.repeatedFields_, null);\n};\ngoog.inherits(proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.displayName = 'proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi';\n}\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.toObject = function(opt_includeInstance) {\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    signaturesList: jspb.Message.toObjectList(msg.getSignaturesList(),\n    proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptors;\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor;\n      reader.readMessage(value,proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.deserializeBinaryFromReader);\n      msg.addSignatures(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptors.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSignaturesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated SignatureDescriptor signatures = 1;\n * @return {!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor>}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.getSignaturesList = function() {\n  return /** @type{!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor, 1));\n};\n\n\n/**\n * @param {!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor>} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors} returns this\n*/\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.setSignaturesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor=} opt_value\n * @param {number=} opt_index\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.addSignatures = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptors} returns this\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptors.prototype.clearSignaturesList = function() {\n  return this.setSignaturesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.toObject = function(opt_includeInstance) {\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    publicKey: (f = msg.getPublicKey()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),\n    data: (f = msg.getData()) && proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.toObject(includeInstance, f),\n    sequence: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor;\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new google_protobuf_any_pb.Any;\n      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);\n      msg.setPublicKey(value);\n      break;\n    case 2:\n      var value = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data;\n      reader.readMessage(value,proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.deserializeBinaryFromReader);\n      msg.setData(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readUint64());\n      msg.setSequence(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPublicKey();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      google_protobuf_any_pb.Any.serializeBinaryToWriter\n    );\n  }\n  f = message.getData();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.serializeBinaryToWriter\n    );\n  }\n  f = message.getSequence();\n  if (f !== 0) {\n    writer.writeUint64(\n      3,\n      f\n    );\n  }\n};\n\n\n\n/**\n * Oneof group definitions for this message. Each group defines the field\n * numbers belonging to that group. When of these fields' value is set, all\n * other fields in the group are cleared. During deserialization, if multiple\n * fields are encountered for a group, only the last value seen will be kept.\n * @private {!Array<!Array<number>>}\n * @const\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.oneofGroups_ = [[1,2]];\n\n/**\n * @enum {number}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SumCase = {\n  SUM_NOT_SET: 0,\n  SINGLE: 1,\n  MULTI: 2\n};\n\n/**\n * @return {proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SumCase}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.getSumCase = function() {\n  return /** @type {proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.SumCase} */(jspb.Message.computeOneofCase(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.oneofGroups_[0]));\n};\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.toObject = function(opt_includeInstance) {\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    single: (f = msg.getSingle()) && proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.toObject(includeInstance, f),\n    multi: (f = msg.getMulti()) && proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data;\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single;\n      reader.readMessage(value,proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.deserializeBinaryFromReader);\n      msg.setSingle(value);\n      break;\n    case 2:\n      var value = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi;\n      reader.readMessage(value,proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.deserializeBinaryFromReader);\n      msg.setMulti(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSingle();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.serializeBinaryToWriter\n    );\n  }\n  f = message.getMulti();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.toObject = function(opt_includeInstance) {\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    mode: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    signature: msg.getSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single;\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.cosmos.tx.signing.v1beta1.SignMode} */ (reader.readEnum());\n      msg.setMode(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMode();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional SignMode mode = 1;\n * @return {!proto.cosmos.tx.signing.v1beta1.SignMode}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.getMode = function() {\n  return /** @type {!proto.cosmos.tx.signing.v1beta1.SignMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {!proto.cosmos.tx.signing.v1beta1.SignMode} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} returns this\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.setMode = function(value) {\n  return jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional bytes signature = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes signature = 2;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} returns this\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single.prototype.setSignature = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.toObject = function(opt_includeInstance) {\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    bitarray: (f = msg.getBitarray()) && cosmos_crypto_multisig_v1beta1_multisig_pb.CompactBitArray.toObject(includeInstance, f),\n    signaturesList: jspb.Message.toObjectList(msg.getSignaturesList(),\n    proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi;\n  return proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new cosmos_crypto_multisig_v1beta1_multisig_pb.CompactBitArray;\n      reader.readMessage(value,cosmos_crypto_multisig_v1beta1_multisig_pb.CompactBitArray.deserializeBinaryFromReader);\n      msg.setBitarray(value);\n      break;\n    case 2:\n      var value = new proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data;\n      reader.readMessage(value,proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.deserializeBinaryFromReader);\n      msg.addSignatures(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBitarray();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      cosmos_crypto_multisig_v1beta1_multisig_pb.CompactBitArray.serializeBinaryToWriter\n    );\n  }\n  f = message.getSignaturesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;\n * @return {?proto.cosmos.crypto.multisig.v1beta1.CompactBitArray}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.getBitarray = function() {\n  return /** @type{?proto.cosmos.crypto.multisig.v1beta1.CompactBitArray} */ (\n    jspb.Message.getWrapperField(this, cosmos_crypto_multisig_v1beta1_multisig_pb.CompactBitArray, 1));\n};\n\n\n/**\n * @param {?proto.cosmos.crypto.multisig.v1beta1.CompactBitArray|undefined} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} returns this\n*/\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.setBitarray = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} returns this\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.clearBitarray = function() {\n  return this.setBitarray(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.hasBitarray = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated Data signatures = 2;\n * @return {!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data>}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.getSignaturesList = function() {\n  return /** @type{!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, 2));\n};\n\n\n/**\n * @param {!Array<!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data>} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} returns this\n*/\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.setSignaturesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data=} opt_value\n * @param {number=} opt_index\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.addSignatures = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} returns this\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi.prototype.clearSignaturesList = function() {\n  return this.setSignaturesList([]);\n};\n\n\n/**\n * optional Single single = 1;\n * @return {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.getSingle = function() {\n  return /** @type{?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single} */ (\n    jspb.Message.getWrapperField(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single, 1));\n};\n\n\n/**\n * @param {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single|undefined} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} returns this\n*/\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.setSingle = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 1, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} returns this\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.clearSingle = function() {\n  return this.setSingle(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.hasSingle = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Multi multi = 2;\n * @return {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.getMulti = function() {\n  return /** @type{?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi} */ (\n    jspb.Message.getWrapperField(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi, 2));\n};\n\n\n/**\n * @param {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi|undefined} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} returns this\n*/\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.setMulti = function(value) {\n  return jspb.Message.setOneofWrapperField(this, 2, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.oneofGroups_[0], value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} returns this\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.clearMulti = function() {\n  return this.setMulti(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.prototype.hasMulti = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional google.protobuf.Any public_key = 1;\n * @return {?proto.google.protobuf.Any}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.getPublicKey = function() {\n  return /** @type{?proto.google.protobuf.Any} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));\n};\n\n\n/**\n * @param {?proto.google.protobuf.Any|undefined} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} returns this\n*/\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.setPublicKey = function(value) {\n  return jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} returns this\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.clearPublicKey = function() {\n  return this.setPublicKey(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.hasPublicKey = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Data data = 2;\n * @return {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.getData = function() {\n  return /** @type{?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data} */ (\n    jspb.Message.getWrapperField(this, proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data, 2));\n};\n\n\n/**\n * @param {?proto.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data|undefined} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} returns this\n*/\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.setData = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} returns this\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.clearData = function() {\n  return this.setData(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.hasData = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional uint64 sequence = 3;\n * @return {number}\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.getSequence = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.cosmos.tx.signing.v1beta1.SignatureDescriptor} returns this\n */\nproto.cosmos.tx.signing.v1beta1.SignatureDescriptor.prototype.setSequence = function(value) {\n  return jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.cosmos.tx.signing.v1beta1.SignMode = {\n  SIGN_MODE_UNSPECIFIED: 0,\n  SIGN_MODE_DIRECT: 1,\n  SIGN_MODE_TEXTUAL: 2,\n  SIGN_MODE_LEGACY_AMINO_JSON: 127\n};\n\ngoog.object.extend(exports, proto.cosmos.tx.signing.v1beta1);\n"]},"metadata":{},"sourceType":"script"}